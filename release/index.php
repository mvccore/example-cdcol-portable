<?php
namespace{
error_reporting(5);
define('PACKAGER_PHP_FILE_BASE',str_replace('\\','/',__DIR__));class Packager_Php_Wrapper{const FS_MODE='PHP_PRESERVE_PACKAGE';public static$ScriptFilename;public static$BasePath;public static$BasePathLength;public static$Context=NULL;public static$NewContextContents=array();public static$Contents=array();public static$Info=array(/*____\Packager_Php_Wrapper::$Info____*/
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field/Props.php'=>array('index'=>-1,'mtime'=>1536593610,'size'=>8826,'lines'=>array(0,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/IField.php'=>array('index'=>-1,'mtime'=>1538139256,'size'=>27677,'lines'=>array(1,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field/Setters.php'=>array('index'=>-1,'mtime'=>1536597730,'size'=>16388,'lines'=>array(2,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field/Getters.php'=>array('index'=>-1,'mtime'=>1536593590,'size'=>8907,'lines'=>array(3,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field/Rendering.php'=>array('index'=>-1,'mtime'=>1540288322,'size'=>11999,'lines'=>array(4,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field/Props/Required.php'=>array('index'=>-1,'mtime'=>1535537808,'size'=>3304,'lines'=>array(5,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field/Props/AccessKey.php'=>array('index'=>-1,'mtime'=>1535537812,'size'=>3123,'lines'=>array(6,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field/Props/Disabled.php'=>array('index'=>-1,'mtime'=>1535537808,'size'=>4613,'lines'=>array(7,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field/Props/AutoFocus.php'=>array('index'=>-1,'mtime'=>1535537808,'size'=>4504,'lines'=>array(8,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field/Props/TabIndex.php'=>array('index'=>-1,'mtime'=>1535537808,'size'=>6537,'lines'=>array(9,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field/Props/ReadOnly.php'=>array('index'=>-1,'mtime'=>1535537808,'size'=>4332,'lines'=>array(10,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Fields/IVisibleField.php'=>array('index'=>-1,'mtime'=>1536650151,'size'=>11722,'lines'=>array(11,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/IValidator.php'=>array('index'=>-1,'mtime'=>1538138984,'size'=>2389,'lines'=>array(12,1)),
'/vendor/mvccore/mvccore/src/MvcCore/IController.php'=>array('index'=>-1,'mtime'=>1539167766,'size'=>18847,'lines'=>array(13,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Controller/Rendering.php'=>array('index'=>-1,'mtime'=>1539866227,'size'=>7868,'lines'=>array(14,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Controller/PropsGettersSetters.php'=>array('index'=>-1,'mtime'=>1539866235,'size'=>14976,'lines'=>array(15,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Controller/Dispatching.php'=>array('index'=>-1,'mtime'=>1540378442,'size'=>13282,'lines'=>array(16,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field/Props/AutoComplete.php'=>array('index'=>-1,'mtime'=>1535537808,'size'=>2435,'lines'=>array(17,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Fields/ILabel.php'=>array('index'=>-1,'mtime'=>1535623539,'size'=>7476,'lines'=>array(18,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field/Props/Label.php'=>array('index'=>-1,'mtime'=>1535537808,'size'=>10015,'lines'=>array(19,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Model/Props.php'=>array('index'=>-1,'mtime'=>1539866373,'size'=>4484,'lines'=>array(20,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Model/DbConnection.php'=>array('index'=>-1,'mtime'=>1539874738,'size'=>9621,'lines'=>array(21,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field/Props/PlaceHolder.php'=>array('index'=>-1,'mtime'=>1535537808,'size'=>2374,'lines'=>array(22,1)),
'/vendor/mvccore/mvccore/src/MvcCore/IModel.php'=>array('index'=>-1,'mtime'=>1538125260,'size'=>7892,'lines'=>array(23,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Model/DataMethods.php'=>array('index'=>-1,'mtime'=>1539870263,'size'=>5749,'lines'=>array(24,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Model/Instancing.php'=>array('index'=>-1,'mtime'=>1539866916,'size'=>3389,'lines'=>array(25,1)),
'/vendor/mvccore/ext-form-field-text/src/MvcCore/Ext/Forms/Field/Props/MinMaxLength.php'=>array('index'=>-1,'mtime'=>1535537808,'size'=>2315,'lines'=>array(26,1)),
'/vendor/mvccore/ext-form-field-text/src/MvcCore/Ext/Forms/Fields/IMinMaxLength.php'=>array('index'=>-1,'mtime'=>1535622329,'size'=>1540,'lines'=>array(27,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Fields/IDataList.php'=>array('index'=>-1,'mtime'=>1535621680,'size'=>1801,'lines'=>array(28,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field/Props/DataList.php'=>array('index'=>-1,'mtime'=>1536650253,'size'=>2150,'lines'=>array(29,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field/Props/InputMode.php'=>array('index'=>-1,'mtime'=>1535537808,'size'=>3787,'lines'=>array(30,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/UserAndRole/Permissions.php'=>array('index'=>-1,'mtime'=>1527838908,'size'=>2705,'lines'=>array(31,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/UserAndRole/Base.php'=>array('index'=>-1,'mtime'=>1527163452,'size'=>2180,'lines'=>array(32,1)),
'/vendor/mvccore/ext-form-field-text/src/MvcCore/Ext/Forms/Fields/IPattern.php'=>array('index'=>-1,'mtime'=>1535625397,'size'=>1830,'lines'=>array(33,1)),
'/vendor/mvccore/ext-form-field-text/src/MvcCore/Ext/Forms/Field/Props/Pattern.php'=>array('index'=>-1,'mtime'=>1536774078,'size'=>2470,'lines'=>array(34,1)),
'/vendor/mvccore/ext-form-field-text/src/MvcCore/Ext/Forms/Field/Props/SpellCheck.php'=>array('index'=>-1,'mtime'=>1535537808,'size'=>3215,'lines'=>array(35,1)),
'/vendor/mvccore/ext-form-field-numeric/src/MvcCore/Ext/Forms/Fields/IMinMaxStepNumbers.php'=>array('index'=>-1,'mtime'=>1536932162,'size'=>2143,'lines'=>array(36,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/User/Roles.php'=>array('index'=>-1,'mtime'=>1527838908,'size'=>4780,'lines'=>array(37,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/User/Base.php'=>array('index'=>-1,'mtime'=>1527163452,'size'=>3564,'lines'=>array(38,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/User/Auth.php'=>array('index'=>-1,'mtime'=>1538484888,'size'=>6644,'lines'=>array(39,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/IUser.php'=>array('index'=>-1,'mtime'=>1538125260,'size'=>9756,'lines'=>array(40,1)),
'/vendor/mvccore/ext-form-field-numeric/src/MvcCore/Ext/Forms/Field/Props/MinMaxStepNumbers.php'=>array('index'=>-1,'mtime'=>1536932175,'size'=>3017,'lines'=>array(41,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field/Props/Size.php'=>array('index'=>-1,'mtime'=>1535537808,'size'=>3697,'lines'=>array(42,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basic/PropsGettersSetters.php'=>array('index'=>-1,'mtime'=>1540370655,'size'=>30322,'lines'=>array(43,1)),
'/vendor/mvccore/mvccore/src/MvcCore/IRouter.php'=>array('index'=>-1,'mtime'=>1540312150,'size'=>25925,'lines'=>array(44,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Router/Canonical.php'=>array('index'=>-1,'mtime'=>1540315832,'size'=>3902,'lines'=>array(45,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Router/GettersSetters.php'=>array('index'=>-1,'mtime'=>1539932432,'size'=>6652,'lines'=>array(46,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Router/RouteMethods.php'=>array('index'=>-1,'mtime'=>1539932390,'size'=>16285,'lines'=>array(47,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Router/UrlBuilding.php'=>array('index'=>-1,'mtime'=>1540377050,'size'=>4745,'lines'=>array(48,1)),
'/vendor/mvccore/ext-router-extended/src/MvcCore/Ext/Routers/Extendeds/Url.php'=>array('index'=>-1,'mtime'=>1539794772,'size'=>2927,'lines'=>array(49,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basic/Handling.php'=>array('index'=>-1,'mtime'=>1540370668,'size'=>5665,'lines'=>array(50,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Router/RewriteRouting.php'=>array('index'=>-1,'mtime'=>1540375579,'size'=>7486,'lines'=>array(51,1)),
'/vendor/mvccore/ext-router-extended/src/MvcCore/Ext/Routers/Extendeds/RedirectHelpers.php'=>array('index'=>-1,'mtime'=>1539793319,'size'=>2302,'lines'=>array(52,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Router/Routing.php'=>array('index'=>-1,'mtime'=>1540376988,'size'=>13501,'lines'=>array(53,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/IAuth.php'=>array('index'=>-1,'mtime'=>1538487310,'size'=>14509,'lines'=>array(54,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Router/Props.php'=>array('index'=>-1,'mtime'=>1540213629,'size'=>5694,'lines'=>array(55,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Router/Redirecting.php'=>array('index'=>-1,'mtime'=>1539933097,'size'=>2277,'lines'=>array(56,1)),
'/vendor/mvccore/ext-router-extended/src/MvcCore/Ext/Routers/Extendeds/Preparing.php'=>array('index'=>-1,'mtime'=>1539792170,'size'=>2852,'lines'=>array(57,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Router/Instancing.php'=>array('index'=>-1,'mtime'=>1539887376,'size'=>5213,'lines'=>array(58,1)),
'/vendor/mvccore/ext-router-extended/src/MvcCore/Ext/Routers/Extendeds/PropsGettersSetters.php'=>array('index'=>-1,'mtime'=>1539792848,'size'=>9496,'lines'=>array(59,1)),
'/vendor/mvccore/ext-router-extended/src/MvcCore/Ext/Routers/IExtended.php'=>array('index'=>-1,'mtime'=>1538488174,'size'=>5081,'lines'=>array(60,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field/Props/Multiple.php'=>array('index'=>-1,'mtime'=>1535537808,'size'=>3441,'lines'=>array(61,1)),
'/vendor/mvccore/mvccore/src/MvcCore/IRequest.php'=>array('index'=>-1,'mtime'=>1540304510,'size'=>27398,'lines'=>array(62,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Fields/IMultiple.php'=>array('index'=>-1,'mtime'=>1535624753,'size'=>2637,'lines'=>array(63,1)),
'/vendor/mvccore/ext-view-helper/src/MvcCore/Ext/Views/Helpers/IHelper.php'=>array('index'=>-1,'mtime'=>1538125260,'size'=>2102,'lines'=>array(64,1)),
'/vendor/mvccore/ext-router-extended/src/MvcCore/Ext/Routers/Extendeds/Redirect.php'=>array('index'=>-1,'mtime'=>1540304875,'size'=>2186,'lines'=>array(65,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Route/InternalInits.php'=>array('index'=>-1,'mtime'=>1540212036,'size'=>16467,'lines'=>array(66,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Route/Instancing.php'=>array('index'=>-1,'mtime'=>1540375223,'size'=>8761,'lines'=>array(67,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Route/GettersSetters.php'=>array('index'=>-1,'mtime'=>1540373073,'size'=>21258,'lines'=>array(68,1)),
'/vendor/mvccore/ext-router-media/src/MvcCore/Ext/Routers/Media/PropsGettersSetters.php'=>array('index'=>-1,'mtime'=>1539794465,'size'=>5773,'lines'=>array(69,1)),
'/vendor/mvccore/mvccore/src/MvcCore/IRoute.php'=>array('index'=>-1,'mtime'=>1540373923,'size'=>29782,'lines'=>array(70,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Route/UrlBuilding.php'=>array('index'=>-1,'mtime'=>1540282911,'size'=>15380,'lines'=>array(71,1)),
'/vendor/mvccore/ext-router-localization/src/MvcCore/Ext/Routers/Localization/RewriteRouting.php'=>array('index'=>-1,'mtime'=>1540374639,'size'=>3588,'lines'=>array(72,1)),
'/vendor/mvccore/ext-router-media/src/MvcCore/Ext/Routers/Media/PreRouting.php'=>array('index'=>-1,'mtime'=>1540287165,'size'=>7406,'lines'=>array(73,1)),
'/vendor/mvccore/ext-router-media/src/MvcCore/Ext/Routers/Media/Preparing.php'=>array('index'=>-1,'mtime'=>1540286349,'size'=>4986,'lines'=>array(74,1)),
'/vendor/mvccore/ext-router-media/src/MvcCore/Ext/Routers/IMedia.php'=>array('index'=>-1,'mtime'=>1539777172,'size'=>3779,'lines'=>array(75,1)),
'/vendor/mvccore/ext-router-localization/src/MvcCore/Ext/Routers/Localization/PropsGettersSetters.php'=>array('index'=>-1,'mtime'=>1539932671,'size'=>29964,'lines'=>array(76,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Fields/ISubmit.php'=>array('index'=>-1,'mtime'=>1536650202,'size'=>2800,'lines'=>array(77,1)),
'/vendor/mvccore/ext-router-localization/src/MvcCore/Ext/Routers/Localization/PreRouting.php'=>array('index'=>-1,'mtime'=>1540379022,'size'=>8558,'lines'=>array(78,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/IForm.php'=>array('index'=>-1,'mtime'=>1538137527,'size'=>63899,'lines'=>array(79,1)),
'/vendor/mvccore/ext-router-localization/src/MvcCore/Ext/Routers/ILocalization.php'=>array('index'=>-1,'mtime'=>1539707606,'size'=>11380,'lines'=>array(80,1)),
'/vendor/mvccore/ext-form-field-button/src/MvcCore/Ext/Forms/Field/Props/FormAttrs.php'=>array('index'=>-1,'mtime'=>1535537808,'size'=>12506,'lines'=>array(81,1)),
'/vendor/mvccore/ext-form-field-button/src/MvcCore/Ext/Forms/Field/Props/Submit.php'=>array('index'=>-1,'mtime'=>1535625818,'size'=>3530,'lines'=>array(82,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Route/Props.php'=>array('index'=>-1,'mtime'=>1540372629,'size'=>9795,'lines'=>array(83,1)),
'/vendor/mvccore/ext-router-localization/src/MvcCore/Ext/Routers/Localization/Preparing.php'=>array('index'=>-1,'mtime'=>1540286882,'size'=>9108,'lines'=>array(84,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Route/Matching.php'=>array('index'=>-1,'mtime'=>1540374422,'size'=>5274,'lines'=>array(85,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Form/Csrf.php'=>array('index'=>-1,'mtime'=>1540289819,'size'=>3492,'lines'=>array(86,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Form/Session.php'=>array('index'=>-1,'mtime'=>1538125260,'size'=>2853,'lines'=>array(87,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Form/FieldMethods.php'=>array('index'=>-1,'mtime'=>1538137306,'size'=>7061,'lines'=>array(88,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Form/ConfigProps.php'=>array('index'=>-1,'mtime'=>1536594789,'size'=>17187,'lines'=>array(89,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Form/GetMethods.php'=>array('index'=>-1,'mtime'=>1536594718,'size'=>20030,'lines'=>array(90,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Form/Assets.php'=>array('index'=>-1,'mtime'=>1536595183,'size'=>3913,'lines'=>array(91,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Form/InternalProps.php'=>array('index'=>-1,'mtime'=>1536594795,'size'=>5183,'lines'=>array(92,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Form/Rendering.php'=>array('index'=>-1,'mtime'=>1536676315,'size'=>6924,'lines'=>array(93,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Form/SetMethods.php'=>array('index'=>-1,'mtime'=>1536594709,'size'=>28912,'lines'=>array(94,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Form/Submitting.php'=>array('index'=>-1,'mtime'=>1538125260,'size'=>12014,'lines'=>array(95,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Form/AddMethods.php'=>array('index'=>-1,'mtime'=>1536676636,'size'=>6288,'lines'=>array(96,1)),
'/vendor/mvccore/mvccore/src/MvcCore/View/MagicMethods.php'=>array('index'=>-1,'mtime'=>1539872768,'size'=>4100,'lines'=>array(97,1)),
'/vendor/mvccore/ext-router-media-localization/src/MvcCore/Ext/Routers/MediaAndLocalization/Routing.php'=>array('index'=>-1,'mtime'=>1540304152,'size'=>3799,'lines'=>array(98,1)),
'/vendor/mvccore/ext-router-media-localization/src/MvcCore/Ext/Routers/MediaAndLocalization/RedirectSections.php'=>array('index'=>-1,'mtime'=>1539794937,'size'=>3493,'lines'=>array(99,1)),
'/vendor/mvccore/ext-router-media-localization/src/MvcCore/Ext/Routers/MediaAndLocalization/UrlByRouteSections.php'=>array('index'=>-1,'mtime'=>1539789274,'size'=>5676,'lines'=>array(100,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/Form/Base.php'=>array('index'=>-1,'mtime'=>1540308316,'size'=>3505,'lines'=>array(101,1)),
'/vendor/mvccore/mvccore/src/MvcCore/View/ViewHelpers.php'=>array('index'=>-1,'mtime'=>1539872793,'size'=>6915,'lines'=>array(102,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/IDatabaseUser.php'=>array('index'=>-1,'mtime'=>1527163489,'size'=>890,'lines'=>array(103,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/IForm.php'=>array('index'=>-1,'mtime'=>1538148110,'size'=>7391,'lines'=>array(104,1)),
'/vendor/mvccore/mvccore/src/MvcCore/View/DirectoryMethods.php'=>array('index'=>-1,'mtime'=>1539872759,'size'=>3314,'lines'=>array(105,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field/Props/Options.php'=>array('index'=>-1,'mtime'=>1537011888,'size'=>4827,'lines'=>array(106,1)),
'/vendor/mvccore/mvccore/src/MvcCore/View/GettersSetters.php'=>array('index'=>-1,'mtime'=>1539872763,'size'=>4467,'lines'=>array(107,1)),
'/vendor/mvccore/mvccore/src/MvcCore/IView.php'=>array('index'=>-1,'mtime'=>1539168118,'size'=>18243,'lines'=>array(108,1)),
'/vendor/mvccore/mvccore/src/MvcCore/View/UrlHelpers.php'=>array('index'=>-1,'mtime'=>1539872785,'size'=>2059,'lines'=>array(109,1)),
'/vendor/mvccore/mvccore/src/MvcCore/View/Props.php'=>array('index'=>-1,'mtime'=>1539872777,'size'=>3723,'lines'=>array(110,1)),
'/vendor/mvccore/mvccore/src/MvcCore/View/Rendering.php'=>array('index'=>-1,'mtime'=>1540382306,'size'=>5115,'lines'=>array(111,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field/Props/Wrapper.php'=>array('index'=>-1,'mtime'=>1535537809,'size'=>2226,'lines'=>array(112,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Fields/IOptions.php'=>array('index'=>-1,'mtime'=>1537011886,'size'=>3044,'lines'=>array(113,1)),
'/vendor/mvccore/mvccore/src/MvcCore/View/PrivateMethods.php'=>array('index'=>-1,'mtime'=>1539872772,'size'=>2430,'lines'=>array(114,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Config/Helpers.php'=>array('index'=>-1,'mtime'=>1539865435,'size'=>2265,'lines'=>array(115,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Config/Environment.php'=>array('index'=>-1,'mtime'=>1539873886,'size'=>1643,'lines'=>array(116,1)),
'/vendor/mvccore/ext-router-localization/src/MvcCore/Ext/Routers/Localizations/Route/PropsGettersSetters.php'=>array('index'=>-1,'mtime'=>1540307249,'size'=>6879,'lines'=>array(117,1)),
'/vendor/mvccore/ext-router-localization/src/MvcCore/Ext/Routers/Localizations/Route/UrlBuilding.php'=>array('index'=>-1,'mtime'=>1540279229,'size'=>4678,'lines'=>array(118,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Application/PropsGettersSetters.php'=>array('index'=>-1,'mtime'=>1539874216,'size'=>26086,'lines'=>array(119,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Application/Helpers.php'=>array('index'=>-1,'mtime'=>1540375765,'size'=>4688,'lines'=>array(120,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Application/Dispatching.php'=>array('index'=>-1,'mtime'=>1540368935,'size'=>18457,'lines'=>array(121,1)),
'/Libs/MvcCore/Ext/Routers/Modules/Route/Matching.php'=>array('index'=>-1,'mtime'=>1540374454,'size'=>1587,'lines'=>array(122,1)),
'/Libs/MvcCore/Ext/Routers/Module/UrlByRoute.php'=>array('index'=>-1,'mtime'=>1540312577,'size'=>5060,'lines'=>array(123,1)),
'/Libs/MvcCore/Ext/Routers/Modules/Route/PropsGettersSetters.php'=>array('index'=>-1,'mtime'=>1540202768,'size'=>3135,'lines'=>array(124,1)),
'/vendor/mvccore/ext-router-media-localization/src/MvcCore/Ext/Routers/MediaAndLocalization/UrlByRoute.php'=>array('index'=>-1,'mtime'=>1539794044,'size'=>2843,'lines'=>array(125,1)),
'/Libs/MvcCore/Ext/Routers/Modules/Route/InternalInits.php'=>array('index'=>-1,'mtime'=>1539956909,'size'=>436,'lines'=>array(126,1)),
'/vendor/mvccore/ext-router-media/src/MvcCore/Ext/Routers/Media/UrlByRouteSections.php'=>array('index'=>-1,'mtime'=>1540213908,'size'=>3572,'lines'=>array(127,1)),
'/vendor/mvccore/ext-router-media/src/MvcCore/Ext/Routers/Media/UrlByRoute.php'=>array('index'=>-1,'mtime'=>1539794048,'size'=>1916,'lines'=>array(128,1)),
'/Libs/MvcCore/Ext/Routers/Modules/Route/Instancing.php'=>array('index'=>-1,'mtime'=>1539960791,'size'=>1535,'lines'=>array(129,1)),
'/vendor/mvccore/ext-router-media/src/MvcCore/Ext/Routers/Media/Routing.php'=>array('index'=>-1,'mtime'=>1540278050,'size'=>3101,'lines'=>array(130,1)),
'/vendor/mvccore/ext-router-media/src/MvcCore/Ext/Routers/Media/RedirectSections.php'=>array('index'=>-1,'mtime'=>1539794947,'size'=>1914,'lines'=>array(131,1)),
'/Libs/MvcCore/Ext/Routers/Modules/IRoute.php'=>array('index'=>-1,'mtime'=>1539956437,'size'=>431,'lines'=>array(132,1)),
'/Libs/MvcCore/Ext/Routers/Module/Redirect.php'=>array('index'=>-1,'mtime'=>1540304776,'size'=>3038,'lines'=>array(133,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Config/LoadingIniData.php'=>array('index'=>-1,'mtime'=>1539865753,'size'=>5616,'lines'=>array(134,1)),
'/Libs/MvcCore/Ext/Routers/IModule.php'=>array('index'=>-1,'mtime'=>1540219058,'size'=>458,'lines'=>array(135,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Response/PropsGettersSetters.php'=>array('index'=>-1,'mtime'=>1539874586,'size'=>2750,'lines'=>array(136,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Response/Instancing.php'=>array('index'=>-1,'mtime'=>1539874600,'size'=>1247,'lines'=>array(137,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Response/Headers.php'=>array('index'=>-1,'mtime'=>1539869265,'size'=>4483,'lines'=>array(138,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Response/Cookies.php'=>array('index'=>-1,'mtime'=>1539869266,'size'=>2888,'lines'=>array(139,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Response/Content.php'=>array('index'=>-1,'mtime'=>1539869441,'size'=>3656,'lines'=>array(140,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Request/Props.php'=>array('index'=>-1,'mtime'=>1539867127,'size'=>8292,'lines'=>array(141,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Request/InternalInits.php'=>array('index'=>-1,'mtime'=>1539867354,'size'=>9701,'lines'=>array(142,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Request/Instancing.php'=>array('index'=>-1,'mtime'=>1539867415,'size'=>3154,'lines'=>array(143,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Request/GettersSetters.php'=>array('index'=>-1,'mtime'=>1540304495,'size'=>24394,'lines'=>array(144,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Request/CollectionsMethods.php'=>array('index'=>-1,'mtime'=>1539867342,'size'=>15329,'lines'=>array(145,1)),
'/vendor/mvccore/mvccore/src/MvcCore/ITool.php'=>array('index'=>-1,'mtime'=>1538125107,'size'=>5025,'lines'=>array(146,1)),
'/vendor/mvccore/mvccore/src/MvcCore/ISession.php'=>array('index'=>-1,'mtime'=>1538395058,'size'=>5113,'lines'=>array(147,1)),
'/vendor/mvccore/mvccore/src/MvcCore/IResponse.php'=>array('index'=>-1,'mtime'=>1539362966,'size'=>8051,'lines'=>array(148,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Config/PropsGettersSetters.php'=>array('index'=>-1,'mtime'=>1539865993,'size'=>3500,'lines'=>array(149,1)),
'/Libs/MvcCore/Ext/Routers/Module/Canonical.php'=>array('index'=>-1,'mtime'=>1540315848,'size'=>5342,'lines'=>array(150,1)),
'/Libs/MvcCore/Ext/Routers/Module/DomainRouting.php'=>array('index'=>-1,'mtime'=>1540379068,'size'=>5399,'lines'=>array(151,1)),
'/vendor/mvccore/mvccore/src/MvcCore/IDebug.php'=>array('index'=>-1,'mtime'=>1538125260,'size'=>3446,'lines'=>array(152,1)),
'/Libs/MvcCore/Ext/Routers/Module/Props.php'=>array('index'=>-1,'mtime'=>1540374971,'size'=>855,'lines'=>array(153,1)),
'/vendor/mvccore/mvccore/src/MvcCore/IConfig.php'=>array('index'=>-1,'mtime'=>1539865741,'size'=>3493,'lines'=>array(154,1)),
'/vendor/mvccore/mvccore/src/MvcCore/IApplication.php'=>array('index'=>-1,'mtime'=>1540313661,'size'=>27749,'lines'=>array(155,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Debug/Props.php'=>array('index'=>-1,'mtime'=>1539873566,'size'=>2312,'lines'=>array(156,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Debug/Initializations.php'=>array('index'=>-1,'mtime'=>1539873556,'size'=>3509,'lines'=>array(157,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Debug/Handlers.php'=>array('index'=>-1,'mtime'=>1539873572,'size'=>8082,'lines'=>array(158,1)),
'/vendor/mvccore/ext-router-localization/src/MvcCore/Ext/Routers/Localizations/Route/InternalInits.php'=>array('index'=>-1,'mtime'=>1539957374,'size'=>4442,'lines'=>array(159,1)),
'/Libs/MvcCore/Ext/Routers/Module/RouteMethods.php'=>array('index'=>-1,'mtime'=>1539961038,'size'=>3863,'lines'=>array(160,1)),
'/Libs/MvcCore/Ext/Routers/Module/UrlByQuery.php'=>array('index'=>-1,'mtime'=>1540313372,'size'=>3144,'lines'=>array(161,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Config/Reading.php'=>array('index'=>-1,'mtime'=>1539874734,'size'=>2173,'lines'=>array(162,1)),
'/vendor/mvccore/ext-router-localization/src/MvcCore/Ext/Routers/Localizations/Route/Matching.php'=>array('index'=>-1,'mtime'=>1540374410,'size'=>2255,'lines'=>array(163,1)),
'/Libs/MvcCore/Ext/Routers/Modules/Route/UrlBuilding.php'=>array('index'=>-1,'mtime'=>1540282834,'size'=>2279,'lines'=>array(164,1)),
'/vendor/mvccore/ext-router-localization/src/MvcCore/Ext/Routers/Localizations/Route/Instancing.php'=>array('index'=>-1,'mtime'=>1540375222,'size'=>6433,'lines'=>array(165,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Tool/StringCaseConversions.php'=>array('index'=>-1,'mtime'=>1539873150,'size'=>4047,'lines'=>array(166,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/Role/Base.php'=>array('index'=>-1,'mtime'=>1527163452,'size'=>1375,'lines'=>array(167,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/IRole.php'=>array('index'=>-1,'mtime'=>1527163488,'size'=>3441,'lines'=>array(168,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/IController.php'=>array('index'=>-1,'mtime'=>1527163489,'size'=>594,'lines'=>array(169,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Tool/OopChecking.php'=>array('index'=>-1,'mtime'=>1539873142,'size'=>7665,'lines'=>array(170,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/Form/SignOut.php'=>array('index'=>-1,'mtime'=>1536657786,'size'=>2453,'lines'=>array(171,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Session/Closing.php'=>array('index'=>-1,'mtime'=>1540383715,'size'=>2387,'lines'=>array(172,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Session/Instancing.php'=>array('index'=>-1,'mtime'=>1539871878,'size'=>817,'lines'=>array(173,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/Form/SignIn.php'=>array('index'=>-1,'mtime'=>1540370728,'size'=>2792,'lines'=>array(174,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Session/MagicMethods.php'=>array('index'=>-1,'mtime'=>1539872121,'size'=>2106,'lines'=>array(175,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Session/MetaData.php'=>array('index'=>-1,'mtime'=>1539872179,'size'=>2437,'lines'=>array(176,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Session/NamespaceMethods.php'=>array('index'=>-1,'mtime'=>1539872043,'size'=>2732,'lines'=>array(177,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Session/Props.php'=>array('index'=>-1,'mtime'=>1539871917,'size'=>1945,'lines'=>array(178,1)),
'/vendor/mvccore/ext-form-field-button/src/MvcCore/Ext/Forms/Field/Props/WidthHeight.php'=>array('index'=>-1,'mtime'=>1535537809,'size'=>2510,'lines'=>array(179,1)),
'/vendor/mvccore/ext-form-field-text/src/MvcCore/Ext/Forms/Field/Props/RowsColsWrap.php'=>array('index'=>-1,'mtime'=>1535537808,'size'=>5490,'lines'=>array(180,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Session/Starting.php'=>array('index'=>-1,'mtime'=>1539872043,'size'=>1511,'lines'=>array(181,1)),
'/vendor/mobiledetect/mobiledetectlib/Mobile_Detect.php'=>array('index'=>-1,'mtime'=>1526036132,'size'=>81925,'lines'=>array(182,1)),
'/vendor/mvccore/ext-router-localization/src/MvcCore/Ext/Routers/Localization/UrlByRouteSections.php'=>array('index'=>-1,'mtime'=>1539789262,'size'=>3992,'lines'=>array(183,1)),
'/vendor/mvccore/ext-router-localization/src/MvcCore/Ext/Routers/Localization/UrlByRoute.php'=>array('index'=>-1,'mtime'=>1539794057,'size'=>2775,'lines'=>array(184,1)),
'/vendor/mvccore/ext-router-localization/src/MvcCore/Ext/Routers/Localization/Routing.php'=>array('index'=>-1,'mtime'=>1540278070,'size'=>3349,'lines'=>array(185,1)),
'/vendor/mvccore/ext-router-localization/src/MvcCore/Ext/Routers/Localization/RedirectSections.php'=>array('index'=>-1,'mtime'=>1540283341,'size'=>2203,'lines'=>array(186,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field/Props/GroupLabelAttrs.php'=>array('index'=>-1,'mtime'=>1535537808,'size'=>1909,'lines'=>array(187,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field/Props/GroupCssClasses.php'=>array('index'=>-1,'mtime'=>1535537808,'size'=>2067,'lines'=>array(188,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Tool/Json.php'=>array('index'=>-1,'mtime'=>1539873143,'size'=>1915,'lines'=>array(189,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/Controller/Base.php'=>array('index'=>-1,'mtime'=>1539941010,'size'=>1673,'lines'=>array(190,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/IFieldsGroup.php'=>array('index'=>-1,'mtime'=>1538139315,'size'=>6606,'lines'=>array(191,1)),
'/App/Views/Helpers/JsonAttrHelper.php'=>array('index'=>-1,'mtime'=>1539850987,'size'=>309,'lines'=>array(192,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Router/UrlByRoutes.php'=>array('index'=>-1,'mtime'=>1540363227,'size'=>2278,'lines'=>array(193,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/IError.php'=>array('index'=>-1,'mtime'=>1534850923,'size'=>612,'lines'=>array(194,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Router/UrlByQuery.php'=>array('index'=>-1,'mtime'=>1540376187,'size'=>3698,'lines'=>array(195,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/IView.php'=>array('index'=>-1,'mtime'=>1538139115,'size'=>6143,'lines'=>array(196,1)),
'/App/Bootstrap.php'=>array('index'=>-1,'mtime'=>1540381720,'size'=>5977,'lines'=>array(197,1)),
'/vendor/mvccore/ext-tool-locale-floatparser/src/MvcCore/Ext/Tools/Locales/FloatParser.php'=>array('index'=>-1,'mtime'=>1537174990,'size'=>9990,'lines'=>array(198,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Validator.php'=>array('index'=>-1,'mtime'=>1537194571,'size'=>6936,'lines'=>array(199,1)),
'/vendor/mvccore/ext-view-helper/src/MvcCore/Ext/Views/Helpers/AbstractHelper.php'=>array('index'=>-1,'mtime'=>1539852360,'size'=>4002,'lines'=>array(200,1)),
'/vendor/mobiledetect/mobiledetectlib/namespaced/Detection/MobileDetect.php'=>array('index'=>-1,'mtime'=>1526036132,'size'=>1029,'lines'=>array(201,1)),
'/vendor/mvccore/ext-view-helper-assets/src/MvcCore/Ext/Views/Helpers/Assets.php'=>array('index'=>-1,'mtime'=>1539852872,'size'=>16836,'lines'=>array(202,1)),
'/vendor/mvccore/ext-form-field-text/src/MvcCore/Ext/Forms/Validators/Url.php'=>array('index'=>-1,'mtime'=>1536593075,'size'=>1781,'lines'=>array(203,1)),
'/vendor/mvccore/ext-form-field-text/src/MvcCore/Ext/Forms/Validators/Password.php'=>array('index'=>-1,'mtime'=>1536592671,'size'=>21649,'lines'=>array(204,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Validators/SafeString.php'=>array('index'=>-1,'mtime'=>1537179370,'size'=>3031,'lines'=>array(205,1)),
'/vendor/mvccore/ext-form-field-text/src/MvcCore/Ext/Forms/Validators/Tel.php'=>array('index'=>-1,'mtime'=>1536592988,'size'=>2482,'lines'=>array(206,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basic.php'=>array('index'=>-1,'mtime'=>1527163452,'size'=>1114,'lines'=>array(207,1)),
'/vendor/mvccore/ext-view-helper-assets/src/MvcCore/Ext/Views/Helpers/JsHelper.php'=>array('index'=>-1,'mtime'=>1539852941,'size'=>17428,'lines'=>array(208,1)),
'/vendor/mvccore/ext-view-helper-assets/src/MvcCore/Ext/Views/Helpers/CssHelper.php'=>array('index'=>-1,'mtime'=>1539852912,'size'=>19210,'lines'=>array(209,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Controller.php'=>array('index'=>-1,'mtime'=>1539869501,'size'=>2547,'lines'=>array(210,1)),
'/vendor/mvccore/ext-auth/src/MvcCore/Ext/Auth.php'=>array('index'=>-1,'mtime'=>1538487763,'size'=>2624,'lines'=>array(211,1)),
'/vendor/mvccore/ext-form-field-numeric/src/MvcCore/Ext/Forms/Validators/Number.php'=>array('index'=>-1,'mtime'=>1537173452,'size'=>4268,'lines'=>array(212,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Tool.php'=>array('index'=>-1,'mtime'=>1539873178,'size'=>1018,'lines'=>array(213,1)),
'/vendor/mvccore/ext-form-field-text/src/MvcCore/Ext/Forms/Validators/MinMaxLength.php'=>array('index'=>-1,'mtime'=>1537010278,'size'=>2275,'lines'=>array(214,1)),
'/vendor/mvccore/ext-form-field-text/src/MvcCore/Ext/Forms/Validators/Pattern.php'=>array('index'=>-1,'mtime'=>1537008586,'size'=>2110,'lines'=>array(215,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Debug.php'=>array('index'=>-1,'mtime'=>1539873617,'size'=>2865,'lines'=>array(216,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Application.php'=>array('index'=>-1,'mtime'=>1539864728,'size'=>2276,'lines'=>array(217,1)),
'/vendor/mvccore/ext-form-field-text/src/MvcCore/Ext/Forms/Validators/Email.php'=>array('index'=>-1,'mtime'=>1537181991,'size'=>2257,'lines'=>array(218,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field.php'=>array('index'=>-1,'mtime'=>1537179117,'size'=>12821,'lines'=>array(219,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Model.php'=>array('index'=>-1,'mtime'=>1539870282,'size'=>928,'lines'=>array(220,1)),
'/App/Controllers/Base.php'=>array('index'=>-1,'mtime'=>1540378226,'size'=>2078,'lines'=>array(221,1)),
'/vendor/mvccore/ext-router-extended/src/MvcCore/Ext/Routers/Extended.php'=>array('index'=>-1,'mtime'=>1539793447,'size'=>1016,'lines'=>array(222,1)),
'/vendor/mvccore/ext-form-field-numeric/src/MvcCore/Ext/Forms/Validators/FloatNumber.php'=>array('index'=>-1,'mtime'=>1538567868,'size'=>1893,'lines'=>array(223,1)),
'/vendor/mvccore/ext-form-field-numeric/src/MvcCore/Ext/Forms/Validators/IntNumber.php'=>array('index'=>-1,'mtime'=>1538567825,'size'=>2069,'lines'=>array(224,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Field/Props/VisibleField.php'=>array('index'=>-1,'mtime'=>1535537808,'size'=>1936,'lines'=>array(225,1)),
'/App/Controllers/Index.php'=>array('index'=>-1,'mtime'=>1540375927,'size'=>1205,'lines'=>array(226,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Config.php'=>array('index'=>-1,'mtime'=>1539873918,'size'=>1113,'lines'=>array(227,1)),
'/App/Controllers/Blog/Index.php'=>array('index'=>-1,'mtime'=>1540362736,'size'=>1407,'lines'=>array(228,1)),
'/App/Controllers/Blog/Test.php'=>array('index'=>-1,'mtime'=>1540371447,'size'=>1051,'lines'=>array(229,1)),
'/App/Controllers/CdCollection.php'=>array('index'=>-1,'mtime'=>1540378709,'size'=>5394,'lines'=>array(230,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Response.php'=>array('index'=>-1,'mtime'=>1539874561,'size'=>1017,'lines'=>array(231,1)),
'/vendor/mvccore/ext-form-field-numeric/src/MvcCore/Ext/Forms/Validators/Range.php'=>array('index'=>-1,'mtime'=>1537006972,'size'=>2292,'lines'=>array(232,1)),
'/App/Controllers/System.php'=>array('index'=>-1,'mtime'=>1527838906,'size'=>846,'lines'=>array(233,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Request.php'=>array('index'=>-1,'mtime'=>1539869491,'size'=>1433,'lines'=>array(234,1)),
'/App/Models/Album.php'=>array('index'=>-1,'mtime'=>1536942834,'size'=>2779,'lines'=>array(235,34)),
'/vendor/mvccore/mvccore/src/MvcCore/Route.php'=>array('index'=>-1,'mtime'=>1539869967,'size'=>14805,'lines'=>array(269,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Fields/Hidden.php'=>array('index'=>-1,'mtime'=>1540288783,'size'=>2085,'lines'=>array(270,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/Controller.php'=>array('index'=>-1,'mtime'=>1539940983,'size'=>671,'lines'=>array(271,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/Fields/DataList.php'=>array('index'=>-1,'mtime'=>1535623050,'size'=>4056,'lines'=>array(272,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Session.php'=>array('index'=>-1,'mtime'=>1539872126,'size'=>1359,'lines'=>array(273,1)),
'/vendor/mvccore/mvccore/src/MvcCore/View.php'=>array('index'=>-1,'mtime'=>1539872904,'size'=>4519,'lines'=>array(274,1)),
'/vendor/mvccore/mvccore/src/MvcCore/Router.php'=>array('index'=>-1,'mtime'=>1540363259,'size'=>1552,'lines'=>array(275,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/View.php'=>array('index'=>-1,'mtime'=>1540289363,'size'=>16183,'lines'=>array(276,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/Role.php'=>array('index'=>-1,'mtime'=>1527163452,'size'=>1549,'lines'=>array(277,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/User.php'=>array('index'=>-1,'mtime'=>1527163452,'size'=>1857,'lines'=>array(278,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/Users/SystemConfig.php'=>array('index'=>-1,'mtime'=>1527163452,'size'=>1579,'lines'=>array(279,1)),
'/vendor/mvccore/ext-router-localization/src/MvcCore/Ext/Routers/Localizations/Route.php'=>array('index'=>-1,'mtime'=>1539957438,'size'=>751,'lines'=>array(280,1)),
'/vendor/mvccore/ext-form-field-button/src/MvcCore/Ext/Forms/Fields/Button.php'=>array('index'=>-1,'mtime'=>1536587257,'size'=>3398,'lines'=>array(281,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/Users/Database.php'=>array('index'=>-1,'mtime'=>1527838908,'size'=>2960,'lines'=>array(282,13)),
'/Libs/MvcCore/Ext/Routers/Modules/Route.php'=>array('index'=>-1,'mtime'=>1539956999,'size'=>764,'lines'=>array(295,1)),
'/vendor/mvccore/ext-form-field-button/src/MvcCore/Ext/Forms/Fields/ButtonInput.php'=>array('index'=>-1,'mtime'=>1536929522,'size'=>2571,'lines'=>array(296,1)),
'/vendor/mvccore/ext-form-field-button/src/MvcCore/Ext/Forms/Fields/ResetInput.php'=>array('index'=>-1,'mtime'=>1536587227,'size'=>4585,'lines'=>array(297,1)),
'/vendor/mvccore/ext-form-field-button/src/MvcCore/Ext/Forms/Fields/ResetButton.php'=>array('index'=>-1,'mtime'=>1536587226,'size'=>3490,'lines'=>array(298,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Form.php'=>array('index'=>-1,'mtime'=>1540289538,'size'=>6546,'lines'=>array(299,1)),
'/vendor/mvccore/ext-form-field-button/src/MvcCore/Ext/Forms/Fields/SubmitInput.php'=>array('index'=>-1,'mtime'=>1537179895,'size'=>3821,'lines'=>array(300,1)),
'/vendor/mvccore/ext-form-field-button/src/MvcCore/Ext/Forms/Fields/Image.php'=>array('index'=>-1,'mtime'=>1537179851,'size'=>5835,'lines'=>array(301,1)),
'/vendor/mvccore/ext-form-field-button/src/MvcCore/Ext/Forms/Fields/SubmitButton.php'=>array('index'=>-1,'mtime'=>1537179886,'size'=>2263,'lines'=>array(302,1)),
'/vendor/mvccore/ext-auth/src/MvcCore/Ext/Auths/User.php'=>array('index'=>-1,'mtime'=>1538564954,'size'=>591,'lines'=>array(303,1)),
'/vendor/mvccore/ext-auth/src/MvcCore/Ext/Auths/Users/SystemConfig.php'=>array('index'=>-1,'mtime'=>1538565039,'size'=>641,'lines'=>array(304,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/SignOutForm.php'=>array('index'=>-1,'mtime'=>1527525998,'size'=>860,'lines'=>array(305,1)),
'/vendor/mvccore/ext-auth-basic/src/MvcCore/Ext/Auths/Basics/SignInForm.php'=>array('index'=>-1,'mtime'=>1527237740,'size'=>753,'lines'=>array(306,1)),
'/vendor/mvccore/ext-auth/src/MvcCore/Ext/Auths/Users/Database.php'=>array('index'=>-1,'mtime'=>1538565035,'size'=>625,'lines'=>array(307,1)),
'/vendor/mvccore/ext-form/src/MvcCore/Ext/Forms/FieldsGroup.php'=>array('index'=>-1,'mtime'=>1537194267,'size'=>14233,'lines'=>array(308,1)),
'/vendor/mvccore/ext-form-field-text/src/MvcCore/Ext/Forms/Fields/Textarea.php'=>array('index'=>-1,'mtime'=>1537194143,'size'=>5165,'lines'=>array(309,1)),
'/vendor/mvccore/ext-form-field-numeric/src/MvcCore/Ext/Forms/Fields/Number.php'=>array('index'=>-1,'mtime'=>1537179646,'size'=>5140,'lines'=>array(310,1)),
'/vendor/mvccore/ext-router-media/src/MvcCore/Ext/Routers/Media.php'=>array('index'=>-1,'mtime'=>1539793391,'size'=>1394,'lines'=>array(311,1)),
'/vendor/mvccore/ext-form-field-text/src/MvcCore/Ext/Forms/Fields/Text.php'=>array('index'=>-1,'mtime'=>1537179546,'size'=>5316,'lines'=>array(312,1)),
'/vendor/mvccore/ext-router-localization/src/MvcCore/Ext/Routers/Localization.php'=>array('index'=>-1,'mtime'=>1539881974,'size'=>1508,'lines'=>array(313,1)),
'/vendor/mvccore/ext-form-field-numeric/src/MvcCore/Ext/Forms/Fields/Range.php'=>array('index'=>-1,'mtime'=>1537179633,'size'=>7094,'lines'=>array(314,1)),
'/vendor/mvccore/ext-form-field-text/src/MvcCore/Ext/Forms/Fields/Password.php'=>array('index'=>-1,'mtime'=>1535715217,'size'=>1559,'lines'=>array(315,1)),
'/vendor/mvccore/ext-form-field-text/src/MvcCore/Ext/Forms/Fields/Search.php'=>array('index'=>-1,'mtime'=>1535715637,'size'=>1180,'lines'=>array(316,1)),
'/vendor/mvccore/ext-form-field-text/src/MvcCore/Ext/Forms/Fields/Tel.php'=>array('index'=>-1,'mtime'=>1535715039,'size'=>966,'lines'=>array(317,1)),
'/vendor/mvccore/ext-form-field-text/src/MvcCore/Ext/Forms/Fields/Url.php'=>array('index'=>-1,'mtime'=>1535715651,'size'=>1097,'lines'=>array(318,1)),
'/vendor/mvccore/ext-form-field-text/src/MvcCore/Ext/Forms/Fields/Email.php'=>array('index'=>-1,'mtime'=>1537011695,'size'=>1957,'lines'=>array(319,1)),
'/vendor/mvccore/ext-router-media-localization/src/MvcCore/Ext/Routers/MediaAndLocalization.php'=>array('index'=>-1,'mtime'=>1539882228,'size'=>1783,'lines'=>array(320,1)),
'/Libs/MvcCore/Ext/Routers/Module.php'=>array('index'=>-1,'mtime'=>1540310825,'size'=>2335,'lines'=>array(321,1)),
'/index.php'=>array('index'=>-1,'mtime'=>1527525666,'size'=>119,'lines'=>array(322,1)),
'/App/config.ini'=>array('index'=>0,'mtime'=>1538995060,'size'=>521,'store'=>'text'),
'/App/Views/Layouts/layout.phtml'=>array('index'=>1,'mtime'=>1538554779,'size'=>1833,'store'=>'template'),
'/App/Views/Scripts/cd-collection/create.phtml'=>array('index'=>2,'mtime'=>1526468537,'size'=>251,'store'=>'template'),
'/App/Views/Scripts/cd-collection/edit.phtml'=>array('index'=>3,'mtime'=>1526468534,'size'=>210,'store'=>'template'),
'/App/Views/Scripts/cd-collection/index.phtml'=>array('index'=>4,'mtime'=>1527838906,'size'=>1453,'store'=>'template'),
'/App/Views/Scripts/index/error.phtml'=>array('index'=>5,'mtime'=>1485608474,'size'=>132,'store'=>'template'),
'/App/Views/Scripts/index/index.phtml'=>array('index'=>6,'mtime'=>1527067176,'size'=>236,'store'=>'template'),
'/vendor/mobiledetect/mobiledetectlib/phpcs.xml'=>array('index'=>7,'mtime'=>1526036132,'size'=>701,'store'=>'text'),
'/vendor/mvccore/mvccore/src/MvcCore/debug.html'=>array('index'=>8,'mtime'=>1525959959,'size'=>1828,'store'=>'text'),
);private static$_baseLinesCount=423;private static$_minifiedPhp=TRUE;private static$_contexts=array();private static$_closureRendering=TRUE;private static$_currentFileSource=array();public static function PrintBacktrace(){echo '<pre>';var_dump(debug_backtrace());echo '</pre>';}public static function Init(){self::$ScriptFilename=str_replace('\\','/',$_SERVER['SCRIPT_FILENAME']);self::$BasePath=str_replace('\\','/',__DIR__);self::$BasePathLength=mb_strlen(self::$BasePath);if(version_compare(PHP_VERSION,'5.4.0',"<")){self::$_closureRendering=FALSE;}}private static function _includeFile($path,$context,$onceOnly,$fn=''){$path=self::NormalizePath($path);if($onceOnly&&self::_getIsFileIncluded($path))return;if(!isset(self::$Info[$path])){return call_user_func_array($fn,array($path));}else{return self::_includeFileWithRendering($path,$context,$onceOnly);}}private static function _getIsFileIncluded($path){return(isset(self::$Info[$path])&&self::$Info[$path]['included'])?TRUE:FALSE;}private static function _includeFileWithRendering($path,&$context,$onceOnly){$store=self::$Info[$path]['store'];$closureRendering=$store=='template'&&self::$_closureRendering;$result=self::_renderFile($path,$context,$onceOnly,$closureRendering,$store);if($closureRendering){return$result;}else{echo $result;return 1;}}private static function _renderFile($path,&$context,$onceOnly,$closureRendering,$store){if($closureRendering){$result=self::_callTemplateClosure($path,$context);}else{$result=self::_evalFile($path,$context,$store);}if($onceOnly)self::_setFileIsIncluded($path);return$result;}private static function _callTemplateClosure($path,&$context){$templateClosure=self::_getFileContent($path,FALSE);if(!is_null($context)){$templateClosure=$templateClosure->bindTo($context,$context);}return$templateClosure();}private static function _evalFile($path,&$context,$store){if($store=='template'){$content=&self::_getStaticWithContext($path,$context,$store);}else{$content=self::_getFileContent($path,TRUE);}self::_addContext($context);ob_start();try{eval(' ?'.'>'.$content.'<'.'?php ');}catch(Exception$e){throw$e;}self::_removeContext();return trim(ob_get_clean());}private static function _getStaticWithContext($path,$context){if(is_null($context)){$templateClosure=self::_getFileContent($path,TRUE);$content=self::_getTemplateClosureBody($templateClosure);}else{$content=&self::_getStaticWithContextAlreadyProcessed($path);if(mb_strlen($content)===0){$templateClosure=self::_getFileContent($path,TRUE);$content=self::_getTemplateClosureBody($templateClosure);$content=preg_replace("#([^\\\])(\\\$this)([^a-zA-Z0-9_\x7f-\xff])#im","$1".__CLASS__."::\$Context$3",$content);$index=self::$Info[$path]['index'];self::$NewContextContents[$index]=$content;}}return$content;}private static function _getTemplateClosureBody(Closure$templateClosure){$reflection=new ReflectionFunction($templateClosure);$startLine=$reflection->getStartLine()-1;$endLine=$reflection->getEndLine();$length=$endLine-$startLine;self::_setUpCurrentFileSource();$functionSource=implode('',array_slice(self::$_currentFileSource,$startLine,$length));$firstCloseTagPos=mb_strpos($functionSource,'?>')+2;$lastOpenTagPos=mb_strrpos($functionSource,'<?php');$functionBodyLength=$lastOpenTagPos-$firstCloseTagPos;$functionSource=mb_substr($functionSource,$firstCloseTagPos,$functionBodyLength);return$functionSource;}private static function _setUpCurrentFileSource(){if(count(self::$_currentFileSource)===0){self::$_currentFileSource=file(__FILE__);}}private static function _getStaticWithContextAlreadyProcessed($path){$content='';if(isset(self::$Info[$path])){$index=self::$Info[$path]['index'];if(isset(self::$NewContextContents[$index])){$content=&self::$NewContextContents[$index];}}return$content;}private static function _addContext($context){self::$_contexts[]=$context;self::$Context=$context;}private static function _removeContext(){$contextsCount=count(self::$_contexts);$newContext=NULL;if($contextsCount>0){$contextsCount-=1;unset(self::$_contexts[$contextsCount]);self::$_contexts=array_values(self::$_contexts);if($contextsCount>0){$newContext=self::$_contexts[$contextsCount-1];}}self::$Context=$newContext;}private static function _setFileIsIncluded($path){if(isset(self::$Info[$path])){self::$Info[$path]['included']=1;}else{self::$Info[$path]=array('included'=>1);}}private static function _getFileContent($path,$decodeGzip=TRUE){if(!isset(self::$Info[$path]))return FALSE;$record=self::$Info[$path];$index=$record['index'];if($index==-1){return self::_getScript($record['lines']);}else{return self::_getStatic($record['store'],$index,$decodeGzip);}}private static function _getScript($lines){self::_setUpCurrentFileSource();$begin=self::$_baseLinesCount+$lines[0]-1;$end=$begin+$lines[1];$r="<?php\n";$g=self::$_minifiedPhp?"\n":"";for($i=$begin,$l=$end;$i<$l;$i+=1){$r.=$g.self::$_currentFileSource[$i];}$r.="\n?>";return$r;}private static function _getStatic($store,$index,$decodeGzip=TRUE){if($store=='template'){return self::$Contents[$index];}else if($store=='gzip'){return$decodeGzip?gzdecode(self::$Contents[$index]):self::$Contents[$index];}else if($store=='base64'){return base64_decode(self::$Contents[$index]);}else{return self::$Contents[$index];}}public static function NormalizePath($path){$path=str_replace('\\','/',$path);if(mb_strpos($path,'/./')!==FALSE){$path=str_replace('/./','/',$path);}if(mb_strpos($path,'/..')!==FALSE){while(true){$doubleDotPos=mb_strpos($path,"/..");if($doubleDotPos===FALSE){break;}else{$path1=mb_substr($path,0,$doubleDotPos);$path2=mb_substr($path,$doubleDotPos+3);$lastSlashPos=mb_strrpos($path1,'/');$path1=mb_substr($path1,0,$lastSlashPos);$path=$path1.$path2;}}}if(mb_strpos($path,self::$BasePath)===0){$path=mb_substr($path,self::$BasePathLength);}return str_replace('//','/',$path);}public static function _isProtocolPath($path){return preg_match("#^([a-z]*)\://(.*)#",$path)?TRUE:FALSE;}public static function Warning($msg='',$path='',$fn=''){if(!$msg)$msg="$fn($path): failed to open stream: No such file or directory";trigger_error($msg,E_USER_WARNING);}public static function Readfile($filename,$use_include_path=FALSE,$context=NULL){if(self::_isProtocolPath($filename))return call_user_func_array('readfile',func_get_args());$path=self::NormalizePath($filename);$content=self::_getFileContent($path,FALSE);if($content===FALSE){return call_user_func_array('readfile',func_get_args());}else{return self::_readFile($content,$path);}}private static function _readfile(&$content,$path){$store=self::$Info[$path]['store'];if($store=='gzip'){if(strpos($_SERVER['HTTP_ACCEPT_ENCODING'],'gzip')!==FALSE){header('Content-Encoding: gzip');}else{$content=gzdecode($content);}}echo $content;return self::$Info[$path]['size'];}public static function IsDir($filename){$path=self::NormalizePath($filename);if(isset(self::$Info[$path]))return TRUE;$catched=FALSE;foreach(self::$Info as$pathKey=>&$item){if(strpos($pathKey,$path)===0){$catched=TRUE;break;}}if($catched)return TRUE;return is_dir($filename);}public static function MkDir($filename,$mode=0777,$recursive=FALSE,$context=NULL){$path=self::NormalizePath($filename);$r=FALSE;if(!isset(self::$Info[$path])){if($context!==NULL){$r=mkdir($filename,$mode,$recursive,$context);}else{$r=mkdir($filename,$mode,$recursive);}if($r)self::_changeItself('/*____\\Packager_Php_Wrapper::$Info____*/',"'".$path."'=>array('index'=>-1,'mtime'=>".time().",'size'=>0,'lines'=>array(0,0)),");}return$r;}private static function _changeItself($replacement,$newContent){$oldSelf=self::$ScriptFilename;$newSelf=$oldSelf.'.'.uniqid();$oh=@fopen($oldSelf,'r');$nh=@fopen($newSelf,'w+');$r1=FALSE;if($oh&&$nh){$r1=TRUE;while(($ol=fgets($oh))!==FALSE){$pos=mb_strpos($ol,$replacement);if($pos!==FALSE){$ol=mb_substr($ol,0,$pos).$replacement.$newContent.mb_substr($ol,$pos+mb_strlen($replacement));}fwrite($nh,$ol);}}@fclose($oh);@fclose($nh);if($r1){$newOldSelf=$oldSelf.'.'.uniqid();$r2=rename($oldSelf,$newOldSelf);$r3=rename($newSelf,$oldSelf);$r4=unlink($newOldSelf);}return$r1&&$r2&&$r3&&$r4;}public static function FileGetContents($filename,$use_include_path=FALSE,$context=NULL,$offset=0){if(self::_isProtocolPath($filename))return call_user_func_array('file_get_contents',func_get_args());$path=self::NormalizePath($filename);$content=self::_getFileContent($path,TRUE);if($content===FALSE){return call_user_func_array('file_get_contents',func_get_args());}else{return$content;}}public static function ParseIniFile($filename,$process_sections=FALSE,$scanner_mode=INI_SCANNER_NORMAL){$path=self::NormalizePath($filename);$str=self::_getFileContent($path,TRUE);if($str===FALSE){return call_user_func_array('parse_ini_file',func_get_args());}else{return parse_ini_string($str,$process_sections,$scanner_mode);}}public static function FileExists($filename){$path=self::NormalizePath($filename);if(isset(self::$Info[$path])){return TRUE;}else{return file_exists($filename);}}public static function Filemtime($filename){$path=self::NormalizePath($filename);if(isset(self::$Info[$path])){return self::$Info[$path]['mtime'];}else{return filemtime($filename);}}public static function IncludeStandard($path,$context=NULL){return self::_includeFile($path,$context,FALSE,'include');}}Packager_Php_Wrapper::Init();
\Packager_Php_Wrapper::$Contents[0]=<<<'PACKAGER_TEXT'
[environments]
development = 127.0.0.1,192.168.137.1

;[users]
;0.userName		= admin
;0.fullName		= Administrator
;0.passwordHash	= $2y$10$czlFNTYvUUg2IWE2OXNKTO8PB5xPGXz9i8IH7Fa7M0YsPlSLriJZu

[db]
driver		= sqlite
database	= /../.databases/sqlite-cdcol.db

;driver		= mysql
;host		= 127.0.0.1
;user		= root
;password	= 1234
;database	= cdcol

;driver		= sqlsrv
;host		= .\SQLEXPRESS
;user		= sa
;password	= 1234
;database	= cdcol

;driver		= pgsql
;host		= 127.0.0.1
;user		= postgres
;password	= 1234
;database	= cdcol
PACKAGER_TEXT;
\Packager_Php_Wrapper::$Contents[1]=function(){ ?>
<?php ?><!DOCTYPE HTML><html
lang="en-US"><head><meta
charset="UTF-8" /><title><?php echo $this->Title;?> | MvcCore</title><base
href="<?php echo $this->GetController()->GetRequest()->GetBaseUrl();?>/" /><link
rel="shortcut icon" href="<?php echo $this->AssetUrl('/static/img/favicon.ico');?>" /><meta
http-equiv="X-UA-Compatible" content="IE=Edge" /><meta
name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes" /><meta
name="apple-mobile-web-app-capable" content="yes" /> <script>var timestamp=+new Date;(function(a,b,c,d,e,f){if(b[c]('Opera'))b=b[d](e,f);if(b[c]('Trident/'))b=b[d](/ rv:([0-9\.]*)\)/g,e+'$1)');a.setAttribute('data-browser',b);a.className=f;})(document.documentElement,navigator.userAgent,'match','replace',' MSIE ','')</script> <?php echo $this->Css('fixedHead')->Render();?>
<?php echo $this->Js('fixedHead')->Render();?><meta
name="author" content="Tom Flidr <tomflidr(at)gmail(dot)com>" /></head><body>
<!--[if lt IE 9]><div
class="old-browser-warning"><p>Your browser is <b>very</b> old. <br
/>Please install any actual browser, for example <br
/><a
href="https://www.google.com/chrome" target="_blank">Google Chrome</a>, <a
href="https://www.apple.com/safari" target="_blank">Apple Safari</a> or <a
href="https://www.mozilla.org/en/firefox/new" target="_blank">Mozilla Firefox</a>.</p></div><![endif]--><div
class="master-container">
<?php if($this->SignOutForm)echo $this->SignOutForm->Render();?><div
class="content route-<?php  echo  str_replace(':','-',strtolower($this->GetController()->GetRouter()->GetCurrentRoute()->GetName()));?>">
<?php echo $this->GetContent();?></div></div></body>
<?php echo $this->Js('varFoot')->Render();?></html>
<?php return 1;};
\Packager_Php_Wrapper::$Contents[2]=function(){ ?>
<?php ?><a
class="head-btn btn btn-wide btn-left-arrow btn-no-visiting" href="<?php
echo $this->Url(':Index');?>"><span><b>Back to list</b></span></a><h1>New album</h1><?php echo $this->DetailForm->Render();?>
<?php return 1;};
\Packager_Php_Wrapper::$Contents[3]=function(){ ?>
<a
class="head-btn btn btn-wide btn-left-arrow btn-no-visiting" href="<?php
echo $this->Url(':Index');?>"><span><b>Back to list</b></span></a><h1>Edit album</h1><?php echo $this->DetailForm->Render();?>
<?php return 1;};
\Packager_Php_Wrapper::$Contents[4]=function(){ ?>
<?php ?>
<?php ?><a
class="head-btn btn btn-wide btn-no-visiting" href="<?php
echo $this->Url(':Create');?>"><span><b>New album</b></span></a><h1>CD Collection</h1><?php if(!$this->Albums):?><p>No albums in database. To create, click to 'New Album' button.</p>
<?php else:?><table
class="cd-collection-items theme"><thead><tr><th
class="right">Id</th><th>Title</th><th>Interpret</th><th
class="right">Year</th><th></th></tr></thead><tbody>
<?php foreach($this->Albums as$id=>$album):?><tr><td
class="right"><?php echo $album->Id;?></td><td><a
href="<?php
echo $this->Url(':Edit',["id"=>$album->Id,]);?>">
<?php echo $album->Title;?>
</a></td><td><?php echo $album->Interpret;?></td><td
class="right"><?php echo $album->Year;?></td><td
class="center"><form
class="delete" action="<?php
echo $this->Url(':Delete',['absolute'=>TRUE]);?>" method="post">
<input
type="hidden" name="<?php
echo $this->CsrfName;?>" value="<?php
echo $this->CsrfValue;?>" />
<input
type="hidden" name="id" value="<?php echo $album->Id;?>" />
<input
type="submit" value="Delete" /></form></td></tr>
<?php endforeach;?></tbody></table>
<?php endif;?>
<?php return 1;};
\Packager_Php_Wrapper::$Contents[5]=function(){ ?>
<?php ?><h1>Oooops!</h1><p><?php echo $this->Title;?></p><p><?php echo $this->Message;?></p>
<?php return 1;};
\Packager_Php_Wrapper::$Contents[6]=function(){ ?>
<?php
?><h1><?php echo $this->Title;?></h1><p>Use login: "admin" and password: "demo".</p>
<?php echo $this->SignInForm->Render();?>
<?php return 1;};
\Packager_Php_Wrapper::$Contents[7]=<<<'PACKAGER_TEXT'
<?xml version="1.0"?>
<ruleset name="PSR1">
    <description>The PSR-2 coding standard extended.</description>
    <rule ref="PSR1">
        <exclude name="PSR1.Classes.ClassDeclaration.MissingNamespace"/>
    </rule>
    <rule ref="Squiz">
        <exclude name="Squiz.Classes.ValidClassName.NotCamelCaps"/>
        <exclude name="Squiz.Files.FileExtension.ClassFound"/>
        <exclude name="Squiz.Commenting.ClassComment.TagNotAllowed"/>
    </rule>
    <rule ref="Squiz.Strings.DoubleQuoteUsage">
        <type>error</type>
    </rule>
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="140"/>
        </properties>
    </rule>
</ruleset>
PACKAGER_TEXT;
\Packager_Php_Wrapper::$Contents[8]=<<<'PACKAGER_TEXT'
<div id="mvccore-dumps"><div id="mvccore-dumps-items">%mvccoreDumps%</div><input id="mvccore-dumps-btn" type="button" value="Dumps(%mvccoreDumpsCount%)" /></div>
<style>#mvccore-dumps{display:table;position:fixed;bottom:0;right:0;z-index:999999;margin:10px;overflow:auto;background:#e8e8e8;box-shadow:0 0 10px rgba(0,0,0,0.5);border-radius:5px;opacity:0;}#mvccore-dumps *{font-family:consolas,courier !important;}#mvccore-dumps-items .item{background:#fff;margin:5px 5px 0 5px;border-radius:3px;white-space:pre-wrap;}#mvccore-dumps-items .title{background:#888;color:#fff;font-weight:bold;padding:5px;margin:0;}#mvccore-dumps-items .value{padding:0 3px 0 3px;overflow:auto;}#mvccore-dumps-items .value pre{margin:0;}#mvccore-dumps-items .value small.file{display:block;font-size:10px;color:#888;}#mvccore-dumps input{font-weight:bold;float:right;margin:5px;padding:2px 7px 2px 10px;}#mvccore-dumps a.editor{position:relative;top:1px;font-size:8px;white-space:nowrap;display:block;}#mvccore-dumps-items pre.xdebug-var-dump{padding:0px 7px 7px 7px;</style>
<script>(function(){var a=/MSIE [5-8]/g.test(navigator.userAgent),i="getElementById",j="style",o="height",y="width",r="block",s="auto",t="display",x="px",v=20,b=document,c=window,d=b[i]("mvccore-dumps"),e=b[i]("mvccore-dumps-items"),f=b[i]("mvccore-dumps-btn"),g=a?"attachEvent":"addEventListener",h=d[j],k=e[j],m=d.offsetHeight,w=d.offsetWidth,n=!1,z=localStorage||{},_="mvccoreDumpsVisible";function p(){if(n){var l=c.innerHeight-v,u=c.innerWidth-v;h.overflow=l>m&&u<w?"hidden":s;h[o]=Math.min(l,m)+x;h[y]=Math.min(u,w)+x}}function q(a){var x=typeof(a),g=x=="boolean",i=x=="undefined";if(g)n=a;if(!g&&!i){n=!n;z[_]=n};n?k[t]=r:(k[t]="none",h[o]=s,h[y]=s);p()}n=z?z[_]==="true":n;h[t]=r;c[g]("resize",p);f[g]("click",q);p();%mvccoreDumpsClose%h.opacity=1})();</script>
PACKAGER_TEXT;
}namespace MvcCore\Ext\Forms\Field{trait Props{protected$id=NULL;protected$name=NULL;protected$type=NULL;protected$value=NULL;protected$cssClasses=[];protected$controlAttrs=[];protected$validators=[];protected$viewScript=NULL;protected$jsClassName=NULL;protected$jsSupportingFile=NULL;protected$cssSupportingFile=NULL;protected static$templates=['label'=>'<label for="{id}"{attrs}>{label}</label>','control'=>'<input id="{id}" name="{name}" type="{type}" value="{value}"{attrs} />','togetherLabelLeft'=>'<label for="{id}"{attrs}><span>{label}</span>{control}</label>','togetherLabelRight'=>'<label for="{id}"{attrs}>{control}<span>{label}</span></label>',];protected$errors=[];protected$translate=NULL;protected$view=NULL;protected$form=NULL;protected static$declaredProtectedProperties=['view','form','translate','errors'];}}
namespace MvcCore\Ext\Forms{interface IField{const LABEL_SIDE_LEFT='left';const LABEL_SIDE_RIGHT='right';const AUTOFOCUS_DUPLICITY_EXCEPTION=0,AUTOFOCUS_DUPLICITY_UNSET_OLD_SET_NEW=1,AUTOFOCUS_DUPLICITY_QUIETLY_SET_NEW=-1;public function&SetForm(\MvcCore\Ext\Forms\IForm&$form);public function PreDispatch();public function Submit(array&$rawRequestParams=[]);public function&GetValidatorData($fieldPropsDefaultValidValues=[]);public function AddValidationError($errorMsg='',array$errorMsgArgs=[],callable$replacingCallable=NULL);public function GetId();public function GetName();public function GetType();public function GetValue();public function&GetCssClasses();public function&GetControlAttrs();public function GetControlAttr($name='data-*');public function&GetValidators();public function&HasValidator($validatorNameOrInstance);public function GetViewScript();public function GetJsClassName();public function GetJsSupportingFile();public function GetCssSupportingFile();public static function&GetTemplates();public function&SetId($id=NULL);public function&SetName($name=NULL);public function&SetType($type=NULL);public function&SetValue($value);public function&SetCssClasses($cssClasses);public function&AddCssClasses($cssClasses);public function&SetControlAttrs(array$attrs=[]);public function&SetControlAttr($name,$value);public function&AddControlAttrs(array$attrs=[]);public function&SetValidators(array$validatorsNamesOrInstances=[]);public function&AddValidators();public function&RemoveValidator($validatorNameOrInstance);public function&SetViewScript($boolOrViewScriptPath=NULL);public function&SetJsClassName($jsClassName);public function&SetJsSupportingFile($jsSupportingFilePath);public function&SetCssSupportingFile($cssSupportingFilePath);public function&AddError($errorMsg);public static function SetTemplate($templateName='control',$templateCode='');public static function SetTemplates($templates=[]);public function Render();public function RenderTemplate();public function RenderNaturally();public function RenderLabelAndControl();public function RenderControlInsideLabel();public function RenderControl();public function RenderLabel();public function RenderErrors();}}
namespace MvcCore\Ext\Forms\Field{trait Setters{public function&SetId($id=NULL){$this->id=$id;return$this;}public function&SetName($name=NULL){$this->name=$name;return$this;}public function&SetType($type=NULL){$this->type=$type;return$this;}public function&SetValue($value){$this->value=$value;return$this;}public function&SetCssClasses($cssClasses){$cssClassesArr=gettype($cssClasses)=='array'?$cssClasses:explode(' ',(string)$cssClasses);$this->cssClasses=$cssClassesArr;return$this;}public function&AddCssClasses($cssClasses){$cssClassesArr=gettype($cssClasses)=='array'?$cssClasses:explode(' ',(string)$cssClasses);$this->cssClasses=array_merge($this->cssClasses,$cssClassesArr);return$this;}public function&SetControlAttrs(array$attrs=[]){$this->controlAttrs=&$attrs;return$this;}public function&SetControlAttr($name,$value){$this->controlAttrs[$name]=$value;return$this;}public function&AddControlAttrs(array$attrs=[]){$this->controlAttrs=array_merge($this->controlAttrs,$attrs);return$this;}public function&SetValidators(array$validatorsNamesOrInstances=[]){$this->validators=[];$validators=call_user_func_array([$this,'AddValidators'],$validatorsNamesOrInstances);return$validators;}public function&AddValidators(){$validatorsNamesOrInstances=func_get_args();foreach($validatorsNamesOrInstances as$validatorNameOrInstance){$instanceType=FALSE;if(is_string($validatorNameOrInstance)){$validatorClassName=$validatorNameOrInstance;}else if($validatorNameOrInstance instanceof\MvcCore\Ext\Forms\IValidator){$instanceType=TRUE;$validatorClassName=get_class($validatorNameOrInstance);}else{return$this->throwNewInvalidArgumentException($validatorNameOrInstance instanceof\Closure?'Unknown validator type given.':'Unknown validator type given: `'.$validatorNameOrInstance.'`, type: `'.gettype($validatorNameOrInstance).'`.');}$slashPos=strrpos($validatorClassName,'\\');$validatorName=$slashPos!==FALSE?substr($validatorClassName,$slashPos+1):$validatorClassName;$this->validators[$validatorName]=$validatorNameOrInstance;if($instanceType)$validatorNameOrInstance->SetField($this);}return$this;}public function&RemoveValidator($validatorNameOrInstance){if(is_string($validatorNameOrInstance)){$validatorClassName=$validatorNameOrInstance;}else if($validatorNameOrInstance instanceof\MvcCore\Ext\Forms\IValidator){$validatorClassName=get_class($validatorNameOrInstance);}else{return$this->throwNewInvalidArgumentException('Unknown validator type given: `'.$validatorNameOrInstance.'`, type: `'.gettype($validatorNameOrInstance).'`.');}$slashPos=strrpos($validatorClassName,'\\');$validatorName=$slashPos!==FALSE?substr($validatorClassName,$slashPos+1):$validatorClassName;if(isset($this->validators[$validatorName]))unset($this->validators[$validatorName]);return$this;}public function&SetViewScript($boolOrViewScriptPath=NULL){$this->viewScript=$boolOrViewScriptPath;return$this;}public function&SetJsClassName($jsClassName){$this->jsClassName=$jsClassName;return$this;}public function&SetJsSupportingFile($jsSupportingFilePath){$this->jsSupportingFile=$jsSupportingFilePath;return$this;}public function&SetCssSupportingFile($cssSupportingFilePath){$this->cssSupportingFile=$cssSupportingFilePath;return$this;}public function&AddError($errorMsg){$this->errors[]=$errorMsg;return$this;}public static function SetTemplate($templateName='control',$templateCode=''){if(gettype(static::$templates)=='array'){static::$templates[$templateName]=$templateCode;}else{static::$templates->{$templateName}=$templateCode;}return$templateCode;}public static function SetTemplates($templates=[]){if(gettype(static::$templates)=='array'){static::$templates=(array)$templates;}else{static::$templates=(object)$templates;}return static::$templates;}}}
namespace MvcCore\Ext\Forms\Field{trait Getters{public function GetId(){return$this->id;}public function GetName(){return$this->name;}public function GetType(){return$this->type;}public function GetValue(){return$this->value;}public function&GetCssClasses(){return$this->cssClasses;}public function&GetControlAttrs(){return$this->controlAttrs;}public function GetControlAttr($name='data-*'){return isset($this->controlAttrs[$name])?$this->controlAttrs[$name]:NULL;}public function&GetValidators(){return$this->validators;}public function&HasValidator($validatorNameOrInstance){if(is_string($validatorNameOrInstance)){$validatorClassName=$validatorNameOrInstance;}else if($validatorNameOrInstance instanceof\MvcCore\Ext\Forms\IValidator){$validatorClassName=get_class($validatorNameOrInstance);}else{return$this->throwNewInvalidArgumentException('Unknown validator type given: `'.$validatorNameOrInstance.'`, type: `'.gettype($validatorNameOrInstance).'`.');}$slashPos=strrpos($validatorClassName,'\\');$validatorName=$slashPos!==FALSE?substr($validatorClassName,$slashPos+1):$validatorClassName;return isset($this->validators[$validatorName]);}public function GetViewScript(){return$this->viewScript;}public function GetJsClassName(){return$this->jsClassName;}public function GetJsSupportingFile(){return$this->jsSupportingFile;}public function GetCssSupportingFile(){return$this->cssSupportingFile;}public static function&GetTemplates(){return(array)static::$templates;}}}
namespace MvcCore\Ext\Forms\Field{trait Rendering{public function Render(){if($this->viewScript){return$this->RenderTemplate();}else{return$this->RenderNaturally();}}public function RenderTemplate(){$viewClass=$this->form->GetViewClass();$formParentController=$this->form->GetParentController();$view=$viewClass::CreateInstance()->SetController($formParentController)->SetView($formParentController->GetView())->SetForm($this->form)->SetField($this);return$view->Render($viewClass::GetFieldsDir(),is_bool($this->viewScript)?$this->type:$this->viewScript);}public function RenderNaturally(){$result='';$renderMode=\MvcCore\Ext\Forms\IForm::FIELD_RENDER_MODE_NO_LABEL;$label=NULL;if($this instanceof\MvcCore\Ext\Forms\Fields\ILabel){$renderMode=$this->GetRenderMode();$label=$this->GetLabel();}if($renderMode==\MvcCore\Ext\Forms\IForm::FIELD_RENDER_MODE_NORMAL&&$label){$result=$this->RenderLabelAndControl();}else if($renderMode==\MvcCore\Ext\Forms\IForm::FIELD_RENDER_MODE_LABEL_AROUND&&$label){$result=$this->RenderControlInsideLabel();}else if($renderMode==\MvcCore\Ext\Forms\IForm::FIELD_RENDER_MODE_NO_LABEL||!$label){$result=$this->RenderControl();$errors=$this->RenderErrors();$formErrorsRenderMode=$this->form->GetErrorsRenderMode();if($formErrorsRenderMode!==\MvcCore\Ext\Forms\IForm::ERROR_RENDER_MODE_BEFORE_EACH_CONTROL){$result=$errors.$result;}else if($formErrorsRenderMode!==\MvcCore\Ext\Forms\IForm::ERROR_RENDER_MODE_AFTER_EACH_CONTROL){$result.=$errors;}}return$result;}public function RenderLabelAndControl(){$result='';if($this->labelSide==\MvcCore\Ext\Forms\IField::LABEL_SIDE_LEFT){$result=$this->RenderLabel().$this->RenderControl();}else{$result=$this->RenderControl().$this->RenderLabel();}$errors=$this->RenderErrors();$formErrorsRenderMode=$this->form->GetErrorsRenderMode();if($formErrorsRenderMode==\MvcCore\Ext\Forms\IForm::ERROR_RENDER_MODE_BEFORE_EACH_CONTROL){$result=$errors.$result;}else if($formErrorsRenderMode==\MvcCore\Ext\Forms\IForm::ERROR_RENDER_MODE_AFTER_EACH_CONTROL){$result.=$errors;}return$result;}public function RenderControlInsideLabel(){if($this->renderMode==\MvcCore\Ext\Forms\IForm::FIELD_RENDER_MODE_NO_LABEL)return$this->RenderControl();$template=$this->labelSide==\MvcCore\Ext\Forms\IField::LABEL_SIDE_LEFT?static::$templates->togetherLabelLeft:static::$templates->togetherLabelRight;$attrsStr=$this->renderLabelAttrsWithFieldVars();$formViewClass=$this->form->GetViewClass();$result=$formViewClass::Format($template,['id'=>$this->id,'label'=>$this->label,'control'=>$this->RenderControl(),'attrs'=>$attrsStr?" $attrsStr":'',]);$errors=$this->RenderErrors();$formErrorsRenderMode=$this->form->GetErrorsRenderMode();if($formErrorsRenderMode==\MvcCore\Ext\Forms\IForm::ERROR_RENDER_MODE_BEFORE_EACH_CONTROL){$result=$errors.$result;}else if($formErrorsRenderMode==\MvcCore\Ext\Forms\IForm::ERROR_RENDER_MODE_AFTER_EACH_CONTROL){$result.=$errors;}return$result;}public function RenderControl(){$attrsStr=$this->renderControlAttrsWithFieldVars();if(!$this->form->GetFormTagRenderingStatus())$attrsStr.=(strlen($attrsStr)>0?' ':'').'form="'.$this->form->GetId().'"';$formViewClass=$this->form->GetViewClass();return$formViewClass::Format(static::$templates->control,['id'=>$this->id,'name'=>$this->name,'type'=>$this->type,'value'=>htmlspecialchars_decode(htmlspecialchars($this->value,ENT_QUOTES),ENT_QUOTES),'attrs'=>strlen($attrsStr)>0?' '.$attrsStr:'',]);}public function RenderLabel(){$renderMode=$this instanceof\MvcCore\Ext\Forms\Fields\ILabel?$this->GetRenderMode():\MvcCore\Ext\Forms\IForm::FIELD_RENDER_MODE_NO_LABEL;if($renderMode==\MvcCore\Ext\Forms\IForm::FIELD_RENDER_MODE_NO_LABEL)return'';$attrsStr=$this->renderLabelAttrsWithFieldVars();$formViewClass=$this->form->GetViewClass();return$formViewClass::Format(static::$templates->label,['id'=>$this->id,'label'=>$this->label,'attrs'=>$attrsStr?" $attrsStr":'',]);}public function RenderErrors(){$result="";if($this->errors&&$this->form->GetErrorsRenderMode()!==\MvcCore\Ext\Forms\IForm::ERROR_RENDER_MODE_ALL_TOGETHER){$result.='<span class="errors">';foreach($this->errors as$key=>$errorMessage){$errorCssClass='error error-'.$this->name.' error-'.$key;$result.="<span class=\"$errorCssClass\">$errorMessage</span>";}$result.='</span>';}return$result;}protected function renderLabelAttrsWithFieldVars($fieldVars=[]){return$this->renderAttrsWithFieldVars($fieldVars,$this->labelAttrs,$this->cssClasses,FALSE);}protected function renderControlAttrsWithFieldVars($fieldVars=[]){return$this->renderAttrsWithFieldVars($fieldVars,$this->controlAttrs,$this->cssClasses,TRUE);}protected function renderAttrsWithFieldVars($fieldVars=[],$fieldAttrs=[],$cssClasses=[],$controlRendering=FALSE){$attrs=[];foreach($fieldVars as$fieldName){if($this->{$fieldName}!==NULL){$attrName=strtolower($fieldName);$fieldType=gettype($this->{$fieldName});if($fieldType=='array'){$attrs[$attrName]=implode(',',$this->{$fieldName});}else{$attrs[$attrName]=(string)$this->{$fieldName};}}}if($this instanceof\MvcCore\Ext\Forms\Fields\IVisibleField){$boolFieldVars=['accessKey'=>FALSE,'autoFocus'=>TRUE,'disabled'=>TRUE,'readOnly'=>TRUE,'required'=>TRUE,];foreach($boolFieldVars as$fieldName=>$addAlsoAsCssClass){if(isset($this->{$fieldName})&&$this->{$fieldName}!==NULL&&$this->{$fieldName}!==FALSE){$attrName=strtolower($fieldName);if($controlRendering)$attrs[$attrName]=$attrName;if($addAlsoAsCssClass)$cssClasses[]=$attrName;}}if($this->tabIndex!==NULL)$attrs['tabindex']=$this->tabIndex+$this->form->GetBaseTabIndex();}$cssClasses[]=\MvcCore\Tool::GetDashedFromPascalCase($this->name);$attrs['class']=implode(' ',$cssClasses);$formViewClass=$this->form->GetViewClass();return$formViewClass::RenderAttrs(array_merge($fieldAttrs,$attrs));}}}
namespace MvcCore\Ext\Forms\Field\Props{trait Required{protected$required=NULL;public function GetRequired(){return$this->required;}public function&SetRequired($required=TRUE){$this->required=$required;return$this;}}}
namespace MvcCore\Ext\Forms\Field\Props{trait AccessKey{protected$accessKey=NULL;public function GetAccessKey(){return$this->accessKey;}public function&SetAccessKey($accessKey){$this->accessKey=$accessKey;return$this;}}}
namespace MvcCore\Ext\Forms\Field\Props{trait Disabled{protected$disabled=NULL;public function GetDisabled(){return$this->disabled;}public function&SetDisabled($disabled){$this->disabled=$disabled;return$this;}}}
namespace MvcCore\Ext\Forms\Field\Props{trait AutoFocus{protected$autoFocus=NULL;public function GetAutoFocus(){return$this->autoFocus;}public function&SetAutoFocus($autoFocus=TRUE,$duplicateBehaviour=\MvcCore\Ext\Forms\IField::AUTOFOCUS_DUPLICITY_EXCEPTION){$this->autoFocus=$autoFocus;if($autoFocus&&$duplicateBehaviour!==\MvcCore\Ext\Forms\IField::AUTOFOCUS_DUPLICITY_QUIETLY_SET_NEW){$form=&$this->form;$form::SetAutoFocusedFormField($form->GetId(),$this->name,$duplicateBehaviour);}return$this;}}}
namespace MvcCore\Ext\Forms\Field\Props{trait TabIndex{protected$tabIndex=NULL;public function GetTabIndex(){return$this->tabIndex;}public function&SetTabIndex($tabIndex='auto'){if($tabIndex==='auto'||is_int($tabIndex)){$this->tabIndex=$tabIndex;}else{$this->throwNewInvalidArgumentException('Tabindex property is possible to configure only with `auto` string or integer. `'.$tabIndex.'` value given.');}return$this;}protected function preDispatchTabIndex(){if($this->tabIndex==='auto')$this->tabIndex=$this->form->GetFieldNextAutoTabIndex();}}}
namespace MvcCore\Ext\Forms\Field\Props{trait ReadOnly{protected$readOnly=NULL;public function GetReadOnly(){return$this->readOnly;}public function&SetReadOnly($readOnly=TRUE){$this->readOnly=$readOnly;return$this;}}}
namespace MvcCore\Ext\Forms\Fields{interface IVisibleField{public function GetAccessKey();public function&SetAccessKey($accessKey);public function GetAutoFocus();public function&SetAutoFocus($autoFocus=TRUE,$duplicateBehaviour=\MvcCore\Ext\Forms\IField::AUTOFOCUS_DUPLICITY_EXCEPTION);public function GetDisabled();public function&SetDisabled($disabled);public function GetReadOnly();public function&SetReadOnly($readOnly=TRUE);public function GetRequired();public function&SetRequired($required=TRUE);public function GetTabIndex();public function&SetTabIndex($tabIndex);}}
namespace MvcCore\Ext\Forms{interface IValidator{public static function&CreateInstance(array$constructorConfig=[]);public static function GetErrorMessage($errorMsgIndex);public function&SetForm(\MvcCore\Ext\Forms\IForm&$form);public function&SetField(\MvcCore\Ext\Forms\IField&$field);public function Validate($rawSubmittedValue);}}
namespace MvcCore{interface IController{public static function CreateInstance();public static function&GetCallerControllerInstance();public static function Redirect($location='',$code=\MvcCore\IResponse::SEE_OTHER);public function Dispatch($actionName="IndexAction");public function Init();public function PreDispatch();public function GetParam($name="",$pregReplaceAllowedChars="a-zA-Z0-9_/\-\.\@");public function&GetApplication();public function&SetApplication(\MvcCore\IApplication&$application);public function&GetRequest();public function&SetRequest(\MvcCore\IRequest&$request);public function&GetResponse();public function&SetResponse(\MvcCore\IResponse&$response);public function&GetRouter();public function&SetRouter(\MvcCore\IRouter&$router);public function IsAjax();public function&GetUser();public function&SetUser(&$user);public function&GetView();public function&SetView(\MvcCore\IView&$view);public function GetLayout();public function&SetLayout($layout='');public function GetViewScriptsPath();public function&SetViewScriptsPath($viewScriptsPath=NULL);public function GetViewEnabled();public function&SetViewEnabled($viewEnabled=TRUE);public function AddChildController(\MvcCore\IController&$controller,$index=NULL);public function GetParentController();public function&SetParentController(\MvcCore\IController&$parentController=NULL);public function GetChildControllers();public function&SetChildControllers(array&$childControllers=[]);public function GetChildController($index=NULL);public function AssetAction();public function Render($controllerDashedName='',$actionDashedName='');public function HtmlResponse($output="",$terminate=TRUE);public function XmlResponse($output="",$terminate=TRUE);public function JsonResponse($data=NULL,$terminate=TRUE);public function Url($controllerActionOrRouteName='Index:Index',array$params=[]);public function AssetUrl($path='');public function GetSessionNamespace($name=\MvcCore\ISession::DEFAULT_NAMESPACE_NAME);public function RenderError($exceptionMessage='');public function RenderNotFound();public function Terminate();}}
namespace MvcCore\Controller{trait Rendering{public function Render($controllerOrActionNameDashed=NULL,$actionNameDashed=NULL){if($this->dispatchState==0)$this->Init();if($this->dispatchState==1)$this->PreDispatch();if($this->dispatchState<4&&$this->viewEnabled){$currentCtrlIsTopMostParent=$this->parentController===NULL;if(!$currentCtrlIsTopMostParent){$this->view->SetUpStore($this->parentController->GetView(),FALSE);}foreach($this->childControllers as$ctrlKey=>$childCtrl){if(!is_numeric($ctrlKey)&&!isset($this->view->$ctrlKey))$this->view->$ctrlKey=$childCtrl;}$viewScriptPath=$this->renderGetViewScriptPath($controllerOrActionNameDashed,$actionNameDashed);$actionResult=$this->view->RenderScript($viewScriptPath);if($currentCtrlIsTopMostParent){$viewClass=$this->application->GetViewClass();$layout=$viewClass::CreateInstance()->SetController($this)->SetUpStore($this->view,TRUE);$outputResult=$layout->RenderLayoutAndContent($this->layout,$actionResult);unset($layout,$this->view);$this->XmlResponse($outputResult);}else{$this->dispatchState=4;return$actionResult;}}$this->dispatchState=4;return'';}public function HtmlResponse($output='',$terminate=FALSE){if(!$this->response->HasHeader('Content-Type')){$contentTypeHeaderValue=strpos(\MvcCore\View::GetDoctype(),\MvcCore\View::DOCTYPE_XHTML)!==FALSE?'application/xhtml+xml':'text/html';$this->response->SetHeader('Content-Type',$contentTypeHeaderValue);}$this->response->SetCode(\MvcCore\IResponse::OK)->SetBody($output);if($terminate)$this->Terminate();}public function XmlResponse($output='',$terminate=FALSE){if(!$this->response->HasHeader('Content-Type'))$this->response->SetHeader('Content-Type','application/xml');$this->response->SetCode(\MvcCore\IResponse::OK)->SetBody($output);if($terminate)$this->Terminate();}public function JsonResponse($data=NULL,$terminate=FALSE){$toolClass=$this->application->GetToolClass();$output=$toolClass::EncodeJson($data);if(!$this->response->HasHeader('Content-Type'))$this->response->SetHeader('Content-Type','text/javascript');$this->response->SetCode(\MvcCore\IResponse::OK)->SetHeader('Content-Length',strlen($output))->SetBody($output);if($terminate)$this->Terminate();}public function RenderError($exceptionMessage=''){if($this->application->IsErrorDispatched())return;throw new\ErrorException($exceptionMessage?$exceptionMessage:"Server error: `".htmlspecialchars($this->request->GetFullUrl())."`.",500);}public function RenderNotFound(){if($this->application->IsNotFoundDispatched())return;throw new\ErrorException("Page not found: `".htmlspecialchars($this->request->GetFullUrl())."`.",404);}protected function renderGetViewScriptPath($controllerOrActionNameDashed=NULL,$actionNameDashed=NULL){$currentCtrlIsTopMostParent=$this->parentController===NULL;if($this->viewScriptsPath!==NULL){$resultPathItems=[$this->viewScriptsPath];if($controllerOrActionNameDashed!==NULL)$resultPathItems[]=$controllerOrActionNameDashed;if($actionNameDashed!==NULL)$resultPathItems[]=$actionNameDashed;return str_replace(['_','\\'],'/',implode('/',$resultPathItems));}if($actionNameDashed!==NULL){$controllerNameDashed=$controllerOrActionNameDashed;}else{$toolClass='';if($currentCtrlIsTopMostParent){$controllerNameDashed=$this->controllerName;}else{$ctrlsDefaultNamespace=$this->application->GetAppDir().'\\'.$this->application->GetControllersDir();$currentCtrlClassName=get_class($this);if(mb_strpos($currentCtrlClassName,$ctrlsDefaultNamespace)===0)$currentCtrlClassName=mb_substr($currentCtrlClassName,mb_strlen($ctrlsDefaultNamespace)+1);$currentCtrlClassName=str_replace('\\','/',$currentCtrlClassName);$toolClass=$this->application->GetToolClass();$controllerNameDashed=$toolClass::GetDashedFromPascalCase($currentCtrlClassName);}if($controllerOrActionNameDashed!==NULL){$actionNameDashed=$controllerOrActionNameDashed;}else{if($currentCtrlIsTopMostParent){$actionNameDashed=$this->actionName;}else{$defaultCtrlAction=$this->application->GetDefaultControllerAndActionNames();$actionNameDashed=$toolClass::GetDashedFromPascalCase($defaultCtrlAction[1]);}}}$controllerPath=str_replace(['_','\\'],'/',$controllerNameDashed);return implode('/',[$controllerPath,$actionNameDashed]);}}}
namespace MvcCore\Controller{trait PropsGettersSetters{protected static$staticPath='/static';protected static$tmpPath='/Var/Tmp';protected$application;protected$request;protected$response;protected$router;protected$controllerName='';protected$actionName='';protected$ajax=FALSE;protected$view=NULL;protected$layout='layout';protected$viewScriptsPath=NULL;protected$viewEnabled=TRUE;protected$user=NULL;protected$dispatchState=0;protected$parentController=NULL;protected$childControllers=[];protected static$allControllers=[];private static$_assetsMimeTypes=['js'=>'text/javascript','css'=>'text/css','ico'=>'image/x-icon','gif'=>'image/gif','png'=>'image/png','jpg'=>'image/jpg','jpeg'=>'image/jpeg','bmp'=>'image/bmp','svg'=>'image/svg+xml','eot'=>'application/vnd.ms-fontobject','ttf'=>'font/truetype','otf'=>'font/opentype','woff'=>'application/x-font-woff',];public function GetParam($name="",$pregReplaceAllowedChars="a-zA-Z0-9_;, /\-\@\:",$ifNullValue=NULL,$targetType=NULL){return$this->request->GetParam($name,$pregReplaceAllowedChars,$ifNullValue,$targetType);}public function&GetApplication(){return$this->application;}public function&SetApplication(\MvcCore\IApplication&$application){$this->application=&$application;return$this;}public function&GetRequest(){return$this->request;}public function&GetResponse(){return$this->response;}public function&SetResponse(\MvcCore\IResponse&$response){$this->response=&$response;return$this;}public function&GetRouter(){return$this->router;}public function&SetRouter(\MvcCore\IRouter&$router){$this->router=&$router;return$this;}public function IsAjax(){return$this->ajax;}public function&GetUser(){return$this->user;}public function&SetUser(&$user){$this->user=$user;return$this;}public function&GetView(){return$this->view;}public function&SetView(\MvcCore\IView&$view){$this->view=$view;return$this;}public function GetLayout(){return$this->layout;}public function&SetLayout($layout=''){$this->layout=$layout;return$this;}public function GetViewScriptsPath(){return$this->viewScriptsPath;}public function&SetViewScriptsPath($viewScriptsPath=NULL){$this->viewScriptsPath=$viewScriptsPath;return$this;}public function GetViewEnabled(){return$this->viewEnabled;}public function&SetViewEnabled($viewEnabled=TRUE){$this->viewEnabled=$viewEnabled;return$this;}public function GetParentController(){return$this->parentController;}public function&SetParentController(\MvcCore\IController&$parentController=NULL){$this->parentController=$parentController;return$this;}public function GetChildControllers(){return$this->childControllers;}public function&SetChildControllers(array&$childControllers=[]){$this->childControllers=&$childControllers;return$this;}public function GetChildController($index=NULL){return$this->childControllers[$index];}public function Url($controllerActionOrRouteName='Index:Index',array$params=[]){return$this->router->Url($controllerActionOrRouteName,$params);}public function AssetUrl($path=''){return$this->router->Url('Controller:Asset',['path'=>$path]);}}}
namespace MvcCore\Controller{trait Dispatching{public static function&CreateInstance(){$instance=new static();self::$allControllers[spl_object_hash($instance)]=&$instance;return$instance;}public static function&GetCallerControllerInstance(){$result=NULL;$backtraceItems=debug_backtrace(DEBUG_BACKTRACE_PROVIDE_OBJECT);if(count($backtraceItems)<3)return$result;$calledClass=get_called_class();foreach($backtraceItems as$backtraceItem){if(!isset($backtraceItem['object'])||!$backtraceItem['object'])continue;$object=&$backtraceItem['object'];$class=&$backtraceItem['class'];if($object instanceof\MvcCore\IController&&$class!==$calledClass){$result=&$object;break;}}return$result;}public function&SetRequest(\MvcCore\IRequest&$request){$this->request=&$request;$this->controllerName=$request->GetControllerName();$this->actionName=$request->GetActionName();$this->ajax=$request->IsAjax();if($this->ajax||($this->controllerName=='controller'&&$this->actionName=='asset'))$this->SetViewEnabled(FALSE);return$this;}public function Dispatch($actionName="IndexAction"){$this->Init();if($this->dispatchState==5)return;if($this->dispatchState<1)$this->dispatchState=1;$this->PreDispatch();if($this->dispatchState==5)return;if($this->dispatchState<2)$this->dispatchState=2;if(method_exists($this,$actionName))$this->$actionName();if($this->dispatchState==5)return;if($this->dispatchState<3)$this->dispatchState=3;$this->Render($this->controllerName,$this->actionName);}public function Init(){if($this->dispatchState>0)return;self::$allControllers[spl_object_hash($this)]=&$this;if($this->parentController===NULL){$this->application->SessionStart();$responseContentType=$this->ajax?'text/javascript':'text/html';$this->response->SetHeader('Content-Type',$responseContentType);}$this->autoInitProperties();foreach($this->childControllers as$controller){$controller->Init();if($controller->dispatchState==5)break;}if($this->dispatchState===0)$this->dispatchState=1;}protected function autoInitProperties(){$type=new\ReflectionClass($this);$props=$type->getProperties(\ReflectionProperty::IS_PUBLIC|\ReflectionProperty::IS_PROTECTED|\ReflectionProperty::IS_PRIVATE);$toolsClass=$this->application->GetToolClass();foreach($props as$prop){$docComment=$prop->getDocComment();if(mb_strpos($docComment,'@autoinit')===FALSE)continue;$propName=$prop->getName();$methodName='create'.ucfirst($propName);$hasMethod=$type->hasMethod($methodName);if(!$hasMethod){$methodName='_'.$methodName;$hasMethod=$type->hasMethod($methodName);}if($hasMethod){$method=$type->getMethod($methodName);if(!$method->isPublic())$method->setAccessible(TRUE);$instance=$method->invoke($this);$implementsController=$instance instanceof\MvcCore\IController;}else{$pos=mb_strpos($docComment,'@var ');if($pos===FALSE)continue;$docComment=str_replace(["\r","\n","\t","*/"]," ",mb_substr($docComment,$pos+5));$pos=mb_strpos($docComment,' ');if($pos===FALSE)continue;$className=trim(mb_substr($docComment,0,$pos));if(!@class_exists($className)){$className=$prop->getDeclaringClass()->getNamespaceName().'\\'.$className;if(!@class_exists($className))continue;}$implementsController=$toolsClass::CheckClassInterface($className,'MvcCore\IController',FALSE,FALSE);if($implementsController){$instance=$className::CreateInstance();}else{$instance=new$className();}}if($implementsController)$this->AddChildController($instance,$propName);if(!$prop->isPublic())$prop->setAccessible(TRUE);$prop->setValue($this,$instance);}}public function PreDispatch(){if($this->dispatchState>1)return;if($this->dispatchState==0)$this->Init();if($this->viewEnabled&&$this->view===NULL){$viewClass=$this->application->GetViewClass();$this->view=$viewClass::CreateInstance()->SetController($this);}foreach($this->childControllers as$controller){$controller->PreDispatch();if($controller->dispatchState==5)break;}if($this->dispatchState==1)$this->dispatchState=2;}public function AddChildController(\MvcCore\IController&$controller,$index=NULL){self::$allControllers[spl_object_hash($controller)]=&$controller;if(!in_array($controller,$this->childControllers,TRUE)){if($index===NULL){$this->childControllers[]=&$controller;}else{$this->childControllers[$index]=&$controller;}$controller->SetParentController($this)->SetApplication($this->application)->SetRequest($this->request)->SetResponse($this->response)->SetRouter($this->router)->SetLayout($this->layout)->SetUser($this->user);}return$this;}public function GetSessionNamespace($name=\MvcCore\ISession::DEFAULT_NAMESPACE_NAME){$sessionClass=$this->application->GetSessionClass();return$sessionClass::GetNamespace($name);}public static function Redirect($location='',$code=\MvcCore\IResponse::SEE_OTHER){$app=&\MvcCore\Application::GetInstance();$app->GetResponse()->SetCode($code)->SetHeader('Location',$location);foreach(self::$allControllers as&$controller)$controller->dispatchState=5;$app->Terminate();}public function Terminate(){$this->dispatchState=5;$this->application->Terminate();}public function AssetAction(){$ext='';$path=$this->GetParam('path','a-zA-Z0-9_\-\/\.');$path='/'.ltrim(str_replace('..','',$path),'/');if(strpos($path,static::$staticPath)!==0&&strpos($path,static::$tmpPath)!==0){throw new\ErrorException("[".__CLASS__."] File path: '$path' is not allowed.",500);}$path=$this->request->GetAppRoot().$path;if(!\Packager_Php_Wrapper::FileExists($path)){throw new\ErrorException("[".__CLASS__."] File not found: '$path'.",404);}$lastDotPos=strrpos($path,'.');if($lastDotPos!==FALSE){$ext=substr($path,$lastDotPos+1);}if(isset(self::$_assetsMimeTypes[$ext])){header('Content-Type: '.self::$_assetsMimeTypes[$ext]);}header_remove('X-Powered-By');header('Vary: Accept-Encoding');$assetMTime=@\Packager_Php_Wrapper::Filemtime($path);if($assetMTime)header('Last-Modified: '.gmdate('D, d M Y H:i:s T',$assetMTime));\Packager_Php_Wrapper::Readfile($path);exit;}}}
namespace MvcCore\Ext\Forms\Field\Props{trait AutoComplete{protected$autoComplete=NULL;public function GetAutoComplete(){return$this->autoComplete;}public function&SetAutoComplete($autoComplete){$this->autoComplete=$autoComplete;return$this;}}}
namespace MvcCore\Ext\Forms\Fields{interface ILabel{public function GetLabel();public function&SetLabel($label=NULL);public function GetLabelSide();public function&SetLabelSide($labelSide=\MvcCore\Ext\Forms\IField::LABEL_SIDE_RIGHT);public function GetRenderMode();public function&SetRenderMode($renderMode=\MvcCore\Ext\Forms\IForm::FIELD_RENDER_MODE_LABEL_AROUND);public function&GetLabelAttrs();public function GetLabelAttr($name='data-*');public function&SetLabelAttrs(array$attrs=[]);public function&SetLabelAttr($name,$value);public function&AddLabelAttrs(array$attrs=[]);}}
namespace MvcCore\Ext\Forms\Field\Props{trait Label{protected$label=NULL;protected$labelSide=\MvcCore\Ext\Forms\IField::LABEL_SIDE_LEFT;protected$renderMode=NULL;protected$labelAttrs=[];public function GetLabel(){return$this->label;}public function&SetLabel($label=NULL){$this->label=$label;return$this;}public function GetLabelSide(){return$this->labelSide;}public function&SetLabelSide($labelSide=\MvcCore\Ext\Forms\IField::LABEL_SIDE_RIGHT){$this->labelSide=$labelSide;return$this;}public function GetRenderMode(){return$this->renderMode;}public function&SetRenderMode($renderMode=\MvcCore\Ext\Forms\IForm::FIELD_RENDER_MODE_LABEL_AROUND){$this->renderMode=$renderMode;return$this;}public function&GetLabelAttrs(){return$this->labelAttrs;}public function GetLabelAttr($name='data-*'){return isset($this->labelAttrs[$name])?$this->labelAttrs[$name]:NULL;}public function&SetLabelAttrs(array$attrs=[]){$this->labelAttrs=&$attrs;return$this;}public function&SetLabelAttr($name,$value){$this->labelAttrs[$name]=$value;return$this;}public function&AddLabelAttrs(array$attrs=[]){$this->labelAttrs=array_merge($this->labelAttrs,$attrs);return$this;}}}
namespace MvcCore\Model{trait Props{protected static$connectionArguments=['4D'=>['dsn'=>'{driver}:host={host};charset=UTF-8','auth'=>TRUE,'fileDb'=>FALSE,'options'=>[],],'firebird'=>['dsn'=>'{driver}:host={host};dbname={database};charset=UTF8','auth'=>TRUE,'fileDb'=>TRUE,'options'=>[]],'ibm'=>['dsn'=>'ibm:DRIVER={IBM DB2 ODBC DRIVER};DATABASE={database};HOSTNAME={host};PORT={port};PROTOCOL=TCPIP;','auth'=>TRUE,'fileDb'=>FALSE,'options'=>[],],'informix'=>['dsn'=>'{driver}:host={host};service={service};database={database};server={server};protocol={protocol};EnableScrollableCursors=1','auth'=>TRUE,'fileDb'=>FALSE,'options'=>[],],'mysql'=>['dsn'=>'{driver}:host={host};dbname={database}','auth'=>TRUE,'fileDb'=>FALSE,'options'=>['\PDO::ATTR_EMULATE_PREPARES'=>FALSE,'\PDO::MYSQL_ATTR_MULTI_STATEMENTS'=>TRUE,'\PDO::MYSQL_ATTR_INIT_COMMAND'=>"SET NAMES 'UTF8'",],],'sqlite'=>['dsn'=>'{driver}:{database}','auth'=>FALSE,'fileDb'=>TRUE,'options'=>[],],'sqlsrv'=>['dsn'=>'{driver}:Server={host};Database={database}','auth'=>TRUE,'fileDb'=>FALSE,'options'=>[],],'default'=>['dsn'=>'{driver}:host={host};dbname={database}','auth'=>TRUE,'fileDb'=>FALSE,'options'=>[],],];protected static$connectionName=NULL;protected static$connections=[];protected static$instances=[];protected static$configs=NULL;protected$autoInit=TRUE;protected$db;protected$config;protected$resource;protected static$protectedProperties=['autoInit'=>1,'db'=>1,'config'=>1,'resource'=>1,];}}
namespace MvcCore\Model{trait DbConnection{public static function GetDb($connectionNameOrConfig=NULL){if(is_array($connectionNameOrConfig)){if(static::$configs===NULL)static::loadConfigs(FALSE);$connectionName=static::SetConfig($connectionNameOrConfig);}else{if(static::$configs===NULL)static::loadConfigs(TRUE);$connectionName=$connectionNameOrConfig;if($connectionName==NULL)$connectionName=static::$connectionName;if($connectionName==NULL)$connectionName=self::$connectionName;}if(!isset(static::$connections[$connectionName])){$cfg=static::GetConfig($connectionName);if($cfg===NULL)$cfg=current(static::$configs);$conArgs=(object)self::$connectionArguments[isset(self::$connectionArguments[$cfg->driver])?$cfg->driver:'default'];$connection=NULL;if($conArgs->fileDb){$appRoot=\MvcCore\Application::GetInstance()->GetRequest()->GetAppRoot();if(strpos($appRoot,'phar://')!==FALSE){$lastSlashPos=strrpos($appRoot,'/');$appRoot=substr($appRoot,7,$lastSlashPos-7);}$cfg->database=str_replace('\\','/',realpath($appRoot.$cfg->database));}$dsn=$conArgs->dsn;foreach((array)$cfg as$key=>$value)$dsn=str_replace('{'.$key.'}',$value,$dsn);if($conArgs->auth){$connection=new\PDO($dsn,$cfg->user,$cfg->password,$conArgs->options);}else{$connection=new\PDO($dsn);}static::$connections[$connectionName]=$connection;}return static::$connections[$connectionName];}public static function&GetConfigs(){if(static::$configs===NULL)static::loadConfigs(TRUE);return static::$configs;}public static function SetConfigs(array$configs=[],$defaultConnectionName=NULL){static::$configs=[];foreach($configs as$key=>$value)static::$configs[$key]=(object)$value;static::$configs=&$configs;if($defaultConnectionName!==NULL)self::$defaultConnectionName=$defaultConnectionName;return TRUE;}public static function&GetConfig($connectionName=NULL){if(static::$configs===NULL)static::loadConfigs(TRUE);if($connectionName==NULL)$connectionName=static::$connectionName;if($connectionName==NULL)$connectionName=self::$connectionName;return static::$configs[$connectionName];}public static function SetConfig(array$config=[],$connectionName=NULL){if(static::$configs===NULL)static::loadConfigs(FALSE);if($connectionName===NULL){if(isset($config['name'])){$connectionName=$config['name'];}else if(isset($config['index'])){$connectionName=$config['index'];}}if($connectionName===NULL){$configNumericKeys=array_filter(array_keys(static::$configs),'is_numeric');if($configNumericKeys){sort($configNumericKeys);$connectionName=$configNumericKeys[count($configNumericKeys)-1]+1;}else{$connectionName=0;}}static::$configs[$connectionName]=(object)$config;return$connectionName;}protected static function loadConfigs($throwExceptionIfNoSysConfig=TRUE){$configClass=\MvcCore\Application::GetInstance()->GetConfigClass();$systemCfg=$configClass::GetSystem();if($systemCfg===FALSE&&$throwExceptionIfNoSysConfig)throw new\Exception("[".__CLASS__."] System config.ini not found in '".$configClass::$SystemConfigPath."'.");if(!isset($systemCfg->db)&&$throwExceptionIfNoSysConfig)throw new\Exception("[".__CLASS__."] No [db] section and no records matched 'db.*' found in system config.ini.");$systemCfgDb=&$systemCfg->db;$cfgType=gettype($systemCfgDb);$configs=[];$defaultConnectionName=NULL;if($cfgType=='array'){if(isset($systemCfgDb['defaultName']))$defaultConnectionName=$systemCfgDb['defaultName'];foreach($systemCfgDb as$key=>$value){if($key==='defaultName')continue;$configs[$key]=(object)$value;}}else if($cfgType=='object'){if(isset($systemCfgDb->defaultName))$defaultConnectionName=$systemCfgDb->defaultName;if(isset($systemCfgDb->driver)){$configs[0]=$systemCfgDb;}else{foreach($systemCfgDb as$key=>$value){if($key==='defaultName')continue;$configs[$key]=(object)$value;}}}if($defaultConnectionName!==NULL){if($configs){reset($configs);$defaultConnectionName=key($configs);}if(!isset($configs[$defaultConnectionName]))throw new\Exception("[".__CLASS__."] No default connection name '$defaultConnectionName' found in 'db.*' section in system config.ini.");self::$connectionName=$defaultConnectionName;}static::$configs=&$configs;}}}
namespace MvcCore\Ext\Forms\Field\Props{trait PlaceHolder{protected$placeHolder=NULL;public function GetPlaceHolder(){return$this->placeHolder;}public function&SetPlaceHolder($placeHolder){$this->placeHolder=$placeHolder;return$this;}}}
namespace MvcCore{interface IModel{public function GetValues($getNullValues=FALSE,$includeInheritProperties=TRUE,$publicOnly=TRUE);public function&SetUp($data=[],$keysInsensitive=FALSE,$includeInheritProperties=TRUE,$publicOnly=TRUE);public static function&GetInstance();public static function GetResource($args=[],$modelClassName='',$resourceClassPath='\Resource');public function Init($connectionName=NULL);public static function GetDb($connectionNameOrConfig=NULL);public static function&GetConfigs();public static function SetConfigs(array$configs=[]);public static function&GetConfig($connectionName=NULL);public static function SetConfig(array$config=[],$connectionName=NULL);public function __call($rawName,$arguments=[]);public function __set($name,$value);public function __get($name);}}
namespace MvcCore\Model{trait DataMethods{public function GetValues($getNullValues=FALSE,$includeInheritProperties=TRUE,$publicOnly=TRUE){$data=[];$modelClassName=get_class($this);$classReflector=new\ReflectionClass($modelClassName);$properties=$publicOnly?$classReflector->getProperties(\ReflectionProperty::IS_PUBLIC):$classReflector->getProperties();foreach($properties as$property){if(!$includeInheritProperties&&$property->class!=$modelClassName)continue;$propertyName=$property->name;if(isset(static::$protectedProperties[$propertyName]))continue;if(!$getNullValues&&$this->$propertyName===NULL)continue;$data[$propertyName]=$this->$propertyName;}return$data;}public function&SetUp($data=[],$keysInsensitive=FALSE,$includeInheritProperties=TRUE,$publicOnly=TRUE){$modelClassName=get_class($this);$classReflector=new\ReflectionClass($modelClassName);$properties=$publicOnly?$classReflector->getProperties(\ReflectionProperty::IS_PUBLIC):$classReflector->getProperties();$dataKeys=$keysInsensitive?','.implode(',',array_keys($data)).',':'';foreach($properties as$property){if(!$includeInheritProperties&&$property->class!=$modelClassName)continue;$propertyName=$property->name;if(isset($data[$propertyName])){$value=$data[$propertyName];}else if($keysInsensitive){$dataKeyPos=stripos($dataKeys,','.$propertyName.',');if($dataKeyPos===FALSE)continue;$dataKey=substr($dataKeys,$dataKeyPos+1,strlen($propertyName));$value=$data[$dataKey];}else{continue;}if($value!==NULL&&preg_match('/@var\s+([^\s]+)/',$property->getDocComment(),$matches)){list(,$rawType)=$matches;$types=explode('|',$rawType);foreach($types as$type)if(settype($value,$type))break;}$this->$propertyName=$value;}return$this;}public function __call($rawName,$arguments=[]){$nameBegin=strtolower(substr($rawName,0,3));$name=substr($rawName,3);if($nameBegin=='get'&&isset($this->$name)){return$this->$name;}else if($nameBegin=='set'){$this->$name=isset($arguments[0])?$arguments[0]:NULL;return$this;}else{throw new\InvalidArgumentException('['.__CLASS__."] No property with name '$name' defined.");}}public function __set($name,$value){if(isset(static::$protectedProperties[$name])){throw new\InvalidArgumentException('['.__CLASS__."] It's not possible to change property: '$name' originaly declared in class ".__CLASS__.'.');}return$this->$name=$value;}public function __get($name){if(isset(static::$protectedProperties[$name])){throw new\InvalidArgumentException('['.__CLASS__."] It's not possible to get property: '$name' originaly declared in class ".__CLASS__.'.');}return(isset($this->$name))?$this->$name:null;}}}
namespace MvcCore\Model{trait Instancing{public function __construct($connectionName=NULL){if($this->autoInit)$this->Init($connectionName);}public static function&GetInstance(){$className=get_called_class();$args=func_get_args();$instanceIndex=md5($className.'_'.serialize($args));if(!isset(self::$instances[$instanceIndex])){$reflectionClass=new\ReflectionClass($className);$instance=$reflectionClass->newInstanceArgs($args);self::$instances[$instanceIndex]=$instance;}return self::$instances[$instanceIndex];}public static function GetResource($args=[],$modelClassName='',$resourceClassPath='\Resource'){$result=NULL;if(!$modelClassName)$modelClassName=get_called_class();if(strpos($modelClassName,'\Resource')===FALSE){$resourceClassName=$modelClassName.$resourceClassPath;if(class_exists($resourceClassName)){$result=call_user_func_array([$resourceClassName,'GetInstance'],$args);}}return$result;}public function Init($connectionName=NULL){if($connectionName===NULL)$connectionName=static::$connectionName;if($connectionName===NULL)$connectionName=self::$connectionName;$this->db=static::GetDb($connectionName);$this->config=static::GetConfig($connectionName);$this->resource=static::GetResource([],get_class($this));}}}
namespace MvcCore\Ext\Forms\Field\Props{trait MinMaxLength{protected$minLength=NULL;protected$maxLength=NULL;public function GetMinLength(){return$this->minLength;}public function&SetMinLength($minLength){$this->minLength=$minLength;return$this;}public function GetMaxLength(){return$this->maxLength;}public function&SetMaxLength($maxLength){$this->maxLength=$maxLength;return$this;}protected function setFormMinMaxLength(){if(($this->minLength!==NULL||$this->maxLength!==NULL)&&!isset($this->validators['MinMaxLength']))$this->validators['MinMaxLength']='MinMaxLength';}}}
namespace MvcCore\Ext\Forms\Fields{interface IMinMaxLength{public function GetMinLength();public function&SetMinLength($minLength);public function GetMaxLength();public function&SetMaxLength($maxLength);}}
namespace MvcCore\Ext\Forms\Fields{interface IDataList{public function&GetList();public function&SetList($dataListIdOrInstance);}}
namespace MvcCore\Ext\Forms\Field\Props{trait DataList{protected$list=NULL;public function&GetList(){return$this->list;}public function&SetList($dataListIdOrInstance){if($dataListIdOrInstance instanceof\MvcCore\Ext\Forms\IField){$this->list=$dataListIdOrInstance->GetId();}else{$this->list=(string)$dataListIdOrInstance;}return$this;}}}
namespace MvcCore\Ext\Forms\Field\Props{trait InputMode{protected static$fieldTypesAndInputModes=['text'=>'text','password'=>'text','tel'=>'tel','search'=>'search','email'=>'email','url'=>'url'];protected$inputMode=NULL;public function&GetInputMode(){return$this->inputMode;}public function&SetInputMode($inputMode){$this->inputMode=$inputMode;return$this;}protected function preDispatchInputMode(){if($this->inputMode!==NULL)return;if($this->type==='number'){if((is_numeric($this->value)&&floor($this->value)!==$this->value)||(is_numeric($this->step)&&floor($this->step)!==$this->step)||(is_numeric($this->min)&&floor($this->min)!==$this->min)||(is_numeric($this->max)&&floor($this->max)!==$this->max)){$this->inputMode='decimal';}else{$this->inputMode='numeric';}}else if(isset(static::$fieldTypesAndInputModes[$this->type])){$this->inputMode=static::$fieldTypesAndInputModes[$this->type];}}}}
namespace MvcCore\Ext\Auths\Basics\UserAndRole{trait Permissions{protected$permissions=[];public function GetPermission($permissionName){if($this->admin)return TRUE;if(in_array($permissionName,$this->permissions))return TRUE;return FALSE;}public function&SetPermission($permissionName,$allow=TRUE){if(!in_array($permissionName,$this->permissions)&&$allow){$this->permissions[]=$permissionName;}else if(in_array($permissionName,$this->permissions)&&!$allow){$position=array_search($permissionName,$this->permissions);if($position!==FALSE)array_splice($this->permissions,$position,1);}return$this;}public function&GetPermissions(){return$this->permissions;}public function&SetPermissions($permissions){if(is_string($permissions)){$this->permissions=explode(',',$permissions);}else if(is_array($permissions)){$this->permissions=$permissions;}return$this;}}}
namespace MvcCore\Ext\Auths\Basics\UserAndRole{trait Base{protected$id=NULL;protected$active=TRUE;public function GetId(){return$this->id;}public function&SetId($id){$this->id=$id;return$this;}public function IsActive(){return$this->active;}public function GetActive(){return$this->active;}public function&SetActive($active){$this->active=(bool)$active;return$this;}}}
namespace MvcCore\Ext\Forms\Fields{interface IPattern{public function GetPattern();public function&SetPattern($pattern);}}
namespace MvcCore\Ext\Forms\Field\Props{trait Pattern{protected$pattern=NULL;public function GetPattern(){return$this->pattern;}public function&SetPattern($pattern){$this->pattern=$pattern;return$this;}protected function setFormPattern(){if($this->pattern&&!isset($this->validators['Pattern']))$this->validators['Pattern']='Pattern';}}}
namespace MvcCore\Ext\Forms\Field\Props{trait SpellCheck{protected$spellCheck=NULL;public function GetSpellCheck(){return$this->spellCheck;}public function&SetSpellCheck($spellCheck){if($spellCheck===TRUE){$spellCheck='true';}else if($spellCheck===FALSE){$spellCheck='false';}$this->spellCheck=$spellCheck;return$this;}}}
namespace MvcCore\Ext\Forms\Fields{interface IMinMaxStepNumbers{public function GetMin();public function&SetMin($min);public function GetMax();public function&SetMax($max);public function GetStep();public function&SetStep($step);}}
namespace MvcCore\Ext\Auths\Basics\User{trait Roles{protected$admin=FALSE;protected$roles=[];public function IsAdmin(){return$this->admin;}public function GetAdmin(){return$this->admin;}public function&SetAdmin($admin=TRUE){$this->admin=(bool)$admin;return$this;}public function&GetRoles(){return$this->roles;}public function&SetRoles($rolesOrRolesNames=[]){$this->roles=[];foreach($rolesOrRolesNames as$roleOrRoleName)$this->roles[]=static::getRoleName($roleOrRoleName);return$this;}public function&AddRole($roleOrRoleName){$roleName=static::getRoleName($roleOrRoleName);if(!in_array($roleName,$this->roles))$this->roles[]=$roleName;return$this;}public function HasRole($roleOrRoleName){$roleName=static::getRoleName($roleOrRoleName);return in_array($roleName,$this->roles);}public function&RemoveRole($roleOrRoleName){$roleName=static::getRoleName($roleOrRoleName);$position=array_search($roleName,$this->roles);if($position!==FALSE)array_splice($this->roles,$position,1);return$this;}public function IsAllowed($permissionName){if($this->GetPermission($permissionName))return TRUE;$roleClass=\MvcCore\Ext\Auths\Basic::GetInstance()->GetRoleClass();foreach($this->GetRoles()as$roleName){$role=$roleClass::GetByName($roleName);if($role->GetPermission($permissionName))return TRUE;}return FALSE;}protected static function getRoleName($roleOrRoleName){if(is_string($roleOrRoleName)){return$roleOrRoleName;}else if($roleOrRoleName instanceof\MvcCore\Ext\Auths\Basics\IRole){return$roleOrRoleName->GetName();}else{throw new\InvalidArgumentException('['.__CLASS__."] Given argument `$roleOrRoleName` doesn't "."implement interface `\MvcCore\Ext\Auths\Basics\IRole` "."or it's not string with role name.");}}}}
namespace MvcCore\Ext\Auths\Basics\User{trait Base{protected$userName=NULL;protected$fullName=NULL;protected$passwordHash=NULL;public function GetUserName(){return$this->userName;}public function&SetUserName($userName){$this->userName=$userName;return$this;}public function GetFullName(){return$this->fullName;}public function&SetFullName($fullName){$this->fullName=$fullName;return$this;}public function GetPasswordHash(){return$this->passwordHash;}public function&SetPasswordHash($passwordHash){$this->passwordHash=$passwordHash;return$this;}}}
namespace MvcCore\Ext\Auths\Basics\User{trait Auth{protected static$userSessionNamespace=NULL;public static function SetUpUserBySession(){$userSessionNamespace=static::GetUserSessionNamespace();$userNameStr=\MvcCore\Ext\Auths\Basics\IUser::SESSION_USERNAME_KEY;$authenticatedStr=\MvcCore\Ext\Auths\Basics\IUser::SESSION_AUTHENTICATED_KEY;if(isset($userSessionNamespace->{$userNameStr})&&isset($userSessionNamespace->{$authenticatedStr})&&$userSessionNamespace->{$authenticatedStr}){return static::GetByUserName($userSessionNamespace->{$userNameStr});}return NULL;}public static function LogIn($userName='',$password=''){$user=static::GetByUserName($userName);if($user){$hashedPassword=static::EncodePasswordToHash($password);if(hash_equals($user->passwordHash,$hashedPassword)){$userSessionNamespace=&static::GetUserSessionNamespace();$userNameStr=\MvcCore\Ext\Auths\Basics\IUser::SESSION_USERNAME_KEY;$authenticatedStr=\MvcCore\Ext\Auths\Basics\IUser::SESSION_AUTHENTICATED_KEY;$userSessionNamespace->$userNameStr=$user->userName;$userSessionNamespace->$authenticatedStr=TRUE;return$user;}}return NULL;}public static function LogOut($destroyWholeSession=FALSE){$userSessionNamespace=&static::GetUserSessionNamespace();if($destroyWholeSession){static::GetUserSessionNamespace()->Destroy();}else{$authenticatedStr=\MvcCore\Ext\Auths\Basics\IUser::SESSION_AUTHENTICATED_KEY;$userSessionNamespace->$authenticatedStr=FALSE;}}public static function EncodePasswordToHash($password='',$options=[]){if(!isset($options['salt'])){$configuredSalt=\MvcCore\Ext\Auths\Basic::GetInstance()->GetPasswordHashSalt();if($configuredSalt!==NULL){$options['salt']=$configuredSalt;}else{throw new\InvalidArgumentException('['.__CLASS__.'] No option `salt` given by second argument `$options`'." or no salt configured by `\MvcCore\Ext\Auth::GetInstance()->SetPasswordHashSalt('...')`.");}}if(isset($options['cost'])&&($options['cost']<4||$options['cost']>31))throw new\InvalidArgumentException('['.__CLASS__.'] `cost` option has to be from `4` to `31`, `'.$options['cost'].'` given.');$result=@password_hash($password,PASSWORD_BCRYPT,$options);if(!$result||strlen($result)<60)throw new\RuntimeException('['.__CLASS__.'] Hash computed by `password_hash()` is invalid. Try a little bit longer salt.');return$result;}public static function&GetUserSessionNamespace(){if(static::$userSessionNamespace===NULL){$sessionClass=\MvcCore\Application::GetInstance()->GetSessionClass();static::$userSessionNamespace=$sessionClass::GetNamespace('\\MvcCore\\Ext\\Auths\\Basic');static::$userSessionNamespace->SetExpirationSeconds(\MvcCore\Ext\Auths\Basic::GetInstance()->GetExpirationSeconds());}return static::$userSessionNamespace;}public static function&SetUserSessionNamespace(\MvcCore\ISession&$userSessionNamespace){static::$userSessionNamespace=$userSessionNamespace;return$userSessionNamespace;}}}
namespace MvcCore\Ext\Auths\Basics{interface IUser{const SESSION_USERNAME_KEY='userName';const SESSION_AUTHENTICATED_KEY='authenticated';public function GetId();public function&SetId($id);public function IsActive();public function GetActive();public function&SetActive($active);public function GetUserName();public function&SetUserName($userName);public function GetFullName();public function&SetFullName($fullName);public function GetPasswordHash();public function&SetPasswordHash($passwordHash);public static function SetUpUserBySession();public static function LogIn($userName='',$password='');public static function LogOut($destroyWholeSession=FALSE);public static function EncodePasswordToHash($password='',$options=[]);public static function&GetUserSessionNamespace();public static function&SetUserSessionNamespace(\MvcCore\ISession&$userSessionNamespace);public function IsAdmin();public function GetAdmin();public function&SetAdmin($admin=TRUE);public function&GetRoles();public function&SetRoles($rolesOrRolesNames=[]);public function&AddRole($roleOrRoleName);public function HasRole($roleOrRoleName);public function&RemoveRole($roleOrRoleName);public function IsAllowed($permissionName);public function GetPermission($permissionName);public function&SetPermission($permissionName,$allow=TRUE);public function&GetPermissions();public function&SetPermissions($permissions);public static function&GetByUserName($userName);}}
namespace MvcCore\Ext\Forms\Field\Props{trait MinMaxStepNumbers{protected$min=NULL;protected$max=NULL;protected$step=NULL;public function GetMin(){return$this->min;}public function&SetMin($min){$this->min=$min===NULL?NULL:floatval($min);return$this;}public function GetMax(){return$this->max;}public function&SetMax($max){$this->max=$max===NULL?NULL:floatval($max);return$this;}public function GetStep(){return$this->step;}public function&SetStep($step){$this->step=$step===NULL?NULL:floatval($step);return$this;}}}
namespace MvcCore\Ext\Forms\Field\Props{trait Size{protected$size=NULL;public function GetSize(){return$this->size;}public function&SetSize($size){$this->size=$size;return$this;}}}
namespace MvcCore\Ext\Auths\Basic{trait PropsGettersSetters{protected static$instance=NULL;protected static$toolClass=NULL;protected static$nonConfigurationProperties=['userInitialized','application','user','form',];protected$expirationSeconds=600;protected$userClass='MvcCore\Ext\Auths\Basics\User';protected$roleClass='MvcCore\Ext\Auths\Basics\Role';protected$controllerClass='//MvcCore\Ext\Auths\Basics\Controller';protected$signInFormClass='MvcCore\Ext\Auths\Basics\SignInForm';protected$signOutFormClass='MvcCore\Ext\Auths\Basics\SignOutForm';protected$signedInUrl=NULL;protected$signedOutUrl=NULL;protected$signErrorUrl=NULL;protected$signInRoute=['name'=>'auth_signin','match'=>'#^/signin/?$#','reverse'=>'/signin','method'=>\MvcCore\IRequest::METHOD_POST];protected$signOutRoute=['name'=>'auth_signout','match'=>'#^/signout/?$#','reverse'=>'/signout','method'=>\MvcCore\IRequest::METHOD_POST];protected$passwordHashSalt=NULL;protected$invalidCredentialsTimeout=3;protected$translator=NULL;protected$preHandlersPriority=100;protected$application=NULL;protected$user=NULL;protected$form=NULL;protected$userInitialized=FALSE;protected$addRoutesForAnyRequestMethod=FALSE;public function GetExpirationSeconds(){return$this->expirationSeconds;}public function GetUserClass(){return$this->userClass;}public function GetRoleClass(){return$this->roleClass;}public function GetControllerClass(){return$this->controllerClass;}public function GetSignInFormClass(){return$this->signInFormClass;}public function GetSignOutFormClass(){return$this->signOutFormClass;}public function GetSignedInUrl(){return$this->signedInUrl;}public function GetSignedOutUrl(){return$this->signedOutUrl;}public function GetSignErrorUrl(){return$this->signErrorUrl;}public function&GetSignInRoute(){return$this->getInitializedRoute('SignIn');}public function&GetSignOutRoute(){return$this->getInitializedRoute('SignOut');}public function GetPasswordHashSalt(){return$this->passwordHashSalt;}public function GetInvalidCredentialsTimeout(){return$this->invalidCredentialsTimeout;}public function GetTranslator(){return$this->translator;}public function&GetUser(){if(!$this->userInitialized&&$this->user===NULL){$configuredUserClass=$this->userClass;$this->user=$configuredUserClass::SetUpUserBySession();if($this->user!==NULL)$this->user->SetPasswordHash(NULL);$this->userInitialized=TRUE;}return$this->user;}public function IsAuthenticated(){return$this->GetUser()!==NULL;}public function&GetForm(){if($this->form===NULL){if($this->IsAuthenticated()){$this->form=$this->GetSignOutForm();}else{$this->form=$this->GetSignInForm();}}return$this->form;}public function GetSignInForm(){$routerClass=$this->application->GetRouterClass();$router=$routerClass::GetInstance();$route=$this->getInitializedRoute('SignIn')->SetRouter($router);$method=$route->GetMethod();$this->form=new\MvcCore\Ext\Auths\Basics\SignInForm($this->application->GetController());return$this->form->SetCssClasses(str_replace('_',' ',$this->form->GetId()))->SetMethod($method!==NULL?$method:\MvcCore\IRequest::METHOD_POST)->SetAction($router->UrlByRoute($route))->SetSuccessUrl($this->signedInUrl)->SetErrorUrl($this->signErrorUrl)->SetTranslator($this->translator)->Init();}public function GetSignOutForm(){$routerClass=$this->application->GetRouterClass();$router=$routerClass::GetInstance();$route=$this->getInitializedRoute('SignOut')->SetRouter($router);$method=$route->GetMethod();$this->form=new\MvcCore\Ext\Auths\Basics\SignOutForm($this->application->GetController());return$this->form->SetCssClasses(str_replace('_',' ',$this->form->GetId()))->SetMethod($method!==NULL?$method:\MvcCore\IRequest::METHOD_POST)->SetAction($router->UrlByRoute($route))->SetSuccessUrl($this->signedOutUrl)->SetErrorUrl($this->signErrorUrl)->SetTranslator($this->translator)->Init();}public function&GetConfiguration(){$result=[];$type=new\ReflectionClass($this);$props=$type->getProperties(\ReflectionProperty::IS_PUBLIC|\ReflectionProperty::IS_PROTECTED);foreach($props as$prop){$name=$prop->getName();if(!in_array($name,static::$nonConfigurationProperties))$result[$name]=$prop->getValue();}return$result;}public function&SetExpirationSeconds($expirationSeconds=600){$this->expirationSeconds=$expirationSeconds;return$this;}public function&SetUserClass($userClass=''){$this->userClass=$this->checkClassImplementation($userClass,'MvcCore\Ext\Auths\Basics\IUser',TRUE);return$this;}public function&SetRoleClass($roleClass=''){$this->userClass=$this->checkClassImplementation($roleClass,'MvcCore\Ext\Auths\Basics\IRole',TRUE);return$this;}public function&SetControllerClass($controllerClass=''){if(substr($controllerClass,0,2)=='//'){$controllerClassToCheck=substr($controllerClass,2);}else{$controllerClassToCheck=$controllerClass;}$controllerClassToCheck=$this->checkClassImplementation($controllerClassToCheck,'MvcCore\Ext\Auths\Basics\IController',FALSE);$controllerClassToCheck=$this->checkClassImplementation($controllerClassToCheck,'MvcCore\IController',TRUE);if($controllerClassToCheck)$this->controllerClass=$controllerClass;return$this;}public function&SetSignInFormClass($signInFormClass=''){$this->signInFormClass=$this->checkClassImplementation($signInFormClass,'MvcCore\Ext\Auths\Basics\IForm',FALSE);return$this;}public function&SetSignOutFormClass($signOutFormClass=''){$this->signOutFormClass=$this->checkClassImplementation($signOutFormClass,'MvcCore\Ext\Auths\Basics\IForm',FALSE);return$this;}public function&SetSignedInUrl($signedInUrl=NULL){$this->signedInUrl=$signedInUrl;return$this;}public function&SetSignedOutUrl($signedOutUrl=NULL){$this->signedOutUrl=$signedOutUrl;return$this;}public function&SetSignErrorUrl($signErrorUrl=NULL){$this->signErrorUrl=$signErrorUrl;return$this;}public function&SetSignInRoute($signInRoute=NULL){$this->signInRoute=$signInRoute;$method=NULL;if(gettype($signInRoute)=='array'&&isset($signInRoute['method']))$method=strtoupper($signInRoute['method']);if($signInRoute instanceof\MvcCore\IRoute)$method=$signInRoute->GetMethod();if($method!==\MvcCore\IRequest::METHOD_POST)$this->addRoutesForAnyRequestMethod=TRUE;return$this;}public function&SetSignOutRoute($signOutRoute=NULL){$this->signOutRoute=$signOutRoute;$method=NULL;if(gettype($signOutRoute)=='array'&&isset($signOutRoute['method']))$method=strtoupper($signOutRoute['method']);if($signOutRoute instanceof\MvcCore\IRoute)$method=$signOutRoute->GetMethod();if($method!==\MvcCore\IRequest::METHOD_POST)$this->addRoutesForAnyRequestMethod=TRUE;return$this;}public function&SetPasswordHashSalt($passwordHashSalt=''){$this->passwordHashSalt=$passwordHashSalt;return$this;}public function&SetInvalidCredentialsTimeout($seconds=3){$this->invalidCredentialsTimeout=$seconds;return$this;}public function&SetTranslator(callable$translator=NULL){$this->translator=$translator;return$this;}public function&SetUser(\MvcCore\Ext\Auths\Basics\IUser&$user=NULL){$this->user=$user;if($this->user!==NULL)$this->user->SetPasswordHash(NULL);$this->userInitialized=TRUE;return$this;}public function&SetForm(\MvcCore\Ext\Auths\Basics\IForm&$form){$this->form=$form;return$this;}public function&SetConfiguration($configuration=[],$throwExceptionIfPropertyIsMissing=TRUE){foreach($configuration as$key=>&$value){$setter='Set'.ucfirst($key);if(method_exists($this,$setter)){$this->$setter($value);}else if($throwExceptionIfPropertyIsMissing){throw new\InvalidArgumentException('['.__CLASS__.'] Property `'.$key.'` has no setter method `'.$setter.'` in class `'.get_class($this).'`.');}}return$this;}public function&SetTableStructureForDbUsers($tableName=NULL,$columnNames=NULL){$userClass=$this->userClass;$toolClass=static::$toolClass;if($toolClass::CheckClassInterface($userClass,'MvcCore\Ext\Auths\Basics\IDatabaseUser',TRUE,TRUE)){$userClass::SetUsersTableStructure($tableName,$columnNames);};return$this;}protected function checkClassImplementation($testClassName,$interfaceName,$checkStaticMethods=FALSE){$toolClass=static::$toolClass;if($toolClass::CheckClassInterface($testClassName,$interfaceName,$checkStaticMethods,TRUE)){return$testClassName;}return'';}}}
namespace MvcCore{interface IRouter{const DEFAULT_ROUTE_NAME='default';const DEFAULT_ROUTE_NAME_ERROR='error';const DEFAULT_ROUTE_NAME_NOT_FOUND='not_found';const TRAILING_SLASH_ALWAYS=1;const TRAILING_SLASH_BENEVOLENT=0;const TRAILING_SLASH_REMOVE=-1;const URL_PARAM_CONTROLLER='controller';const URL_PARAM_ACTION='action';const URL_PARAM_ABSOLUTE='absolute';const URL_PARAM_HOST='host';const URL_PARAM_DOMAIN='domain';const URL_PARAM_TLD='tld';const URL_PARAM_SLD='sld';const URL_PARAM_BASEPATH='basePath';const URL_PARAM_PATH='path';public static function&GetInstance(array$routes=[],$autoInitialize=TRUE);public function&SetRoutes($routes=[],$autoInitialize=TRUE);public function&AddRoutes(array$routes=[],$prepend=FALSE,$throwExceptionForDuplication=TRUE);public function&AddRoute($routeCfgOrRoute,$prepend=FALSE,$throwExceptionForDuplication=TRUE);public function HasRoute($routeOrRouteName);public function RemoveRoute($routeName);public function&GetRoute($routeName);public function&GetRoutes();public function&GetRequest();public function&SetRequest(\MvcCore\IRequest&$request);public function&SetRouteByQueryString($routeByQueryString=TRUE);public function GetRouteByQueryString();public function&SetCurrentRoute(\MvcCore\IRoute$currentRoute);public function&GetCurrentRoute();public function GetRouteToDefaultIfNotMatch();public function&SetRouteToDefaultIfNotMatch($enable=TRUE);public function&GetDefaultParams();public function&GetRequestedParams();public function GetTrailingSlashBehaviour();public function&SetTrailingSlashBehaviour($trailingSlashBehaviour=-1);public function GetAutoCanonizeRequests();public function&SetAutoCanonizeRequests($autoCanonizeRequests=TRUE);public function&SetPreRouteMatchingHandler(callable$preRouteMatchingHandler);public function GetPreRouteMatchingHandler();public function&SetPreRouteUrlBuildingHandler(callable$preRouteUrlBuildingHandler);public function GetPreRouteUrlBuildingHandler();public function Route();public function RedefineRoutedTarget($controllerNamePc=NULL,$actionNamePc=NULL,$changeSelfRoute=FALSE);public function Url($controllerActionOrRouteName='Index:Index',array$params=[]);public function UrlByQueryString($controllerActionOrRouteName='Index:Index',array&$params=[],$givenRouteName=NULL);public function UrlByRoute(\MvcCore\IRoute&$route,array&$params=[],$urlParamRouteName=NULL);public function&SetOrCreateDefaultRouteAsCurrent($routeName,$controllerPc,$actionPc,$fallbackCall=FALSE);}}
namespace MvcCore\Router{trait Canonical{protected function canonicalRedirectIfAny(){if($this->internalRequest||!$this->autoCanonizeRequests||$this->request->GetMethod()!==\MvcCore\IRequest::METHOD_GET)return TRUE;if($this->routeByQueryString){return$this->canonicalRedirectQueryStringStrategy();}else if($this->selfRouteName!==NULL){return$this->canonicalRedirectRewriteRoutesStrategy();}return TRUE;}protected function canonicalRedirectQueryStringStrategy(){$req=&$this->request;$redirectToCanonicalUrl=FALSE;$requestGlobalGet=&$req->GetGlobalCollection('get');$requestedCtrlDc=isset($requestGlobalGet['controller'])?$requestGlobalGet['controller']:NULL;$requestedActionDc=isset($requestGlobalGet['action'])?$requestGlobalGet['action']:NULL;$toolClass=self::$toolClass;list($dfltCtrlPc,$dftlActionPc)=$this->application->GetDefaultControllerAndActionNames();$dfltCtrlDc=$toolClass::GetDashedFromPascalCase($dfltCtrlPc);$dftlActionDc=$toolClass::GetDashedFromPascalCase($dftlActionPc);$requestedParamsClone=array_merge([],$this->requestedParams);if($requestedCtrlDc===NULL&&$requestedParamsClone['controller']===$dfltCtrlDc){unset($requestedParamsClone['controller']);$redirectToCanonicalUrl=TRUE;}else if($requestedCtrlDc!==NULL&&$requestedCtrlDc===$dfltCtrlDc){unset($requestedParamsClone['controller']);$redirectToCanonicalUrl=TRUE;}if($requestedActionDc===NULL&&$requestedParamsClone['action']===$dftlActionDc){unset($requestedParamsClone['action']);$redirectToCanonicalUrl=TRUE;}else if($requestedActionDc!==NULL&&$requestedActionDc===$dftlActionDc){unset($requestedParamsClone['action']);$redirectToCanonicalUrl=TRUE;}if($redirectToCanonicalUrl){$selfCanonicalUrl=$this->UrlByQueryString($this->selfRouteName,$requestedParamsClone);$this->redirect($selfCanonicalUrl,\MvcCore\IResponse::MOVED_PERMANENTLY);return FALSE;}return TRUE;}protected function canonicalRedirectRewriteRoutesStrategy(){$req=&$this->request;$redirectToCanonicalUrl=FALSE;$defaultParams=$this->GetDefaultParams()?:[];list($selfUrlDomainAndBasePart,$selfUrlPathAndQueryPart)=$this->currentRoute->Url($req,$this->requestedParams,$defaultParams,$this->getQueryStringParamsSepatator());if(mb_strlen($selfUrlDomainAndBasePart)>0&&$selfUrlDomainAndBasePart!==$req->GetBaseUrl())$redirectToCanonicalUrl=TRUE;if(mb_strlen($selfUrlPathAndQueryPart)>0){$path=$req->GetPath(TRUE);$requestedUrl=$path===''?'/':$path;if(mb_strpos($selfUrlPathAndQueryPart,'?')!==FALSE){$selfUrlPathAndQueryPart=rawurldecode($selfUrlPathAndQueryPart);$requestedUrl.=$req->GetQuery(TRUE,TRUE);}if($selfUrlPathAndQueryPart!==$requestedUrl)$redirectToCanonicalUrl=TRUE;}if($redirectToCanonicalUrl){$selfCanonicalUrl=$this->Url($this->selfRouteName,$this->requestedParams);$this->redirect($selfCanonicalUrl,\MvcCore\IResponse::MOVED_PERMANENTLY);return FALSE;}return TRUE;}}}
namespace MvcCore\Router{trait GettersSetters{public function&GetRequest(){return$this->request;}public function&SetRequest(\MvcCore\IRequest&$request){$this->request=&$request;return$this;}public function&SetRouteByQueryString($routeByQueryString=TRUE){$this->routeByQueryString=$routeByQueryString;return$this;}public function GetRouteByQueryString(){return$this->routeByQueryString;}public function GetRouteToDefaultIfNotMatch(){return$this->routeToDefaultIfNotMatch;}public function&SetRouteToDefaultIfNotMatch($enable=TRUE){$this->routeToDefaultIfNotMatch=$enable;return$this;}public function&GetDefaultParams(){return$this->defaultParams;}public function&GetRequestedParams(){return$this->requestedParams;}public function GetTrailingSlashBehaviour(){return$this->trailingSlashBehaviour;}public function&SetTrailingSlashBehaviour($trailingSlashBehaviour=-1){$this->trailingSlashBehaviour=$trailingSlashBehaviour;return$this;}public function GetAutoCanonizeRequests(){return$this->autoCanonizeRequests;}public function&SetAutoCanonizeRequests($autoCanonizeRequests=TRUE){$this->autoCanonizeRequests=$autoCanonizeRequests;return$this;}public function&SetPreRouteMatchingHandler(callable$preRouteMatchingHandler){$this->preRouteMatchingHandler=$preRouteMatchingHandler;if($preRouteMatchingHandler===NULL)$this->anyRoutesConfigured=count($this->routes)>0;return$this;}public function GetPreRouteMatchingHandler(){return$this->preRouteMatchingHandler;}public function&SetPreRouteUrlBuildingHandler(callable$preRouteUrlBuildingHandler){$this->preRouteUrlBuildingHandler=$preRouteUrlBuildingHandler;return$this;}public function GetPreRouteUrlBuildingHandler(){return$this->preRouteUrlBuildingHandler;}}}
namespace MvcCore\Router{trait RouteMethods{public function&SetRoutes($routes=[],$groupName=NULL,$autoInitialize=TRUE){if($autoInitialize){$this->routes=[];$this->AddRoutes($routes,$groupName);}else{$routesAreEmpty=count($routes)===0;$noGroupNameDefined=$groupName===NULL;$newRoutes=[];$this->urlRoutes=[];foreach($routes as$route){$routeName=$route->GetName();$newRoutes[$routeName]=$route;$this->urlRoutes[$routeName]=$route;$controllerAction=$route->GetControllerAction();if($controllerAction!==':')$this->urlRoutes[$controllerAction]=$route;if($noGroupNameDefined){$routeGroupName=$route->GetGroupName();if($routeGroupName===NULL)$routeGroupName='';if(!array_key_exists($routeGroupName,$this->routesGroups))$this->routesGroups[$routeGroupName]=[];$this->routesGroups[$routeGroupName][]=$route;}}$this->routes=$newRoutes;if($noGroupNameDefined){if($routesAreEmpty){$this->routesGroups=[];$this->noUrlRoutes=[];}$this->routesGroups['']=$newRoutes;}else{$this->routesGroups[$groupName]=$newRoutes;}$this->anyRoutesConfigured=(!$routesAreEmpty)||$this->preRouteMatchingHandler!==NULL;}return$this;}public function&AddRoutes(array$routes=[],$groupName=NULL,$prepend=FALSE,$throwExceptionForDuplication=TRUE){if($prepend)$routes=array_reverse($routes);$routeClass=self::$routeClass;foreach($routes as$routeName=>&$route){$numericKey=is_numeric($routeName);$ctrlActionName=!$numericKey&&mb_strpos($routeName,':')!==FALSE;if($route instanceof\MvcCore\IRoute){if($numericKey){if(!$route->GetName()){$routeAutoName=$route->GetControllerAction();if($routeAutoName===':')$routeAutoName='Route_'.$routeName;$route->SetName($routeAutoName);}}else{if($ctrlActionName)$route->SetControllerAction($routeName);if($route->GetName()===NULL)$route->SetName($routeName);}$this->AddRoute($route,$groupName,$prepend,$throwExceptionForDuplication);}else if(is_array($route)){if(!$numericKey)$route[$ctrlActionName?'controllerAction':'name']=$routeName;$this->AddRoute($this->getRouteInstance($route),$groupName,$prepend,$throwExceptionForDuplication);}else if(is_string($route)){$routeCfgData=['pattern'=>$route];$routeCfgData[$ctrlActionName?'controllerAction':'name']=$routeName;$this->AddRoute($routeClass::CreateInstance($routeCfgData),$groupName,$prepend,$throwExceptionForDuplication);}else{throw new\InvalidArgumentException("[".__CLASS__."] Route is not possible to assign (key: \"$routeName\", value: ".serialize($route).").");}}$this->anyRoutesConfigured=count($routes)>0||$this->preRouteMatchingHandler!==NULL;return$this;}public function&AddRoute($routeCfgOrRoute,$groupName=NULL,$prepend=FALSE,$throwExceptionForDuplication=TRUE){$instance=&$this->getRouteInstance($routeCfgOrRoute);$routeName=$instance->GetName();$controllerAction=$instance->GetControllerAction();if($throwExceptionForDuplication){$errorMsgs=[];if(isset($this->routes[$routeName]))$errorMsgs[]='Route with name `'.$routeName.'` has already been defined between router routes.';if(isset($this->urlRoutes[$controllerAction]))$errorMsgs[]='Route with `Controller:Action` combination: `'.$controllerAction.'` has already been defined between router routes.';if($errorMsgs){throw new\InvalidArgumentException('['.__CLASS__.'] '.implode(' ',$errorMsgs));}}$this->urlRoutes[$routeName]=$instance;if($controllerAction!==':')$this->urlRoutes[$controllerAction]=$instance;$this->addRouteToGroup($instance,$routeName,$groupName,$prepend);if($prepend){$newItem=[$routeName=>$instance];$this->routes=$newItem+$this->routes;}else{$this->routes[$routeName]=$instance;}$this->anyRoutesConfigured=TRUE;return$this;}protected function addRouteToGroup(\MvcCore\IRoute&$route,$routeName,$groupName,$prepend){if($groupName===NULL){$routesGroupsKey='';}else{$routesGroupsKey=$groupName;$route->SetGroupName($groupName);}if(array_key_exists($routesGroupsKey,$this->routesGroups)){$groupRoutes=&$this->routesGroups[$routesGroupsKey];}else{$groupRoutes=[];$this->routesGroups[$routesGroupsKey]=&$groupRoutes;}if($prepend){$newItem=[$routeName=>$route];$groupRoutes=$newItem+$groupRoutes;}else{$groupRoutes[$routeName]=$route;}}public function HasRoute($routeOrRouteName){if(is_string($routeOrRouteName)){return isset($this->routes[$routeOrRouteName]);}else{return(isset($this->routes[$routeOrRouteName->GetName()])||isset($this->routes[$routeOrRouteName->GetControllerAction()]));}}public function RemoveRoute($routeName){$result=NULL;if(isset($this->routes[$routeName])){$result=$this->routes[$routeName];unset($this->routes[$routeName]);$this->removeRouteFromGroup($result,$routeName);$controllerAction=$result->GetControllerAction();if(isset($this->urlRoutes[$routeName]))unset($this->urlRoutes[$routeName]);if(isset($this->urlRoutes[$controllerAction]))unset($this->urlRoutes[$controllerAction]);if($this->currentRoute->GetName()===$result->GetName())$this->currentRoute=NULL;}if(!$this->routes&&$this->preRouteMatchingHandler===NULL)$this->anyRoutesConfigured=FALSE;return$result;}protected function removeRouteFromGroup(\MvcCore\IRoute&$route,$routeName){$routeGroup=$route->GetGroupName();$groupRoutesKey=$routeGroup?:'';if(isset($this->routesGroups[$groupRoutesKey]))unset($this->routesGroups[$groupRoutesKey][$routeName]);}public function&GetRoutes($groupName=NULL){if($groupName!==NULL)return$this->routesGroups[$groupName];return$this->routes;}public function&GetRoute($routeName){if(isset($this->routes[$routeName]))return$this->routes[$routeName];return NULL;}public function&SetCurrentRoute(\MvcCore\IRoute$currentRoute){$this->currentRoute=$currentRoute;return$this;}public function&GetCurrentRoute(){return$this->currentRoute;}protected function&getRouteInstance(&$routeCfgOrRoute){if($routeCfgOrRoute instanceof\MvcCore\IRoute)return$routeCfgOrRoute->SetRouter($this);$routeClass=self::$routeClass;return$routeClass::CreateInstance($routeCfgOrRoute)->SetRouter($this);}}}
namespace MvcCore\Router{trait UrlBuilding{public function Url($controllerActionOrRouteName='Index:Index',array$params=[]){$result='';$ctrlActionOrRouteNameKey=$this->urlGetCompletedCtrlActionKey($controllerActionOrRouteName);if($this->anyRoutesConfigured&&!($this->routeByQueryString&&$ctrlActionOrRouteNameKey===static::DEFAULT_ROUTE_NAME)){if(isset($this->urlRoutes[$ctrlActionOrRouteNameKey])&&$this->urlRoutes[$ctrlActionOrRouteNameKey]->GetName()!==static::DEFAULT_ROUTE_NAME){$result=$this->UrlByRoute($this->urlRoutes[$ctrlActionOrRouteNameKey],$params,$controllerActionOrRouteName);}else{$urlRouteFound=FALSE;if(!isset($this->noUrlRoutes)){if($this->preRouteUrlBuildingHandler!==NULL)call_user_func($this->preRouteUrlBuildingHandler,$this,$ctrlActionOrRouteNameKey,$params);if(isset($this->urlRoutes[$ctrlActionOrRouteNameKey])&&$this->urlRoutes[$ctrlActionOrRouteNameKey]->GetName()!==static::DEFAULT_ROUTE_NAME){$urlRouteFound=TRUE;}else{$this->noUrlRoutes[$ctrlActionOrRouteNameKey]=TRUE;}}if($urlRouteFound){$result=$this->UrlByRoute($this->urlRoutes[$ctrlActionOrRouteNameKey],$params,$controllerActionOrRouteName);}else{$result=$this->UrlByQueryString($ctrlActionOrRouteNameKey,$params,$controllerActionOrRouteName);}}}else{$result=$this->UrlByQueryString($ctrlActionOrRouteNameKey,$params,$controllerActionOrRouteName);}return$result;}protected function urlGetCompletedCtrlActionKey($controllerAction){$result=$controllerAction;if(strpos($controllerAction,':')!==FALSE){list($ctrlPc,$actionPc)=explode(':',$controllerAction);if(!$ctrlPc){$toolClass=self::$toolClass;$ctrlPc=str_replace('/','\\',$toolClass::GetPascalCaseFromDashed($this->request->GetControllerName()));}if(!$actionPc){$toolClass=self::$toolClass;$actionPc=$toolClass::GetPascalCaseFromDashed($this->request->GetActionName());}$result="$ctrlPc:$actionPc";}else if($controllerAction=='self'){$result=$this->selfRouteName;}return$result;}}}
namespace MvcCore\Ext\Routers\Extendeds{trait Url{protected abstract function urlByRouteSections(\MvcCore\IRoute&$route,array&$params=[],$urlParamRouteName=NULL);protected function urlIsHomePath($pathWithQueryString){$questionMarkPos=mb_strpos($pathWithQueryString,'?');$pathWithoutQueryString=$questionMarkPos!==FALSE?mb_substr($pathWithQueryString,0,$questionMarkPos):$pathWithQueryString;return trim($pathWithoutQueryString,'/')===''||$pathWithoutQueryString==$this->request->GetScriptName();}protected function urlByRoutePrefixSystemParams($urlBaseSection,$urlPathWithQuerySection,array$systemParams=[],$urlPathWithQueryIsHome=NULL){$urlPrefixesSection=trim(implode('/',array_values($systemParams)),'/');$urlPrefixesSectionHasValue=$urlPrefixesSection!=='';if($urlPrefixesSectionHasValue){$urlPrefixesSection='/'.$urlPrefixesSection;if($this->trailingSlashBehaviour===\MvcCore\IRouter::TRAILING_SLASH_REMOVE){if($urlPathWithQueryIsHome===NULL)$urlPathWithQueryIsHome=$this->urlIsHomePath($urlPathWithQuerySection);if($urlPathWithQueryIsHome)$urlPathWithQuerySection=ltrim($urlPathWithQuerySection,'/');}}return$urlBaseSection.$urlPrefixesSection.$urlPathWithQuerySection;}}}
namespace MvcCore\Ext\Auths\Basic{trait Handling{public static function&GetInstance($configuration=[]){if(self::$instance===NULL)self::$instance=new static($configuration);return self::$instance;}public function __construct($config=[]){self::$instance=&$this;if($config)$this->SetConfiguration($config);$this->application=&\MvcCore\Application::GetInstance();static::$toolClass=$this->application->GetToolClass();$this->application->AddPreRouteHandler(function(){$this->preRouteHandler();},$this->preHandlersPriority)->AddPreDispatchHandler(function(){$this->preDispatchHandler();},$this->preHandlersPriority);}protected function preRouteHandler(){$this->GetUser();$this->preRouteHandlerSetUpUrlAdresses();if($this->addRoutesForAnyRequestMethod||$this->application->GetRequest()->GetMethod()==\MvcCore\IRequest::METHOD_POST){$this->preRouteHandlerSetUpRouter();}}protected function preDispatchHandler(){if($this->user!==NULL)$this->application->GetController()->SetUser($this->user);}protected function preRouteHandlerSetUpUrlAdresses(){$currentFullUrl=$this->application->GetRequest()->GetFullUrl();if($this->signedInUrl===NULL)$this->signedInUrl=$currentFullUrl;if($this->signedOutUrl===NULL)$this->signedOutUrl=$currentFullUrl;if($this->signErrorUrl===NULL)$this->signErrorUrl=$currentFullUrl;}protected function preRouteHandlerSetUpRouter(){$routerClass=$this->application->GetRouterClass();$router=&$routerClass::GetInstance();if($this->IsAuthenticated()){$router->AddRoute($this->getInitializedRoute('SignOut'),NULL,TRUE);}else{$router->AddRoute($this->getInitializedRoute('SignIn'),NULL,TRUE);}}protected function getInitializedRoute($actionName){$routeName=lcfirst($actionName).'Route';$rawRoute=&$this->$routeName;if($rawRoute instanceof\MvcCore\IRoute){return$rawRoute;}else{$routeClass=$this->application->GetRouteClass();$routeInitData=['controller'=>$this->controllerClass,'action'=>$actionName];$route=$routeClass::CreateInstance(gettype($rawRoute)=='array'?array_merge($routeInitData,$rawRoute):array_merge(['pattern'=>$rawRoute],$routeInitData));$this->$routeName=&$route;return$route;}}}}
namespace MvcCore\Router{trait RewriteRouting{protected function rewriteRouting($requestCtrlName,$requestActionName){$request=&$this->request;$requestedPathFirstWord=$this->rewriteRoutingGetReqPathFirstWord();$this->rewriteRoutingProcessPreHandler($requestedPathFirstWord);$routes=&$this->rewriteRoutingGetRoutesToMatch($requestedPathFirstWord);$requestMethod=$request->GetMethod();foreach($routes as&$route){$routeMethod=$route->GetMethod();if($routeMethod!==NULL&&$routeMethod!==$requestMethod)continue;$allMatchedParams=$route->Matches($request);if($allMatchedParams!==NULL){if($this->rewriteRoutingCloneRouteToCurrent($route,$allMatchedParams))continue;$this->rewriteRoutingSetRequestedAndDefaultParams($allMatchedParams,$requestCtrlName,$requestActionName);if($this->rewriteRoutingSetRequestParams($allMatchedParams))continue;$this->rewriteRoutingSetUpCurrentRouteByRequest();break;}}}protected function rewriteRoutingCloneRouteToCurrent(\MvcCore\IRoute&$route,array&$allMatchedParams){$this->currentRoute=clone$route;$this->currentRoute->SetMatchedParams($allMatchedParams);return FALSE;}protected function rewriteRoutingGetReqPathFirstWord(){$requestedPath=ltrim($this->request->GetPath(),'/');$nextSlashPos=mb_strpos($requestedPath,'/');if($nextSlashPos===FALSE)$nextSlashPos=mb_strlen($requestedPath);return mb_substr($requestedPath,0,$nextSlashPos);}protected function rewriteRoutingProcessPreHandler($firstPathWord){if($this->preRouteMatchingHandler===NULL)return;call_user_func($this->preRouteMatchingHandler,$this,$this->request,$firstPathWord);}protected function&rewriteRoutingGetRoutesToMatch($firstPathWord){if(array_key_exists($firstPathWord,$this->routesGroups)){$routes=&$this->routesGroups[$firstPathWord];}else{$routes=&$this->routesGroups[''];}reset($routes);return$routes;}protected function rewriteRoutingSetRequestedAndDefaultParams(array&$allMatchedParams,$requestCtrlName=NULL,$requestActionName=NULL){$request=&$this->request;$rawQueryParams=array_merge([],$request->GetParams(FALSE));list($ctrlDfltNamePc,$actionDfltNamePc)=$this->application->GetDefaultControllerAndActionNames();$toolClass=self::$toolClass;if($requestCtrlName!==NULL){$request->SetControllerName($requestCtrlName);$allMatchedParams['controller']=$requestCtrlName;$rawQueryParams['controller']=$requestCtrlName;}else if(isset($allMatchedParams['controller'])){$request->SetControllerName($allMatchedParams['controller']);}else{$defaultCtrlNameDashed=$toolClass::GetDashedFromPascalCase($ctrlDfltNamePc);$request->SetControllerName($defaultCtrlNameDashed);$allMatchedParams['controller']=$defaultCtrlNameDashed;}if($requestActionName!==NULL){$request->SetActionName($requestActionName);$allMatchedParams['action']=$requestActionName;$rawQueryParams['action']=$requestActionName;}else if(isset($allMatchedParams['action'])){$request->SetActionName($allMatchedParams['action']);}else{$defaultActionNameDashed=$toolClass::GetDashedFromPascalCase($actionDfltNamePc);$request->SetActionName($defaultActionNameDashed);$allMatchedParams['action']=$defaultActionNameDashed;}$this->defaultParams=array_merge($this->currentRoute->GetDefaults(),$this->defaultParams,$allMatchedParams,$rawQueryParams);$routeReverseParams=$this->currentRoute->GetReverseParams()?:[];$pathOnlyMatchedParams=array_merge([],$allMatchedParams);$controllerInReverse=in_array('controller',$routeReverseParams,TRUE);$actionInReverse=in_array('action',$routeReverseParams,TRUE);if(!$controllerInReverse)unset($pathOnlyMatchedParams['controller']);if(!$actionInReverse)unset($pathOnlyMatchedParams['action']);$this->requestedParams=array_merge([],$pathOnlyMatchedParams,$rawQueryParams);}protected function rewriteRoutingSetRequestParams(array&$allMatchedParams){$request=&$this->request;$defaultParamsBefore=array_merge([],$this->defaultParams);$requestParams=array_merge([],$this->defaultParams);list($success,$requestParamsFiltered)=$this->currentRoute->Filter($requestParams,$this->defaultParams,\MvcCore\IRoute::CONFIG_FILTER_IN);if($success===FALSE){$this->defaultParams=$defaultParamsBefore;$this->requestedParams=[];$allMatchedParams=NULL;$this->currentRoute=NULL;return TRUE;}$requestParamsFiltered=$requestParamsFiltered?:$requestParams;$request->SetParams($requestParamsFiltered);if(isset($requestParamsFiltered['controller']))$request->SetControllerName($requestParamsFiltered['controller']);if(isset($requestParamsFiltered['action']))$request->SetActionName($requestParamsFiltered['action']);return FALSE;}protected function rewriteRoutingSetUpCurrentRouteByRequest(){$request=&$this->request;$toolClass=self::$toolClass;$this->currentRoute->SetController(str_replace(['/','\\\\'],['\\','//'],$toolClass::GetPascalCaseFromDashed($request->GetControllerName())))->SetAction($toolClass::GetPascalCaseFromDashed($request->GetActionName()));}}}
namespace MvcCore\Ext\Routers\Extendeds{trait RedirectHelpers{protected function removeDefaultCtrlActionFromGlobalGet(){if($this->requestGlobalGet){$toolClass=$this->application->GetToolClass();list($dfltCtrlPc,$dftlActionPc)=$this->application->GetDefaultControllerAndActionNames();$dfltCtrlDc=$toolClass::GetDashedFromPascalCase($dfltCtrlPc);$dftlActionDc=$toolClass::GetDashedFromPascalCase($dftlActionPc);if(isset($this->requestGlobalGet['controller'])&&isset($this->requestGlobalGet['action']))if($this->requestGlobalGet['controller']==$dfltCtrlDc&&$this->requestGlobalGet['action']==$dftlActionDc)unset($this->requestGlobalGet['controller'],$this->requestGlobalGet['action']);}}protected function redirectAddAllRemainingInGlobalGet(&$targetUrl){if($this->requestGlobalGet){$amp=$this->getQueryStringParamsSepatator();$questionMarkDelimiter=mb_strpos($targetUrl,'?')===FALSE?'?':$amp;$targetUrl.=$questionMarkDelimiter.str_replace('%2F','/',http_build_query($this->requestGlobalGet,'',$amp,PHP_QUERY_RFC3986));}}}}
namespace MvcCore\Router{trait Routing{public function Route(){$this->internalRequest=$this->request->IsInternalRequest();if(!$this->internalRequest)if(!$this->redirectToProperTrailingSlashIfNecessary())return FALSE;list($requestCtrlName,$requestActionName)=$this->routeDetectStrategy();if($this->routeByQueryString){$this->queryStringRouting($requestCtrlName,$requestActionName);}else{$this->rewriteRouting($requestCtrlName,$requestActionName);}if(!$this->routeProcessRouteRedirectionIfAny())return FALSE;return$this->routeSetUpDefaultForHomeIfNoMatch()->routeSetUpSelfRouteNameIfAny()->canonicalRedirectIfAny();}public function RedefineRoutedTarget($controllerNamePc=NULL,$actionNamePc=NULL,$changeSelfRoute=FALSE){$toolClass=self::$toolClass;$ctrlNameDc=NULL;$actionNameDc=NULL;$currentRoute=&$this->currentRoute;$currentRouteMatched=$currentRoute instanceof\MvcCore\IRoute;$matchedParams=$currentRouteMatched?$currentRoute->GetMatchedParams():[];$controllerNamePcNotNull=$controllerNamePc!==NULL;$actionNamePcNotNull=$actionNamePc!==NULL;if($controllerNamePcNotNull){$ctrlNameDc=str_replace(['\\','_'],'/',$toolClass::GetDashedFromPascalCase($controllerNamePc));$matchedParams['controller']=$ctrlNameDc;$this->request->SetControllerName($ctrlNameDc)->SetParam('controller',$ctrlNameDc);if(isset($this->requestedParams['controller']))$this->requestedParams['controller']=$ctrlNameDc;$currentRoute->SetController($controllerNamePc);}if($actionNamePcNotNull){$actionNameDc=$toolClass::GetDashedFromPascalCase($actionNamePc);$matchedParams['action']=$actionNameDc;$this->request->SetActionName($actionNameDc)->SetParam('action',$ctrlNameDc);if(isset($this->requestedParams['action']))$this->requestedParams['action']=$actionNameDc;$currentRoute->SetAction($actionNamePc);}if($currentRouteMatched){$currentRoute->SetMatchedParams($matchedParams);$currentRouteName=$currentRoute->GetName();if(strpos($currentRouteName,':')!==FALSE&&($controllerNamePcNotNull||$actionNamePcNotNull)){list($ctrlPc,$actionPc)=explode(':',$currentRouteName);$currentRoute->SetName(($controllerNamePcNotNull?$controllerNamePc:$ctrlPc).':'.($actionNamePcNotNull?$actionNamePc:$actionPc));}}if($currentRouteMatched&&$changeSelfRoute){$this->selfRouteName=$this->anyRoutesConfigured?$currentRoute->GetName():$currentRoute->GetControllerAction();if($controllerNamePcNotNull)if(isset($this->requestedParams['controller']))$this->requestedParams['controller']=$ctrlNameDc;if($actionNamePcNotNull)if(isset($this->requestedParams['action']))$this->requestedParams['action']=$actionNameDc;}return TRUE;}public function&SetOrCreateDefaultRouteAsCurrent($routeName,$controllerPc,$actionPc,$fallbackCall=FALSE){$controllerPc=strtr($controllerPc,'/','\\');$ctrlActionRouteName=$controllerPc.':'.$actionPc;$request=&$this->request;if(isset($this->routes[$ctrlActionRouteName])){$defaultRoute=$this->routes[$ctrlActionRouteName];}else if(isset($this->routes[$routeName])){$defaultRoute=$this->routes[$routeName];}else{$routeClass=self::$routeClass;$pathParamName=static::URL_PARAM_PATH;$defaultRoute=$routeClass::CreateInstance()->SetMatch("#/(?<$pathParamName>.*)#")->SetReverse("/<$pathParamName>")->SetName($routeName)->SetController($controllerPc)->SetAction($actionPc)->SetDefaults([$pathParamName=>NULL,static::URL_PARAM_CONTROLLER=>NULL,static::URL_PARAM_ACTION=>NULL,]);$anyRoutesConfigured=$this->anyRoutesConfigured;$this->AddRoute($defaultRoute,NULL,TRUE,FALSE);$this->anyRoutesConfigured=$anyRoutesConfigured;if(!$request->IsInternalRequest())$request->SetParam(static::URL_PARAM_PATH,($request->HasParam(static::URL_PARAM_PATH)?$request->GetParam(static::URL_PARAM_PATH,'.*'):$request->GetPath()));}$toolClass=self::$toolClass;$request->SetControllerName(str_replace('\\','/',$toolClass::GetDashedFromPascalCase($defaultRoute->GetController())))->SetActionName($toolClass::GetDashedFromPascalCase($defaultRoute->GetAction()));$this->currentRoute=$defaultRoute;if(!$fallbackCall)$this->selfRouteName=$routeName;return$defaultRoute;}protected function routeDetectStrategy(){$request=&$this->request;$requestCtrlName=$request->GetControllerName();$requestActionName=$request->GetActionName();if($this->routeByQueryString===NULL){list($reqScriptName,$reqPath)=[$request->GetScriptName(),$request->GetPath(TRUE)];$requestCtrlNameNotNull=$requestCtrlName!==NULL;$requestActionNameNotNull=$requestActionName!==NULL;$requestCtrlAndAlsoAction=$requestCtrlNameNotNull&&$requestActionNameNotNull;$requestCtrlOrAction=$requestCtrlNameNotNull||$requestActionNameNotNull;$this->routeByQueryString=($requestCtrlAndAlsoAction||($requestCtrlOrAction&&($reqScriptName===$reqPath||trim($reqPath,'/')==='')));}return[$requestCtrlName,$requestActionName];}protected function queryStringRouting($requestCtrlName,$requestActionName){$toolClass=self::$toolClass;list($ctrlDfltName,$actionDfltName)=$this->application->GetDefaultControllerAndActionNames();$this->SetOrCreateDefaultRouteAsCurrent(\MvcCore\IRouter::DEFAULT_ROUTE_NAME,$toolClass::GetPascalCaseFromDashed($requestCtrlName?:$ctrlDfltName),$toolClass::GetPascalCaseFromDashed($requestActionName?:$actionDfltName));$this->defaultParams=array_merge([],$this->defaultParams,$this->request->GetParams(FALSE));$this->requestedParams=array_merge([],$this->defaultParams);}protected function routeProcessRouteRedirectionIfAny(){if($this->currentRoute instanceof\MvcCore\IRoute){$redirectRouteName=$this->currentRoute->GetRedirect();if($redirectRouteName!==NULL){$redirectUrl=$this->Url($redirectRouteName,$this->requestedParams);$this->redirect($redirectUrl,\MvcCore\IResponse::MOVED_PERMANENTLY);return FALSE;}}return TRUE;}protected function routeSetUpDefaultForHomeIfNoMatch(){if($this->currentRoute===NULL){$request=&$this->request;$requestIsHome=(trim($request->GetPath(),'/')==''||$request->GetPath()==$request->GetScriptName());if($requestIsHome||$this->routeToDefaultIfNotMatch){list($dfltCtrl,$dftlAction)=$this->application->GetDefaultControllerAndActionNames();$this->SetOrCreateDefaultRouteAsCurrent(static::DEFAULT_ROUTE_NAME,$dfltCtrl,$dftlAction);$requestParams=array_merge([],$this->request->GetParams(FALSE));unset($requestParams['controller'],$requestParams['action']);$this->requestedParams=&$requestParams;}}return$this;}protected function routeSetUpSelfRouteNameIfAny(){if($this->currentRoute instanceof\MvcCore\IRoute)$this->selfRouteName=$this->anyRoutesConfigured?$this->currentRoute->GetName():$this->currentRoute->GetControllerAction();return$this;}}}
namespace MvcCore\Ext\Auths\Basics{interface IAuth{const VERSION='5.0.0-alpha';public static function&GetInstance($configuration=[]);public function GetExpirationSeconds();public function GetUserClass();public function GetRoleClass();public function GetControllerClass();public function GetSignInFormClass();public function GetSignOutFormClass();public function GetSignedInUrl();public function GetSignedOutUrl();public function GetSignErrorUrl();public function&GetSignInRoute();public function&GetSignOutRoute();public function GetPasswordHashSalt();public function GetInvalidCredentialsTimeout();public function GetTranslator();public function&GetUser();public function IsAuthenticated();public function&GetForm();public function GetSignInForm();public function GetSignOutForm();public function&GetConfiguration();public function&SetExpirationSeconds($expirationSeconds=600);public function&SetUserClass($userClass='');public function&SetRoleClass($roleClass='');public function&SetControllerClass($controllerClass='');public function&SetSignInFormClass($signInFormClass='');public function&SetSignOutFormClass($signOutFormClass='');public function&SetSignedInUrl($signedInUrl=NULL);public function&SetSignedOutUrl($signedOutUrl=NULL);public function&SetSignErrorUrl($signErrorUrl=NULL);public function&SetSignInRoute($signInRoute=NULL);public function&SetSignOutRoute($signOutRoute=NULL);public function&SetPasswordHashSalt($passwordHashSalt='');public function&SetInvalidCredentialsTimeout($seconds=3);public function&SetTranslator(callable$translator=NULL);public function&SetUser(\MvcCore\Ext\Auths\Basics\IUser&$user=NULL);public function&SetForm(\MvcCore\Ext\Auths\Basics\IForm&$form);public function&SetConfiguration($configuration=[],$throwExceptionIfPropertyIsMissing=TRUE);public function&SetTableStructureForDbUsers($tableName=NULL,$columnNames=NULL);}}
namespace MvcCore\Router{trait Props{protected static$instance=NULL;protected static$routeClass=NULL;protected static$toolClass=NULL;protected$application=NULL;protected$request=NULL;protected$routes=[];protected$routesGroups=[];protected$urlRoutes=[];protected$routeByQueryString=NULL;protected$currentRoute=NULL;protected$selfRouteName=NULL;protected$routeToDefaultIfNotMatch=FALSE;protected$defaultParams=[];protected$requestedParams=[];protected$trailingSlashBehaviour=-1;protected$autoCanonizeRequests=TRUE;protected$queryParamsSepatator=NULL;protected$anyRoutesConfigured=NULL;protected$preRouteMatchingHandler=NULL;protected$preRouteUrlBuildingHandler=NULL;protected$noUrlRoutes=[];protected$internalRequest=FALSE;}}
namespace MvcCore\Router{trait Redirecting{protected function redirectToProperTrailingSlashIfNecessary(){if(!$this->trailingSlashBehaviour)return TRUE;$path=$this->request->GetPath();if($path=='/')return TRUE;if($path==''){$this->redirect($this->request->GetBaseUrl().'/'.$this->request->GetQuery(TRUE).$this->request->GetFragment(TRUE));}$lastPathChar=mb_substr($path,mb_strlen($path)-1);if($lastPathChar=='/'&&$this->trailingSlashBehaviour==\MvcCore\IRouter::TRAILING_SLASH_REMOVE){$this->redirect($this->request->GetBaseUrl().rtrim($path,'/').$this->request->GetQuery(TRUE).$this->request->GetFragment(TRUE));return FALSE;}else if($lastPathChar!='/'&&$this->trailingSlashBehaviour==\MvcCore\IRouter::TRAILING_SLASH_ALWAYS){$this->redirect($this->request->GetBaseUrl().$path.'/'.$this->request->GetQuery(TRUE).$this->request->GetFragment(TRUE));return FALSE;}return TRUE;}protected function redirect($url,$code=301){$app=\MvcCore\Application::GetInstance();$app->GetResponse()->SetCode($code)->SetHeader('Location',$url);$app->Terminate();}}}
namespace MvcCore\Ext\Routers\Extendeds{trait Preparing{protected function prepare(){$request=&$this->request;$request->SetOriginalPath($request->GetPath());$this->isGet=$request->GetMethod()==\MvcCore\IRequest::METHOD_GET;$this->requestGlobalGet=array_merge([],$request->GetGlobalCollection('get'));$this->setUpSession();if(isset($this->requestGlobalGet[static::$adminRequestQueryParamName])){$authClass=static::$baseAuthClass;if(class_exists($authClass)){$user=$authClass::GetInstance()->GetUser();if($user!==NULL)$this->adminRequest=TRUE;}}}protected function setUpSession(){if($this->session===NULL){$sessionClass=$this->application->GetSessionClass();$this->session=$sessionClass::GetNamespace(__CLASS__);$this->session->SetExpirationSeconds($this->sessionExpirationSeconds);}}}}
namespace MvcCore\Router{trait Instancing{public static function&GetInstance(array$routes=[],$autoInitialize=TRUE){if(!self::$instance){$app=&\MvcCore\Application::GetInstance();self::$routeClass=$app->GetRouteClass();self::$toolClass=$app->GetToolClass();$routerClass=$app->GetRouterClass();$instance=new$routerClass($routes,$autoInitialize);$instance->application=&$app;self::$instance=&$instance;}return self::$instance;}public function __construct(array$routes=[],$autoInitialize=TRUE){if($routes)$this->SetRoutes($routes,NULL,$autoInitialize);}}}
namespace MvcCore\Ext\Routers\Extendeds{trait PropsGettersSetters{protected$stricModeBySession=FALSE;protected$sessionExpirationSeconds=0;protected static$baseAuthClass='\MvcCore\Ext\Auth';protected static$adminRequestQueryParamName='admin';protected$adminRequest=FALSE;protected$routeGetRequestsOnly=TRUE;protected$isGet=NULL;protected$requestGlobalGet=[];protected$session=NULL;protected$redirectStatusCode=0;public function GetRouteGetRequestsOnly(){return$this->routeGetRequestsOnly;}public function&SetRouteGetRequestsOnly($routeGetRequestsOnly=TRUE){$this->routeGetRequestsOnly=$routeGetRequestsOnly;return$this;}public function GetStricModeBySession(){return$this->stricModeBySession;}public function&SetStricModeBySession($stricModeBySession=TRUE){$this->stricModeBySession=$stricModeBySession;return$this;}public function GetSessionExpirationSeconds(){return$this->sessionExpirationSeconds;}public function&SetSessionExpirationSeconds($sessionExpirationSeconds=0){$this->sessionExpirationSeconds=$sessionExpirationSeconds;return$this;}}}
namespace MvcCore\Ext\Routers{interface IExtended{public function GetRouteGetRequestsOnly();public function&SetRouteGetRequestsOnly($routeGetRequestsOnly=TRUE);public function GetStricModeBySession();public function&SetStricModeBySession($stricModeBySession=TRUE);public function GetSessionExpirationSeconds();public function&SetSessionExpirationSeconds($sessionExpirationSeconds=0);}}
namespace MvcCore\Ext\Forms\Field\Props{trait Multiple{protected$multiple=NULL;public function GetMultiple(){return$this->multiple;}public function&SetMultiple($multiple=TRUE){$this->multiple=$multiple;return$this;}}}
namespace MvcCore{interface IRequest{const PROTOCOL_HTTP='http:';const PROTOCOL_HTTPS='https:';const METHOD_GET='GET';const METHOD_POST='POST';const METHOD_PUT='PUT';const METHOD_DELETE='DELETE';const METHOD_HEAD='HEAD';const METHOD_OPTIONS='OPTIONS';const METHOD_PATCH='PATCH';const PARAM_FILTER_ALPHABETS='a-zA-Z';const PARAM_FILTER_ALPHABETS_LOWER='a-z';const PARAM_FILTER_ALPHABETS_UPPER='A-Z';const PARAM_FILTER_ALPHABETS_DIGITS='a-zA-Z0-9';const PARAM_FILTER_ALPHABETS_PUNCT='a-zA-Z\-\.\, ;`"\'\:\?\!';const PARAM_FILTER_ALPHABETS_NUMERICS_PUNCT='a-zA-Z0-9\+\-\.\, ;`"\'\:\?\!';const PARAM_FILTER_ALPHABETS_NUMERICS_PUNCT_SPECIAL='a-zA-Z0-9\+\-\.\, ;`"\'\:\?\!%_/@~\#\&\$\[\]\(\)\{\}\|\=\*\^';const PARAM_FILTER_PUNCT='\-\.\, ;`"\'\:\?\!';const PARAM_FILTER_SPECIAL='%_/@~\#\&\$\[\]\(\)\{\}\|\=\*\^';const PARAM_FILTER_DIGITS='0-9';const PARAM_FILTER_NUMERICS='-\+0-9\.\,';public static function AddTwoSegmentTlds();public static function CreateInstance(array&$server=[],array&$get=[],array&$post=[],array&$cookie=[],array&$files=[]);public function&GetGlobalCollection($type);public function&SetHeaders(array&$headers=[]);public function&GetHeaders($pregReplaceAllowedChars=['#[\<\>\'"]#','']);public function&SetHeader($name='',$value='');public function GetHeader($name='',$pregReplaceAllowedChars="a-zA-Z0-9_;, /\-\.\@\=\+\?\!",$ifNullValue=NULL,$targetType=NULL);public function HasHeader($name='');public function&SetParams(array&$params=[]);public function&GetParams($pregReplaceAllowedChars=['#[\<\>\'"]#',''],$onlyKeys=[]);public function&SetParam($name='',$value='');public function&RemoveParam($name='');public function GetParam($name='',$pregReplaceAllowedChars="a-zA-Z0-9_;, /\-\@\:",$ifNullValue=NULL,$targetType=NULL);public function HasParam($name='');public function&SetFiles(array&$files=[]);public function&GetFiles();public function&SetFile($file='',$data=[]);public function GetFile($file='');public function HasFile($file='');public function&SetCookies(array&$cookies=[]);public function&GetCookies($pregReplaceAllowedChars=['#[\<\>\'"]#',''],$onlyKeys=[]);public function&SetCookie($name='',$value='');public function GetCookie($name='',$pregReplaceAllowedChars="a-zA-Z0-9_;, /\-\.\@\=\+\?\!",$ifNullValue=NULL,$targetType=NULL);public function HasCookie($name='');public function&InitAll();public function IsInternalRequest();public function&SetControllerName($controllerName);public function GetControllerName();public function&SetActionName($actionName);public function GetActionName();public function&SetLang($lang);public function GetLang();public function&SetLocale($locale);public function GetLocale();public function&SetMediaSiteVersion($mediaSiteVersion);public function GetMediaSiteVersion();public function __call($name,$arguments=[]);public function __get($name);public function __set($name,$value);public function GetScriptName();public function GetAppRoot();public function&SetMethod($rawMethod);public function GetMethod();public function&SetBasePath($rawBasePath);public function GetBasePath();public function&SetProtocol($rawProtocol);public function GetProtocol();public function IsSecure();public function GetReferer($rawInput=FALSE);public function GetMicrotime();public function&SetTopLevelDomain($topLevelDomain);public function GetTopLevelDomain();public function&SetSecondLevelDomain($secondLevelDomain);public function GetSecondLevelDomain();public function&SetThirdLevelDomain($thirdLevelDomain);public function GetThirdLevelDomain();public function&SetHostName($rawHostName);public function GetHostName();public function&SetHost($rawHost);public function GetHost();public function&SetPort($rawPort);public function GetPort();public function&SetPath($rawPathValue);public function GetPath($rawInput=FALSE);public function&SetQuery($rawQuery);public function GetQuery($withQuestionMark=FALSE,$rawInput=FALSE);public function GetRequestPath($rawInput=FALSE);public function GetDomainUrl();public function GetBaseUrl();public function GetRequestUrl($rawInput=FALSE);public function GetFullUrl($rawInput=FALSE);public function GetFragment($withHash=FALSE,$rawInput=FALSE);public function GetServerIp();public function GetClientIp();public function IsAjax();public function GetContentLength();public static function HtmlSpecialChars($str);}}
namespace MvcCore\Ext\Forms\Fields{interface IMultiple{public function GetMultiple();public function&SetMultiple($multiple=TRUE);}}
namespace MvcCore\Ext\Views\Helpers{interface IHelper{public static function&GetInstance();public function&SetView(\MvcCore\IView&$view);}}
namespace MvcCore\Ext\Routers\Extendeds{trait Redirect{protected abstract function redirectToVersionSections($systemParams);protected function redirectToVersion($systemParams){list($urlBaseSection,$urlPathWithQuerySection,$systemParams,$urlPathWithQueryIsHome)=$this->redirectToVersionSections($systemParams);$targetUrl=$this->urlByRoutePrefixSystemParams($urlBaseSection,$urlPathWithQuerySection,$systemParams,$urlPathWithQueryIsHome);$req=&$this->request;$fullOriginalUrl=$req::HtmlSpecialChars($req->GetBaseUrl().$req->GetOriginalPath().$req->GetQuery(TRUE,TRUE));if($fullOriginalUrl===$targetUrl)return TRUE;$this->redirect($targetUrl,$this->redirectStatusCode);return FALSE;}}}
namespace MvcCore\Route{trait InternalInits{public function&InitAll(){if($this->match===NULL&&$this->reverse===NULL){$this->initMatchAndReverse();}else if($this->match!==NULL&&($this->reverseParams===NULL||$this->lastPatternParam===NULL)){$this->initReverse();}return$this;}protected function initMatchAndReverse(){if($this->pattern===NULL)$this->throwExceptionIfNoPattern();$this->lastPatternParam=NULL;$match=addcslashes($this->pattern,"#(){}-?!=^$.+|:*\\");$reverse=$this->reverse!==NULL?$this->reverse:$this->pattern;list($this->reverseSections,$matchSections)=$this->initSectionsInfoForMatchAndReverse($reverse,$match);$this->reverse=&$reverse;$this->reverseParams=$this->initReverseParams($reverse,$this->reverseSections,$this->constraints,$match);$this->initFlagsByPatternOrReverse($reverse);$this->match=$this->initMatchComposeRegex($match,$matchSections,$this->reverseParams,$this->constraints);}protected function initSectionsInfoForMatchAndReverse(&$match,&$reverse){$matchInfo=[];$reverseInfo=[];$reverseIndex=0;$matchIndex=0;$reverseLength=mb_strlen($reverse);$matchLength=mb_strlen($match);$matchOpenPos=FALSE;$matchClosePos=FALSE;while($reverseIndex<$reverseLength){$reverseOpenPos=mb_strpos($reverse,'[',$reverseIndex);$reverseClosePos=FALSE;if($reverseOpenPos!==FALSE){$reverseClosePos=mb_strpos($reverse,']',$reverseOpenPos);$matchOpenPos=mb_strpos($match,'[',$matchIndex);$matchClosePos=mb_strpos($match,']',$matchOpenPos);}if($reverseClosePos===FALSE){$reverseInfo[]=(object)['fixed'=>TRUE,'start'=>$reverseIndex,'end'=>$reverseLength,'length'=>$reverseLength-$reverseIndex];$matchInfo[]=(object)['fixed'=>TRUE,'start'=>$matchIndex,'end'=>$matchLength,'length'=>$matchLength-$matchIndex];break;}else{if($reverseIndex<$reverseOpenPos){$reverseInfo[]=(object)['fixed'=>TRUE,'start'=>$reverseIndex,'end'=>$reverseOpenPos,'length'=>$reverseOpenPos-$reverseIndex];$matchInfo[]=(object)['fixed'=>TRUE,'start'=>$matchIndex,'end'=>$matchOpenPos,'length'=>$matchOpenPos-$matchIndex];}$reverseOpenPosPlusOne=$reverseOpenPos+1;$reverseLocalLength=$reverseClosePos-$reverseOpenPosPlusOne;$reverse=mb_substr($reverse,0,$reverseOpenPos).mb_substr($reverse,$reverseOpenPosPlusOne,$reverseLocalLength).mb_substr($reverse,$reverseClosePos+1);$reverseLength-=2;$reverseClosePos-=1;$reverseInfo[]=(object)['fixed'=>FALSE,'start'=>$reverseOpenPos,'end'=>$reverseClosePos,'length'=>$reverseLocalLength];$matchOpenPosPlusOne=$matchOpenPos+1;$matchLocalLength=$matchClosePos-$matchOpenPosPlusOne;$match=mb_substr($match,0,$matchOpenPos).mb_substr($match,$matchOpenPosPlusOne,$matchLocalLength).mb_substr($match,$matchClosePos+1);$matchLength-=2;$matchClosePos-=1;$matchInfo[]=(object)['fixed'=>FALSE,'start'=>$matchOpenPos,'end'=>$matchClosePos,'length'=>$matchLocalLength];}$reverseIndex=$reverseClosePos;$matchIndex=$matchClosePos;}return[$matchInfo,$reverseInfo];}protected function initReverse(){$reverse=NULL;if($this->reverse!==NULL){$reverse=$this->reverse;}else if($this->pattern!==NULL){$reverse=$this->pattern;}else{if($this->redirect!==NULL)return$this->initFlagsByPatternOrReverse($this->pattern!==NULL?$this->pattern:str_replace(['\\','(?',')?','/?'],'',$this->match));$this->throwExceptionIfNoPattern();}$this->lastPatternParam=NULL;$this->reverseSections=$this->initSectionsInfo($reverse);$this->reverse=$reverse;$match=NULL;$this->reverseParams=$this->initReverseParams($reverse,$this->reverseSections,$this->constraints,$match);$this->initFlagsByPatternOrReverse($reverse);}protected function&initSectionsInfo(&$pattern){$result=[];$index=0;$length=mb_strlen($pattern);while($index<$length){$openPos=mb_strpos($pattern,'[',$index);$closePos=FALSE;if($openPos!==FALSE)$closePos=mb_strpos($pattern,']',$openPos);if($closePos===FALSE){$result[]=(object)['fixed'=>TRUE,'start'=>$index,'end'=>$length,'length'=>$length-$index];break;}else{if($index<$openPos)$result[]=(object)['fixed'=>TRUE,'start'=>$index,'end'=>$openPos,'length'=>$openPos-$index];$openPosPlusOne=$openPos+1;$lengthLocal=$closePos-$openPosPlusOne;$pattern=mb_substr($pattern,0,$openPos).mb_substr($pattern,$openPosPlusOne,$lengthLocal).mb_substr($pattern,$closePos+1);$length-=2;$closePos-=1;$result[]=(object)['fixed'=>FALSE,'start'=>$openPos,'end'=>$closePos,'length'=>$lengthLocal];}$index=$closePos;}return$result;}protected function&initReverseParams(&$reverse,&$reverseSectionsInfo,&$constraints,&$match=NULL){$result=[];$completeMatch=$match!==NULL;$reverseIndex=0;$matchIndex=0;$sectionIndex=0;$section=$reverseSectionsInfo[$sectionIndex];$reverseLength=mb_strlen($reverse);$greedyCatched=FALSE;$matchOpenPos=-1;$matchClosePos=-1;$this->lastPatternParam='';while($reverseIndex<$reverseLength){$reverseOpenPos=mb_strpos($reverse,'<',$reverseIndex);$reverseClosePos=FALSE;if($reverseOpenPos!==FALSE){$reverseClosePos=mb_strpos($reverse,'>',$reverseOpenPos);if($completeMatch){$matchOpenPos=mb_strpos($match,'<',$matchIndex);$matchClosePos=mb_strpos($match,'>',$matchOpenPos)+1;}}if($reverseClosePos===FALSE)break;$reverseClosePos+=1;if($reverseClosePos>$section->end){while(TRUE){$nextSection=$reverseSectionsInfo[$sectionIndex+1];if($reverseClosePos>$nextSection->end){$sectionIndex+=1;}else{$sectionIndex+=1;$section=$reverseSectionsInfo[$sectionIndex];break;}}}$paramLength=$reverseClosePos-$reverseOpenPos;$paramName=mb_substr($reverse,$reverseOpenPos+1,$paramLength-2);list($greedyFlag,$sectionIsLast)=$this->initReverseParamsGetGreedyInfo($reverseSectionsInfo,$constraints,$paramName,$sectionIndex,$greedyCatched);if($greedyFlag&&$sectionIsLast){$lastSectionChar=mb_substr($reverse,$reverseClosePos,$reverseSectionsInfo[$sectionIndex]->end-$reverseClosePos);if($lastSectionChar=='/'){$lastSectionChar='';$reverseSectionsInfo[$sectionIndex]->end-=1;}if($lastSectionChar==='')$this->lastPatternParam=$paramName;}$result[$paramName]=(object)['name'=>$paramName,'greedy'=>$greedyFlag,'sectionIndex'=>$sectionIndex,'length'=>$paramLength,'reverseStart'=>$reverseOpenPos,'reverseEnd'=>$reverseClosePos,'matchStart'=>$matchOpenPos,'matchEnd'=>$matchClosePos,];$reverseIndex=$reverseClosePos;$matchIndex=$matchClosePos;}return$result;}protected function initReverseParamsGetGreedyInfo(&$reverseSectionsInfo,&$constraints,&$paramName,&$sectionIndex,&$greedyCatched){$greedyFlag=mb_strpos($paramName,'*')!==FALSE;$sectionIsLast=NULL;if($greedyFlag){if($greedyFlag&&$greedyCatched)throw new\InvalidArgumentException("[\".__CLASS__.\"] Route pattern definition can have only one greedy `<param_name*>` "." with star (to include everything - all characters and slashes . `.*`) (\$this).");$reverseSectionsCount=count($reverseSectionsInfo);$sectionIndexPlusOne=$sectionIndex+1;if($sectionIndexPlusOne<$reverseSectionsCount&&!($reverseSectionsInfo[$sectionIndexPlusOne]->fixed)){$constraintDefined=isset($constraints[$paramName]);$constraint=$constraintDefined?$constraints[$paramName]:NULL;$greedyReal=!$constraintDefined||($constraintDefined&&(mb_strpos($constraint,'.*')!==FALSE||mb_strpos($constraint,'.+')!==FALSE));if($greedyReal)throw new\InvalidArgumentException("[\".__CLASS__.\"] Route pattern definition can not have greedy `<param_name*>` with star "."(to include everything - all characters and slashes . `.*`) immediately before optional "."section (\$this).");}$greedyCatched=TRUE;$paramName=str_replace('*','',$paramName);$sectionIsLast=$sectionIndexPlusOne===$reverseSectionsCount;}return[$greedyFlag,$sectionIsLast];}protected function initFlagsByPatternOrReverse($pattern){$scheme=static::FLAG_SCHEME_NO;if(mb_strpos($pattern,'//')===0){$scheme=static::FLAG_SCHEME_ANY;}else if(mb_strpos($pattern,'http://')===0){$scheme=static::FLAG_SCHEME_HTTP;}else if(mb_strpos($pattern,'https://')===0){$scheme=static::FLAG_SCHEME_HTTPS;}$host=static::FLAG_HOST_NO;if($scheme){if(mb_strpos($pattern,static::PLACEHOLDER_HOST)!==FALSE){$host=static::FLAG_HOST_HOST;}else if(mb_strpos($pattern,static::PLACEHOLDER_DOMAIN)!==FALSE){$host=static::FLAG_HOST_DOMAIN;}else{if(mb_strpos($pattern,static::PLACEHOLDER_TLD)!==FALSE)$host+=static::FLAG_HOST_TLD;if(mb_strpos($pattern,static::PLACEHOLDER_SLD)!==FALSE)$host+=static::FLAG_HOST_SLD;}if(mb_strpos($pattern,static::PLACEHOLDER_BASEPATH)!==FALSE)$host+=static::FLAG_HOST_BASEPATH;}$queryString=mb_strpos($pattern,'?')!==FALSE?static::FLAG_QUERY_INCL:static::FLAG_QUERY_NO;$this->flags=[$scheme,$host,$queryString];}protected function initMatchComposeRegex(&$match,&$matchSectionsInfo,&$reverseParams,&$constraints){$sections=[];$paramIndex=0;$reverseParamsKeys=array_keys($reverseParams);$paramsCount=count($reverseParamsKeys);$anyParams=$paramsCount>0;$defaultPathConstraint=static::$defaultPathConstraint;$defaultDomainConstraint=static::$defaultDomainConstraint;$schemeFlag=$this->flags[0];$matchIsAbsolute=boolval($schemeFlag);$firstPathSlashPos=0;if($matchIsAbsolute){$matchIsAbsolute=TRUE;$defaultConstraint=$defaultDomainConstraint;$firstPathSlashPos=mb_strpos($match,'/',$schemeFlag+($schemeFlag>static::FLAG_SCHEME_ANY?1:0));}else{$defaultConstraint=$defaultPathConstraint;}$pathFixedSectionsCount=0;$lastPathFixedSectionIndex=0;$trailingSlash='?';$one=$matchIsAbsolute?0:1;$sectionsCountMinusOne=count($matchSectionsInfo)-1;foreach($matchSectionsInfo as$sectionIndex=>$section){$sectionEnd=$section->end;if($anyParams){$sectionOffset=$section->start;$sectionResult='';while($paramIndex<$paramsCount){$paramKey=$reverseParamsKeys[$paramIndex];$param=$reverseParams[$paramKey];if($param->sectionIndex!==$sectionIndex)break;$paramStart=$param->matchStart;if($matchIsAbsolute&&$paramStart>$firstPathSlashPos)$defaultConstraint=$defaultPathConstraint;if($sectionOffset<$paramStart)$sectionResult.=mb_substr($match,$sectionOffset,$paramStart-$sectionOffset);$paramName=$param->name;$customConstraint=isset($constraints[$paramName]);if(!$customConstraint&&$param->greedy)$defaultConstraint='.*';if($customConstraint){$constraint=$constraints[$paramName];}else{$constraint=$defaultConstraint;}$sectionResult.='(?<'.$paramName.'>'.$constraint.')';$paramIndex+=1;$sectionOffset=$param->matchEnd;}if($sectionOffset<$sectionEnd)$sectionResult.=mb_substr($match,$sectionOffset,$sectionEnd-$sectionOffset);}else{$sectionResult=mb_substr($match,$section->start,$section->length);}if($matchIsAbsolute&&$sectionEnd>$firstPathSlashPos)$one=1;if($section->fixed){$pathFixedSectionsCount+=$one;$lastPathFixedSectionIndex=$sectionIndex;}else{$sectionResult='('.$sectionResult.')?';}$sections[]=$sectionResult;}if($pathFixedSectionsCount>0){$lastFixedSectionContent=&$sections[$lastPathFixedSectionIndex];if($sectionsCountMinusOne==0&&$lastPathFixedSectionIndex==0&&$lastFixedSectionContent==='/'){$trailingSlash='';}else{$lastCharIsSlash=mb_substr($lastFixedSectionContent,-1,1)=='/';if($lastPathFixedSectionIndex==$sectionsCountMinusOne){if(!$lastCharIsSlash)$trailingSlash='/?';}else{$lastFixedSectionContent.=($lastCharIsSlash?'':'/').'?';$trailingSlash='/?';}}}return'#^'.implode('',$sections).$trailingSlash.'$#';}protected function throwExceptionIfNoPattern(){throw new\LogicException("[".__CLASS__."] Route configuration property `\MvcCore\Route::\$pattern` is missing "."to parse it and complete property(ies) `\MvcCore\Route::\$match` "."(and `\MvcCore\Route::\$reverse`) correctly ($this).");}public function __toString(){$type=new\ReflectionClass($this);$allProps=$type->getProperties(\ReflectionProperty::IS_PUBLIC|\ReflectionProperty::IS_PROTECTED|\ReflectionProperty::IS_PRIVATE);$result=[];foreach($allProps as$prop){if($prop->isStatic())continue;if($prop->isPrivate())$prop->setAccessible(TRUE);$value=NULL;try{$value=$prop->getValue($this);}catch(\Exception$e){};$result[]='"'.$prop->getName().'":"'.($value===NULL?'NULL':var_export($value)).'"';}return'{'.implode(', ',$result).'}';}}}
namespace MvcCore\Route{trait Instancing{public static function CreateInstance($patternOrConfig=NULL,$controllerAction=NULL,$defaults=[],$constraints=[],$advancedConfiguration=[]){return(new\ReflectionClass(get_called_class()))->newInstanceArgs(func_get_args());}public function __construct($patternOrConfig=NULL,$controllerAction=NULL,$defaults=[],$constraints=[],$advancedConfiguration=[]){if(count(func_get_args())===0)return;if(is_array($patternOrConfig)){$data=(object)$patternOrConfig;$this->constructDataPatternsDefaultsConstraintsFilters($data);$this->constructDataCtrlActionName($data);$this->constructDataAdvConf($data);$this->config=&$patternOrConfig;}else{$this->constructVarsPatternDefaultsConstraintsFilters($patternOrConfig,$defaults,$constraints,$advancedConfiguration);$this->constructVarCtrlActionNameByData($controllerAction);$this->constructVarAdvConf($advancedConfiguration);$this->config=&$advancedConfiguration;}$this->constructCtrlOrActionByName();}protected function constructDataPatternsDefaultsConstraintsFilters(&$data){if(isset($data->pattern))$this->pattern=$data->pattern;if(isset($data->match))$this->match=$data->match;if(isset($data->reverse))$this->reverse=$data->reverse;if(isset($data->defaults))$this->SetDefaults($data->defaults);if(isset($data->constraints))$this->SetConstraints($data->constraints);if(isset($data->filters)&&is_array($data->filters))$this->SetFilters($data->filters);}protected function constructDataCtrlActionName(&$data){if(isset($data->controllerAction)){list($ctrl,$action)=explode(':',$data->controllerAction);if($ctrl)$this->controller=$ctrl;if($action)$this->action=$action;if(isset($data->name)){$this->name=$data->name;}else{$this->name=$data->controllerAction;}}else{$this->controller=isset($data->controller)?$data->controller:NULL;$this->action=isset($data->action)?$data->action:NULL;if(isset($data->name)){$this->name=$data->name;}else if($this->controller!==NULL&&$this->action!==NULL){$this->name=$this->controller.':'.$this->action;}else{$this->name=NULL;}}}protected function constructDataAdvConf(&$data){$methodParam=static::CONFIG_METHOD;if(isset($data->{$methodParam}))$this->method=strtoupper((string)$data->{$methodParam});$redirectParam=static::CONFIG_REDIRECT;if(isset($data->{$redirectParam}))$this->redirect=(string)$data->{$redirectParam};$absoluteParam=static::CONFIG_ABSOLUTE;if(isset($data->{$absoluteParam}))$this->absolute=(bool)$data->{$absoluteParam};}protected function constructVarsPatternDefaultsConstraintsFilters(&$pattern,&$defaults,&$constraints,&$advCfg){if($pattern!==NULL)$this->pattern=$pattern;if($defaults!==NULL)$this->defaults=$defaults;if($constraints!==NULL)$this->SetConstraints($constraints);$filterInParam=static::CONFIG_FILTER_IN;if(isset($advCfg[$filterInParam]))$this->SetFilter($advCfg[$filterInParam],$filterInParam);$filterOutParam=static::CONFIG_FILTER_OUT;if(isset($advCfg[$filterOutParam]))$this->SetFilter($advCfg[$filterOutParam],$filterOutParam);}protected function constructVarCtrlActionNameByData(&$ctrlAction){if($ctrlAction!==NULL){list($ctrl,$action)=explode(':',$ctrlAction);if($ctrl)$this->controller=$ctrl;if($action)$this->action=$action;}}protected function constructVarAdvConf(&$advCfg){$methodParam=static::CONFIG_METHOD;if(isset($advCfg[$methodParam]))$this->method=strtoupper((string)$advCfg[$methodParam]);$redirectParam=static::CONFIG_REDIRECT;if(isset($advCfg[$redirectParam]))$this->redirect=(string)$advCfg[$redirectParam];$absoluteParam=static::CONFIG_ABSOLUTE;if(isset($advCfg[$absoluteParam]))$this->absolute=(bool)$advCfg[$absoluteParam];}protected function constructCtrlOrActionByName(){if(!$this->controller&&!$this->action&&strpos($this->name,':')!==FALSE&&strlen($this->name)>1){list($ctrl,$action)=explode(':',$this->name);if($ctrl)$this->controller=$ctrl;if($action)$this->action=$action;}}}}
namespace MvcCore\Route{trait GettersSetters{public function GetPattern(){return$this->pattern;}public function&SetPattern($pattern){$this->pattern=$pattern;return$this;}public function GetMatch(){return$this->match;}public function&SetMatch($match){$this->match=$match;return$this;}public function GetReverse(){return$this->reverse;}public function&SetReverse($reverse){$this->reverse=$reverse;return$this;}public function GetName(){return$this->name;}public function&SetName($name){$this->name=$name;return$this;}public function GetController(){return$this->controller;}public function&SetController($controller){$this->controller=$controller;return$this;}public function GetAction(){return$this->action;}public function&SetAction($action){$this->action=$action;return$this;}public function GetControllerAction(){return$this->controller.':'.$this->action;}public function&SetControllerAction($controllerAction){list($ctrl,$action)=explode(':',$controllerAction);if($ctrl)$this->controller=$ctrl;if($action)$this->action=$action;return$this;}public function&GetDefaults(){return$this->defaults;}public function&SetDefaults($defaults=[]){$this->defaults=$defaults;return$this;}public function GetConstraints(){return$this->constraints;}public function&SetConstraints($constraints=[]){$this->constraints=$constraints;foreach($constraints as$key=>$value)if(!isset($this->defaults[$key]))$this->defaults[$key]=NULL;return$this;}public function&GetFilters(){$filters=[];foreach($this->filters as$direction=>$handler)$filters[$direction]=$handler[1];return$filters;}public function&SetFilters(array$filters=[]){foreach($filters as$direction=>$handler)$this->SetFilter($handler,$direction);return$this;}public function GetFilter($direction=\MvcCore\IRoute::CONFIG_FILTER_IN){return isset($this->filters[$direction])?$this->filters[$direction]:NULL;}public function&SetFilter($handler,$direction=\MvcCore\IRoute::CONFIG_FILTER_IN){$closureCalling=((is_string($handler)&&strpos($handler,'::')!==FALSE)||(is_array($handler)&&strpos($handler[1],'::')!==FALSE))?FALSE:TRUE;$this->filters[$direction]=[$closureCalling,$handler];return$this;}public function GetMethod(){return$this->method;}public function&SetMethod($method=NULL){$this->method=strtoupper($method);return$this;}public function GetRedirect(){return$this->redirect;}public function&SetRedirect($redirectRouteName=NULL){$this->redirect=$redirectRouteName;return$this;}public function GetReverseParams(){return$this->reverseParams!==NULL?array_keys($this->reverseParams):[];}public function&SetMatchedParams($matchedParams=[]){$this->matchedParams=$matchedParams;return$this;}public function&GetMatchedParams(){return$this->matchedParams;}public function&GetRouter(){return$this->router;}public function&SetRouter(\MvcCore\IRouter&$router){$this->router=&$router;return$this;}public function GetAbsolute(){return$this->absolute||(isset($this->flags[0])&&boolval($this->flags[0]));}public function&SetAbsolute($absolute=TRUE){$this->absolute=$absolute;return$this;}public function GetGroupName(){return$this->groupName;}public function&SetGroupName($groupName){$this->groupName=$groupName;return$this;}public function GetAdvancedConfigProperty($propertyName){$result=NULL;if(isset($this->config[$propertyName]))$result=$this->config[$propertyName];return$result;}}}
namespace MvcCore\Ext\Routers\Media{use MvcCore\Ext\Routers;trait PropsGettersSetters{protected$allowedSiteKeysAndUrlValues=[Routers\IMedia::MEDIA_VERSION_MOBILE=>'m',Routers\IMedia::MEDIA_VERSION_TABLET=>'t',Routers\IMedia::MEDIA_VERSION_FULL=>'',];protected$switchUriParamMediaSiteVersion=NULL;protected$mediaSiteVersion=NULL;protected$sessionMediaSiteVersion=NULL;protected$requestMediaSiteVersion=NULL;protected$firstRequestMediaDetection=NULL;public function&GetAllowedSiteKeysAndUrlValues(){return$this->allowedSiteKeysAndUrlValues;}public function&SetAllowedSiteKeysAndUrlValues($allowedSiteKeysAndUrlValues=[]){$this->allowedSiteKeysAndUrlValues=$allowedSiteKeysAndUrlValues;return$this;}protected function redirectMediaGetUrlValueAndUnsetGet($targetMediaSiteVersion){$mediaVersionUrlParam=static::URL_PARAM_MEDIA_VERSION;if(isset($this->requestGlobalGet[$mediaVersionUrlParam])){if($targetMediaSiteVersion===static::MEDIA_VERSION_FULL){unset($this->requestGlobalGet[$mediaVersionUrlParam]);}else{$this->requestGlobalGet[$mediaVersionUrlParam]=$targetMediaSiteVersion;}$targetMediaUrlValue=NULL;}else{$targetMediaUrlValue=$this->allowedSiteKeysAndUrlValues[$targetMediaSiteVersion];}return$targetMediaUrlValue;}}}
namespace MvcCore{interface IRoute{const CONFIG_FILTER_IN='in';const CONFIG_FILTER_OUT='out';const CONFIG_METHOD='method';const CONFIG_REDIRECT='redirect';const CONFIG_ABSOLUTE='absolute';const FLAG_SCHEME_NO=0;const FLAG_SCHEME_ANY=2;const FLAG_SCHEME_HTTP=7;const FLAG_SCHEME_HTTPS=8;const FLAG_QUERY_NO=0;const FLAG_QUERY_INCL=1;const FLAG_HOST_NO=0;const FLAG_HOST_HOST=1;const FLAG_HOST_DOMAIN=2;const FLAG_HOST_TLD=3;const FLAG_HOST_SLD=4;const FLAG_HOST_BASEPATH=10;const PLACEHOLDER_HOST='%host%';const PLACEHOLDER_DOMAIN='%domain%';const PLACEHOLDER_TLD='%tld%';const PLACEHOLDER_SLD='%sld%';const PLACEHOLDER_BASEPATH='%basePath%';public static function CreateInstance($patternOrConfig=NULL,$controllerAction=NULL,$defaults=[],$constraints=[],$method=NULL);public function GetPattern();public function&SetPattern($pattern);public function GetMatch();public function&SetMatch($match);public function GetReverse();public function&SetReverse($reverse);public function GetName();public function&SetName($name);public function GetController();public function&SetController($controller);public function GetAction();public function&SetAction($action);public function GetControllerAction();public function&SetControllerAction($controllerAction);public function&GetDefaults();public function&SetDefaults($defaults=[]);public function GetConstraints();public function&SetConstraints($constraints=[]);public function&GetFilters();public function&SetFilters(array$filters=[]);public function GetFilter($direction=\MvcCore\IRoute::CONFIG_FILTER_IN);public function&SetFilter($handler,$direction=\MvcCore\IRoute::CONFIG_FILTER_IN);public function GetMethod();public function&SetMethod($method=NULL);public function GetRedirect();public function&SetRedirect($redirectRouteName=NULL);public function GetReverseParams();public function&SetMatchedParams($matchedParams=[]);public function&GetMatchedParams();public function&GetRouter();public function&SetRouter(\MvcCore\IRouter&$router);public function GetAbsolute();public function&SetAbsolute($absolute=TRUE);public function GetGroupName();public function&SetGroupName($groupName);public function&Matches(\MvcCore\IRequest&$request);public function Filter(array&$params=[],array&$defaultParams=[],$direction=\MvcCore\IRoute::CONFIG_FILTER_IN);public function Url(\MvcCore\IRequest&$request,array&$params=[],array&$defaultUrlParams=[],$queryParamsSepatator='&');public function __toString();public function&InitAll();public function GetAdvancedConfigProperty($propertyName);}}
namespace MvcCore\Route{trait UrlBuilding{public function Filter(array&$params=[],array&$defaultParams=[],$direction=\MvcCore\IRoute::CONFIG_FILTER_IN){if(!$this->filters||!isset($this->filters[$direction]))return[TRUE,$params];list($closureCalling,$handler)=$this->filters[$direction];try{$req=&\MvcCore\Application::GetInstance()->GetRequest();if($closureCalling){$newParams=$handler($params,$defaultParams,$req);}else{$newParams=call_user_func_array($handler,[$params,$defaultParams,$req]);}$success=TRUE;}catch(\RuntimeException$e){\MvcCore\Debug::Log($e,\MvcCore\IDebug::ERROR);$success=FALSE;$newParams=$params;}return[$success,$newParams];}public function Url(\MvcCore\IRequest&$request,array&$params=[],array&$defaultUrlParams=[],$queryStringParamsSepatator='&'){if($this->reverseParams===NULL)$this->initReverse();if(count($this->reverseParams)===0){$allParamsClone=array_merge([],$params);}else{$emptyReverseParams=array_fill_keys(array_keys($this->reverseParams),'');$allMergedParams=array_merge($this->defaults,$defaultUrlParams,$params);$allParamsClone=array_merge($emptyReverseParams,array_intersect_key($allMergedParams,$emptyReverseParams),$params);}list(,$filteredParams)=$this->Filter($allParamsClone,$defaultUrlParams,\MvcCore\IRoute::CONFIG_FILTER_OUT);$domainParams=$this->urlGetAndRemoveDomainPercentageParams($filteredParams);$result=$this->urlComposeByReverseSectionsAndParams($this->reverse,$this->reverseSections,$this->reverseParams,$filteredParams,$this->defaults);if($filteredParams){$result.=(mb_strpos($result,'?')!==FALSE?$queryStringParamsSepatator:'?').str_replace('%2F','/',http_build_query($filteredParams,'',$queryStringParamsSepatator,PHP_QUERY_RFC3986));}return$this->urlSplitResultToBaseAndPathWithQuery($request,$result,$domainParams);}protected function urlComposeByReverseSectionsAndParams(&$reverse,&$reverseSections,&$reverseParams,&$params,&$defaults){$sections=[];$paramIndex=0;$reverseParamsKeys=array_keys($reverseParams);$paramsCount=count($reverseParamsKeys);$anyParams=$paramsCount>0;foreach($reverseSections as$sectionIndex=>&$section){$fixed=$section->fixed;$sectionResult='';if($anyParams){$sectionOffset=$section->start;$sectionParamsCount=0;$defaultValuesCount=0;while($paramIndex<$paramsCount){$paramKey=$reverseParamsKeys[$paramIndex];$param=$reverseParams[$paramKey];if($param->sectionIndex!==$sectionIndex)break;$sectionParamsCount++;$paramStart=$param->reverseStart;if($sectionOffset<$paramStart)$sectionResult.=mb_substr($reverse,$sectionOffset,$paramStart-$sectionOffset);$paramName=$param->name;$paramValue=(string)$params[$paramName];if(isset($defaults[$paramName])&&$paramValue==(string)$defaults[$paramName])$defaultValuesCount++;$sectionResult.=htmlspecialchars($paramValue,ENT_QUOTES);unset($params[$paramName]);$paramIndex+=1;$sectionOffset=$param->reverseEnd;}$sectionEnd=$section->end;if(!$fixed&&$sectionParamsCount===$defaultValuesCount){$sectionResult='';}else if($sectionOffset<$sectionEnd){$sectionResult.=mb_substr($reverse,$sectionOffset,$sectionEnd-$sectionOffset);}}else if($fixed){$sectionResult=mb_substr($reverse,$section->start,$section->length);}$sections[]=$sectionResult;}$result=implode('',$sections);$result=&$this->urlCorrectTrailingSlashBehaviour($result);return$result;}protected function urlSplitResultToBaseAndPathWithQuery(\MvcCore\IRequest&$request,$resultUrl,&$domainParams){$domainParamsFlag=$this->flags[1];$basePathInReverse=FALSE;if($domainParamsFlag>=static::FLAG_HOST_BASEPATH){$basePathInReverse=TRUE;$domainParamsFlag-=static::FLAG_HOST_BASEPATH;}if($this->flags[0]){$this->urlReplaceDomainReverseParams($request,$resultUrl,$domainParams,$domainParamsFlag);if($basePathInReverse){return$this->urlSplitResultByReverseBasePath($request,$resultUrl,$domainParams);}else{return$this->urlSplitResultByRequestedBasePath($request,$resultUrl);}}else{return$this->urlSplitResultByAbsoluteAndBasePath($request,$resultUrl,$domainParams,$domainParamsFlag);}}protected function urlReplaceDomainReverseParams(\MvcCore\IRequest&$request,&$resultUrl,&$domainParams,$domainParamsFlag){$replacements=[];$values=[];$router=&$this->router;if($domainParamsFlag==static::FLAG_HOST_HOST){$hostParamName=$router::URL_PARAM_HOST;$replacements[]=static::PLACEHOLDER_HOST;$values[]=isset($domainParams[$hostParamName])?$domainParams[$hostParamName]:$request->GetHost();}else if($domainParamsFlag==static::FLAG_HOST_DOMAIN){$domainParamName=$router::URL_PARAM_DOMAIN;$replacements[]=static::PLACEHOLDER_DOMAIN;$values[]=isset($domainParams[$domainParamName])?$domainParams[$domainParamName]:$request->GetSecondLevelDomain().'.'.$request->GetTopLevelDomain();}else{if($domainParamsFlag==static::FLAG_HOST_TLD){$tldParamName=$router::URL_PARAM_TLD;$replacements[]=static::PLACEHOLDER_TLD;$values[]=isset($domainParams[$tldParamName])?$domainParams[$tldParamName]:$request->GetTopLevelDomain();}else if($domainParamsFlag==static::FLAG_HOST_SLD){$sldParamName=$router::URL_PARAM_SLD;$replacements[]=static::PLACEHOLDER_SLD;$values[]=isset($domainParams[$sldParamName])?$domainParams[$sldParamName]:$request->GetSecondLevelDomain();}else if($domainParamsFlag==static::FLAG_HOST_TLD+static::FLAG_HOST_SLD){$tldParamName=$router::URL_PARAM_TLD;$sldParamName=$router::URL_PARAM_SLD;$replacements[]=static::PLACEHOLDER_TLD;$replacements[]=static::PLACEHOLDER_SLD;$values[]=isset($domainParams[$tldParamName])?$domainParams[$tldParamName]:$request->GetTopLevelDomain();$values[]=isset($domainParams[$sldParamName])?$domainParams[$sldParamName]:$request->GetSecondLevelDomain();}}$resultUrl=str_replace($replacements,$values,$resultUrl);}protected function urlSplitResultByReverseBasePath(\MvcCore\IRequest&$request,$resultUrl,&$domainParams){$doubleSlashPos=mb_strpos($resultUrl,'//');$doubleSlashPos=$doubleSlashPos===FALSE?0:$doubleSlashPos+2;$router=&$this->router;$basePathPlaceHolderPos=mb_strpos($resultUrl,static::PLACEHOLDER_BASEPATH,$doubleSlashPos);if($basePathPlaceHolderPos===FALSE){return$this->urlSplitResultByRequestedBasePath($request,$resultUrl);}else{$pathPart=mb_substr($resultUrl,$basePathPlaceHolderPos+mb_strlen(static::PLACEHOLDER_BASEPATH));$basePart=mb_substr($resultUrl,0,$basePathPlaceHolderPos);$basePathParamName=$router::URL_PARAM_BASEPATH;$basePart.=isset($domainParams[$basePathParamName])?$domainParams[$basePathParamName]:$request->GetBasePath();}if($this->flags[0]===static::FLAG_SCHEME_ANY)$basePart=$request->GetProtocol().$basePart;return[$basePart,$pathPart];}protected function urlSplitResultByRequestedBasePath(\MvcCore\IRequest&$request,$resultUrl){$doubleSlashPos=mb_strpos($resultUrl,'//');$doubleSlashPos=$doubleSlashPos===FALSE?0:$doubleSlashPos+2;$nextSlashPos=mb_strpos($resultUrl,'/',$doubleSlashPos);if($nextSlashPos===FALSE){$queryStringPos=mb_strpos($resultUrl,'?',$doubleSlashPos);$baseUrlPartEndPos=$queryStringPos===FALSE?mb_strlen($resultUrl):$queryStringPos;}else{$baseUrlPartEndPos=$nextSlashPos;}$requestedBasePath=$request->GetBasePath();$basePathLength=mb_strlen($requestedBasePath);if($basePathLength>0){$basePathPos=mb_strpos($resultUrl,$requestedBasePath,$baseUrlPartEndPos);if($basePathPos===$baseUrlPartEndPos)$baseUrlPartEndPos+=$basePathLength;}$basePart=mb_substr($resultUrl,0,$baseUrlPartEndPos);if($this->flags[0]===static::FLAG_SCHEME_ANY)$basePart=$request->GetProtocol().$basePart;return[$basePart,mb_substr($resultUrl,$baseUrlPartEndPos)];}protected function urlSplitResultByAbsoluteAndBasePath(\MvcCore\IRequest&$request,$resultUrl,&$domainParams,$basePathInReverse){$router=&$this->router;$basePathParamName=$router::URL_PARAM_BASEPATH;$basePart=isset($domainParams[$basePathParamName])?isset($domainParams[$basePathParamName]):$request->GetBasePath();if($basePathInReverse){$placeHolderBasePath=static::PLACEHOLDER_BASEPATH;$basePathPlaceHolderPos=mb_strpos($resultUrl,$placeHolderBasePath);if($basePathPlaceHolderPos!==FALSE){$basePart=mb_substr($resultUrl,0,$basePathPlaceHolderPos).$basePart;$resultUrl=mb_substr($resultUrl,$basePathPlaceHolderPos+mb_strlen($placeHolderBasePath));}}$absoluteParamName=$router::URL_PARAM_ABSOLUTE;if($this->absolute||(isset($domainParams[$absoluteParamName])&&$domainParams[$absoluteParamName]))$basePart=$request->GetDomainUrl().$basePart;return[$basePart,$resultUrl];}protected function urlGetAndRemoveDomainPercentageParams(array&$params=[]){static$domainPercentageParams=[];$absolute=FALSE;$router=&$this->router;$absoluteParamName=$router::URL_PARAM_ABSOLUTE;$result=[];if(!$domainPercentageParams){$domainPercentageParams=[$router::URL_PARAM_HOST,$router::URL_PARAM_DOMAIN,$router::URL_PARAM_TLD,$router::URL_PARAM_SLD,$router::URL_PARAM_BASEPATH,];}foreach($domainPercentageParams as$domainPercentageParam){if(isset($params[$domainPercentageParam])){$absolute=TRUE;$result[$domainPercentageParam]=$params[$domainPercentageParam];unset($params[$domainPercentageParam]);}}if($absolute){$result[$absoluteParamName]=TRUE;}else if(isset($params[$absoluteParamName])){$result[$absoluteParamName]=(bool)$params[$absoluteParamName];unset($params[$absoluteParamName]);}return$result;}protected function&urlCorrectTrailingSlashBehaviour(&$urlPath){$trailingSlashBehaviour=$this->router->GetTrailingSlashBehaviour();$urlPathLength=mb_strlen($urlPath);$lastCharIsSlash=$urlPathLength>0&&mb_substr($urlPath,$urlPathLength-1)==='/';if(!$lastCharIsSlash&&$trailingSlashBehaviour===\MvcCore\IRouter::TRAILING_SLASH_ALWAYS){$urlPath.='/';}else if($lastCharIsSlash&&$trailingSlashBehaviour===\MvcCore\IRouter::TRAILING_SLASH_REMOVE){$urlPath=mb_substr($urlPath,0,$urlPathLength-1);}if($urlPath==='')$urlPath='/';return$urlPath;}}}
namespace MvcCore\Ext\Routers\Localization{trait RewriteRouting{protected function rewriteRouting($requestCtrlName,$requestActionName){$request=&$this->request;$localizationInRequest=is_array($this->requestLocalization)&&count($this->requestLocalization)>0;$localizationStr=implode(static::LANG_AND_LOCALE_SEPARATOR,$this->localization);if(count($this->localization)>0){$routesLocalizationStr=$this->routeRecordsByLanguageAndLocale?$localizationStr:$this->localization[0];}else{$routesLocalizationStr=NULL;}$requestMethod=$request->GetMethod();$requestedPathFirstWord=$this->rewriteRoutingGetReqPathFirstWord();$this->rewriteRoutingProcessPreHandler($requestedPathFirstWord);$routes=&$this->rewriteRoutingGetRoutesToMatch($requestedPathFirstWord,$routesLocalizationStr);$localizationRoutesSkipping=!($this->routeGetRequestsOnly&&$requestMethod!==\MvcCore\IRequest::METHOD_GET);foreach($routes as&$route){$routeMethod=$route->GetMethod();if($routeMethod!==NULL&&$routeMethod!==$requestMethod)continue;$routeIsLocalized=$route instanceof\MvcCore\Ext\Routers\Localizations\Route;if(!$localizationInRequest&&$routeIsLocalized){if($localizationRoutesSkipping)continue;}if(!$this->allowNonLocalizedRoutes&&!$routeIsLocalized)continue;if($routeIsLocalized){$allMatchedParams=$route->Matches($request,$routesLocalizationStr);}else{$allMatchedParams=$route->Matches($request);}if($allMatchedParams!==NULL){if($this->rewriteRoutingCloneRouteToCurrent($route,$allMatchedParams))continue;$localizationUrlParamName=static::URL_PARAM_LOCALIZATION;$this->rewriteRoutingSetRequestedAndDefaultParams($allMatchedParams,$requestCtrlName,$requestActionName);$this->defaultParams[$localizationUrlParamName]=$localizationStr;$localizationContained=isset($requestParams[$localizationUrlParamName]);$requestParams[$localizationUrlParamName]=$localizationStr;if($this->rewriteRoutingSetRequestParams($allMatchedParams))continue;if(!$localizationContained)$this->request->RemoveParam($localizationUrlParamName);$this->rewriteRoutingSetUpCurrentRouteByRequest();break;}}}}}
namespace MvcCore\Ext\Routers\Media{use MvcCore\Ext\Routers;trait PreRouting{protected function preRouteMedia(){if(!$this->mediaSiteVersion){if((($this->isGet&&$this->routeGetRequestsOnly)||!$this->routeGetRequestsOnly)&&$this->switchUriParamMediaSiteVersion!==NULL){if(!$this->manageMediaSwitchingAndRedirect())return FALSE;}else if((($this->isGet&&$this->routeGetRequestsOnly)||!$this->routeGetRequestsOnly)&&$this->sessionMediaSiteVersion===NULL){$this->manageMediaDetectionAndStoreInSession();if(!$this->checkMediaVersionWithUrlAndRedirectIfNecessary())return FALSE;}else{$this->mediaSiteVersion=$this->sessionMediaSiteVersion;if(!$this->checkMediaVersionWithUrlAndRedirectIfNecessary())return FALSE;}}$this->request->SetMediaSiteVersion($this->mediaSiteVersion);$this->session->{static::URL_PARAM_MEDIA_VERSION}=$this->mediaSiteVersion;return TRUE;}protected function manageMediaSwitchingAndRedirect(){$switchMediaVersionParamName=static::URL_PARAM_SWITCH_MEDIA_VERSION;if(isset($this->requestGlobalGet[$switchMediaVersionParamName]))unset($this->requestGlobalGet[$switchMediaVersionParamName]);return$this->redirectToVersion($this->setUpMediaSiteVersionToContextAndSession($this->switchUriParamMediaSiteVersion));}protected function manageMediaDetectionAndStoreInSession(){$detect=new\Mobile_Detect();if(array_key_exists(Routers\IMedia::MEDIA_VERSION_MOBILE,$this->allowedSiteKeysAndUrlValues)&&$detect->isMobile()){$this->mediaSiteVersion=Routers\IMedia::MEDIA_VERSION_MOBILE;}else if(array_key_exists(Routers\IMedia::MEDIA_VERSION_TABLET,$this->allowedSiteKeysAndUrlValues)&&$detect->isTablet()){$this->mediaSiteVersion=Routers\IMedia::MEDIA_VERSION_TABLET;}else{$this->mediaSiteVersion=Routers\IMedia::MEDIA_VERSION_FULL;}$mediaVersionUrlParam=static::URL_PARAM_MEDIA_VERSION;$this->session->{$mediaVersionUrlParam}=$this->mediaSiteVersion;$this->firstRequestMediaDetection=$this->mediaSiteVersion===$this->requestMediaSiteVersion;}protected function checkMediaVersionWithUrlAndRedirectIfNecessary(){if($this->stricModeBySession&&!$this->adminRequest&&(($this->isGet&&$this->routeGetRequestsOnly)||!$this->routeGetRequestsOnly)){$targetMediaSiteVersion=$this->mediaSiteVersion;}else if($this->firstRequestMediaDetection===FALSE){$targetMediaSiteVersion=$this->mediaSiteVersion;}else{if($this->routeGetRequestsOnly&&$this->request->GetMethod()!==\MvcCore\IRequest::METHOD_GET&&$this->requestMediaSiteVersion!==$this->sessionMediaSiteVersion){$targetMediaSiteVersion=$this->sessionMediaSiteVersion;$this->mediaSiteVersion=$targetMediaSiteVersion;$this->requestMediaSiteVersion=$targetMediaSiteVersion;}else{$targetMediaSiteVersion=$this->requestMediaSiteVersion;$this->mediaSiteVersion=$targetMediaSiteVersion;}}if($targetMediaSiteVersion===$this->requestMediaSiteVersion)return TRUE;return$this->redirectToVersion($this->setUpMediaSiteVersionToContextAndSession($targetMediaSiteVersion));}protected function setUpMediaSiteVersionToContextAndSession($targetMediaSiteVersion){$this->session->{static::URL_PARAM_MEDIA_VERSION}=$targetMediaSiteVersion;$this->mediaSiteVersion=$targetMediaSiteVersion;return[\MvcCore\Ext\Routers\IMedia::URL_PARAM_MEDIA_VERSION=>$targetMediaSiteVersion];}}}
namespace MvcCore\Ext\Routers\Media{trait Preparing{protected function prepareMedia(){$sessStrictModeSwitchUrlParam=static::URL_PARAM_SWITCH_MEDIA_VERSION;if(isset($this->requestGlobalGet[$sessStrictModeSwitchUrlParam])){$switchUriParamMediaSiteVersion=strtolower($this->requestGlobalGet[$sessStrictModeSwitchUrlParam]);if(isset($this->allowedSiteKeysAndUrlValues[$switchUriParamMediaSiteVersion]))$this->switchUriParamMediaSiteVersion=$switchUriParamMediaSiteVersion;}$mediaVersionUrlParam=static::URL_PARAM_MEDIA_VERSION;if(isset($this->session->{$mediaVersionUrlParam})){$sessionMediaSiteVersion=$this->session->{$mediaVersionUrlParam};if(isset($this->allowedSiteKeysAndUrlValues[$sessionMediaSiteVersion]))$this->sessionMediaSiteVersion=$this->session->{$mediaVersionUrlParam};}$this->prepareRequestMediaVersionFromUrl();}protected function prepareRequestMediaVersionFromUrl(){$this->prepareRequestMediaVersionFromUrlQueryString();if($this->requestMediaSiteVersion===NULL&&$this->anyRoutesConfigured)$this->prepareRequestMediaVersionFromUrlPath();if($this->requestMediaSiteVersion===NULL)$this->requestMediaSiteVersion=static::MEDIA_VERSION_FULL;}protected function prepareRequestMediaVersionFromUrlQueryString(){$requestMediaVersion=$this->request->GetParam(static::URL_PARAM_MEDIA_VERSION,'a-zA-Z');$this->prepareSetUpRequestMediaSiteVersionIfValid($requestMediaVersion);}protected function prepareRequestMediaVersionFromUrlPath(){$requestPath=$this->request->GetPath(TRUE);foreach($this->allowedSiteKeysAndUrlValues as$mediaSiteVersion=>$mediaSiteUrlValue){$mediaSiteUrlPrefix=$mediaSiteUrlValue===''?'':'/'.mb_strtolower($mediaSiteUrlValue);$requestPathPart=mb_strtolower(mb_substr($requestPath,0,mb_strlen($mediaSiteUrlPrefix)));if($requestPathPart===$mediaSiteUrlPrefix){$this->requestMediaSiteVersion=$mediaSiteVersion;$this->request->SetPath(mb_substr($requestPath,mb_strlen($mediaSiteUrlPrefix)));break;}}}protected function prepareSetUpRequestMediaSiteVersionIfValid($rawRequestMediaVersion){$result=FALSE;$rawRequestMediaVersionLength=$rawRequestMediaVersion?strlen($rawRequestMediaVersion):0;$requestMediaVersionValidStr=$rawRequestMediaVersionLength>0;$requestMediaVersionFormated='';if($requestMediaVersionValidStr){$requestMediaVersionFormated=mb_strtolower($rawRequestMediaVersion);if(isset($this->allowedSiteKeysAndUrlValues[$requestMediaVersionFormated])){$this->requestMediaSiteVersion=$requestMediaVersionFormated;$result=TRUE;}else{$allowedSiteKey=array_search($requestMediaVersionFormated,array_values($this->allowedSiteKeysAndUrlValues),TRUE);if($allowedSiteKey!==FALSE){$this->requestMediaSiteVersion=$allowedSiteKey;$result=TRUE;}}}return$result;}}}
namespace MvcCore\Ext\Routers{interface IMedia{const MEDIA_VERSION_FULL='full';const MEDIA_VERSION_TABLET='tablet';const MEDIA_VERSION_MOBILE='mobile';const URL_PARAM_MEDIA_VERSION='media_version';const URL_PARAM_SWITCH_MEDIA_VERSION='switch_media_version';public function&GetAllowedSiteKeysAndUrlValues();public function&SetAllowedSiteKeysAndUrlValues($allowedSiteKeysAndUrlValues=[]);}}
namespace MvcCore\Ext\Routers\Localization{trait PropsGettersSetters{protected$defaultLocalization=[];protected$localization=[];protected$redirectFirstRequestToDefault=FALSE;protected$allowNonLocalizedRoutes=TRUE;protected$detectLocalizationOnlyByLang=TRUE;protected$allowedLocalizations=[];protected$localizationEquivalents=[];protected$routeRecordsByLanguageAndLocale=FALSE;protected static$routeClassLocalized='\MvcCore\Ext\Routers\Localizations\Route';protected$sessionLocalization=NULL;protected$requestLocalization=NULL;protected$requestLocalizationEquivalent=NULL;protected$switchUriParamLocalization=NULL;protected$firstRequestLocalizationDetection=NULL;protected$defaultLocalizationStr=NULL;protected$originalRequestPath=NULL;public function GetDefaultLocalization(){return$this->defaultLocalization;}public function&SetDefaultLocalization($defaultLocalizationOrLanguage,$defaultLocale=NULL){if($defaultLocalizationOrLanguage===NULL)throw new\InvalidArgumentException("[".__CLASS__."] Default localization must be defined at least by the language.");if($defaultLocale===NULL){$delimiterPos=strpos($defaultLocalizationOrLanguage,static::LANG_AND_LOCALE_SEPARATOR);if($delimiterPos!==FALSE){$defaultLocale=substr($defaultLocalizationOrLanguage,$delimiterPos+1);$defaultLocalizationOrLanguage=substr($defaultLocalizationOrLanguage,0,$delimiterPos);}if(strlen($defaultLocale)>0){$this->defaultLocalization=[$defaultLocalizationOrLanguage,$defaultLocale];}else{$this->defaultLocalization=[$defaultLocalizationOrLanguage];}}else{$this->defaultLocalization=[$defaultLocalizationOrLanguage,$defaultLocale];}return$this;}public function GetLocalization($asString=FALSE){return$asString?implode(static::LANG_AND_LOCALE_SEPARATOR,$this->localization):$this->localization;}public function&SetLocalization($lang,$locale=NULL){if($lang===NULL)throw new\InvalidArgumentException("[".__CLASS__."] Localization must be defined at least by the language.");$this->localization[0]=$lang;if($locale!==NULL)$this->localization[1]=$locale;return$this;}public function GetRedirectFirstRequestToDefault(){return$this->redirectFirstRequestToDefault;}public function&SetRedirectFirstRequestToDefault($redirectFirstRequestToDefault=TRUE){$this->redirectFirstRequestToDefault=$redirectFirstRequestToDefault;return$this;}public function GetAllowNonLocalizedRoutes(){return$this->allowNonLocalizedRoutes;}public function&SetAllowNonLocalizedRoutes($allowNonLocalizedRoutes=TRUE){$this->allowNonLocalizedRoutes=$allowNonLocalizedRoutes;return$this;}public function GetDetectLocalizationOnlyByLang(){return$this->detectLocalizationOnlyByLang;}public function&SetDetectLocalizationOnlyByLang($detectLocalizationOnlyByLang=TRUE){$this->detectLocalizationOnlyByLang=$detectLocalizationOnlyByLang;return$this;}public function GetAllowedLocalizations(){return array_values($this->allowedLocalizations);}public function&SetAllowedLocalizations(){$allowedLocalizations=func_get_args();if(count($allowedLocalizations)===1&&is_array($allowedLocalizations[0]))$allowedLocalizations=$allowedLocalizations[0];$this->allowedLocalizations=array_combine($allowedLocalizations,$allowedLocalizations);return$this;}public function&AddAllowedLocalizations(){$allowedLocalizations=func_get_args();if(count($allowedLocalizations)===1&&is_array($allowedLocalizations[0]))$allowedLocalizations=$allowedLocalizations[0];$this->allowedLocalizations=array_merge($this->allowedLocalizations,array_combine($allowedLocalizations,$allowedLocalizations));return$this;}public function&GetLocalizationEquivalents(){return$this->localizationEquivalents;}public function&SetLocalizationEquivalents(array$localizationEquivalents=[]){$this->localizationEquivalents=[];$this->AddLocalizationEquivalents($localizationEquivalents);return$this;}public function&AddLocalizationEquivalents(array$localizationEquivalents=[]){foreach($localizationEquivalents as$targetLocalization=>$targetLocalizationEquivalents){foreach($targetLocalizationEquivalents as$targetLocalizationEquivalent)$this->localizationEquivalents[$targetLocalizationEquivalent]=$targetLocalization;}return$this;}public function GetRouteRecordsByLanguageAndLocale(){return$this->routeRecordsByLanguageAndLocale;}public function&SetRouteRecordsByLanguageAndLocale($routeRecordsByLanguageAndLocale=TRUE){$this->routeRecordsByLanguageAndLocale=$routeRecordsByLanguageAndLocale;return$this;}public function&AddRoutes(array$routes=[],$groupNames=NULL,$prepend=FALSE,$throwExceptionForDuplication=TRUE){$routeClass=self::$routeClass;self::$routeClass=self::$routeClassLocalized;parent::AddRoutes($routes,$groupNames,$prepend,$throwExceptionForDuplication);self::$routeClass=$routeClass;return$this;}protected function addRouteToGroup(\MvcCore\IRoute&$route,$routeName,$groupNames,$prepend){$routesGroupsKeys=[];if($groupNames===NULL){$routesGroupsKeys[]='';}else if(is_string($groupNames)){$routesGroupsKeys[]=$groupNames;$route->SetGroupName($groupNames);}else if(is_array($groupNames)){foreach($groupNames as$routeLocalizationKey=>$groupName)$routesGroupsKeys[]=$routeLocalizationKey.'/'.$groupName;if($route instanceof\MvcCore\Ext\Routers\Localizations\Route){$route->SetGroupName($groupNames);}else{throw new\InvalidArgumentException("[".__CLASS__."] Localized routes group cannot contain non-localized route instance. "."(group names: ".json_encode($groupNames).", route: $route)");}}foreach($routesGroupsKeys as$routesGroupsKey){if(array_key_exists($routesGroupsKey,$this->routesGroups)){$groupRoutes=$this->routesGroups[$routesGroupsKey];}else{$groupRoutes=[];}if($prepend){$newItem=[$routeName=>$route];$groupRoutes=$newItem+$groupRoutes;}else{$groupRoutes[$routeName]=$route;}$this->routesGroups[$routesGroupsKey]=$groupRoutes;}}public function&SetRoutes($routes=[],$groupNames=NULL,$autoInitialize=TRUE){if($autoInitialize){$this->routes=[];$this->AddRoutes($routes,$groupNames);}else{$this->routes=$routes;$routesAreEmpty=count($routes)===0;$noGroupNameDefined=$groupNames===NULL;if($noGroupNameDefined){if($routesAreEmpty){$this->routesGroups=[];$this->noUrlRoutes=[];}$this->routesGroups['']=$routes;}else if(is_string($groupNames)){$this->routesGroups[$groupNames]=$routes;}else if(is_array($groupNames)){foreach($groupNames as$routesLocalizationKey=>$groupName)$this->routesGroups[$routesLocalizationKey.'/'.$groupName]=$routes;}$this->urlRoutes=[];foreach($routes as$route){$this->urlRoutes[$route->GetName()]=$route;$controllerAction=$route->GetControllerAction();if($controllerAction!==':')$this->urlRoutes[$controllerAction]=$route;if($noGroupNameDefined){$routeGroupNames=$route->GetGroupName();$routesGroupsKeys=[];if($routeGroupNames===NULL){$routesGroupsKeys[]='';}else if(is_string($routeGroupNames)){$routesGroupsKeys[]=$routeGroupNames;}else if(is_array($routeGroupNames)){foreach($routeGroupNames as$routesLocalizationKey=>$routeGroupName)$routesGroupsKeys[]=$routesLocalizationKey.'/'.$routeGroupName;}foreach($routesGroupsKeys as$routesGroupKey){if(!array_key_exists($routesGroupKey,$this->routesGroups))$this->routesGroups[$routesGroupKey]=[];$this->routesGroups[$routesGroupKey][]=$route;}}}$this->anyRoutesConfigured=(!$routesAreEmpty)||$this->preRouteMatchingHandler!==NULL;}return$this;}protected function removeRouteFromGroup(\MvcCore\IRoute&$route,$routeName){$routeGroups=$route->GetGroupName();$routesGroupsKeys=[];if($routeGroups===NULL){$routesGroupsKeys[]='';}else if(is_string($routeGroups)){$routesGroupsKeys[]=$routeGroups;}else if(is_array($routeGroups)){foreach($routeGroups as$routesLocalizationKey=>$routeGroupName)$routesGroupsKeys[]=$routesLocalizationKey.'/'.$routeGroupName;}foreach($routesGroupsKeys as$routesGroupKey){if(isset($this->routesGroups[$routesGroupKey]))unset($this->routesGroups[$routesGroupKey][$routeName]);}}protected function isRouteCfgDataLocalized(array&$routeCfgData=[]){return((isset($routeCfgData['pattern'])&&is_array($routeCfgData['pattern']))||(isset($routeCfgData['match'])&&is_array($routeCfgData['match']))||(isset($routeCfgData['reverse'])&&is_array($routeCfgData['reverse'])));}protected function&getRouteInstance(&$routeCfgOrRoute){if($routeCfgOrRoute instanceof\MvcCore\IRoute)return$routeCfgOrRoute->SetRouter($this);$routeClass=$this->isRouteCfgDataLocalized($routeCfgOrRoute)?self::$routeClassLocalized:self::$routeClass;return$routeClass::CreateInstance($routeCfgOrRoute)->SetRouter($this);}protected function&rewriteRoutingGetRoutesToMatch($firstPathWord,$routesLocalizationStr=NULL){$routesGroupsKey=$firstPathWord;if($routesLocalizationStr!==NULL)$routesGroupsKey=$routesLocalizationStr.'/'.$firstPathWord;if(array_key_exists($routesGroupsKey,$this->routesGroups)){$routes=&$this->routesGroups[$routesGroupsKey];}else{$routes=&$this->routesGroups[''];}reset($routes);return$routes;}protected function redirectLocalizationGetUrlValueAndUnsetGet($targetLocalization){$localizationUrlParam=static::URL_PARAM_LOCALIZATION;$targetLocalizationStr=implode(static::LANG_AND_LOCALE_SEPARATOR,$targetLocalization);if(isset($this->requestGlobalGet[$localizationUrlParam])){if($targetLocalizationStr===$this->defaultLocalizationStr){unset($this->requestGlobalGet[$localizationUrlParam]);}else{$this->requestGlobalGet[$localizationUrlParam]=$targetLocalizationStr;}$targetLocalizationUrlValue=NULL;}else{$targetLocalizationUrlValue=$targetLocalizationStr;}return$targetLocalizationUrlValue;}}}
namespace MvcCore\Ext\Forms\Fields{interface ISubmit{public function GetCustomResultState();public function&SetCustomResultState($customResultState=\MvcCore\Ext\Forms\IForm::RESULT_NEXT_PAGE);}}
namespace MvcCore\Ext\Routers\Localization{trait PreRouting{protected function preRouteLocalization(){if(!$this->localization){if((($this->isGet&&$this->routeGetRequestsOnly)||!$this->routeGetRequestsOnly)&&$this->switchUriParamLocalization!==NULL){if(!$this->manageLocalizationSwitchingAndRedirect())return FALSE;}else if($this->requestLocalizationEquivalent!==NULL){return$this->redirectToVersion($this->setUpLocalizationToContextAndSession($this->requestLocalizationEquivalent));}else if((($this->isGet&&$this->routeGetRequestsOnly)||!$this->routeGetRequestsOnly)&&$this->sessionLocalization===NULL){$this->manageLocalizationDetectionAndStoreInSession();if(!$this->checkLocalizationWithUrlAndRedirectIfNecessary())return FALSE;}else{$this->localization=$this->sessionLocalization;if(!$this->checkLocalizationWithUrlAndRedirectIfNecessary())return FALSE;}}if($this->localization){$this->request->SetLang($this->localization[0]);if(count($this->localization)>1)$this->request->SetLocale($this->localization[1]);$this->session->{static::URL_PARAM_LOCALIZATION}=$this->localization;}return TRUE;}protected function manageLocalizationSwitchingAndRedirect(){$targetLocalization=explode(static::LANG_AND_LOCALE_SEPARATOR,$this->switchUriParamLocalization);if(isset($this->requestGlobalGet[static::URL_PARAM_SWITCH_LOCALIZATION]))unset($this->requestGlobalGet[static::URL_PARAM_SWITCH_LOCALIZATION]);return$this->redirectToVersion($this->setUpLocalizationToContextAndSession($targetLocalization));}protected function manageLocalizationDetectionAndStoreInSession(){$firstRequestLocalizationDetection=FALSE;$requestClass=$this->application->GetRequestClass();$requestGlobalServer=$this->request->GetGlobalCollection('server');$allLanguagesAndLocales=$requestClass::ParseHttpAcceptLang($requestGlobalServer['HTTP_ACCEPT_LANGUAGE']);$counter=1;foreach($allLanguagesAndLocales as$languagesAndLocales){foreach($languagesAndLocales as$languageAndLocale){$languageAndLocaleCount=count($languageAndLocale);if(!$languageAndLocaleCount||$languageAndLocale[0]===NULL){$counter++;continue;}$localizationStr=strtolower($languageAndLocale[0]);if($languageAndLocaleCount>1&&$languageAndLocale[1]!==NULL)$localizationStr.=static::LANG_AND_LOCALE_SEPARATOR.strtoupper($languageAndLocale[1]);if(isset($this->allowedLocalizations[$localizationStr])){$this->localization=$languageAndLocale;if($counter===1)$firstRequestLocalizationDetection=TRUE;break 2;}if(isset($this->localizationEquivalents[$localizationStr])){$this->localization=explode(static::LANG_AND_LOCALE_SEPARATOR,$this->localizationEquivalents[$localizationStr]);if($counter===1)$firstRequestLocalizationDetection=TRUE;break 2;}$counter++;}}if(!$this->localization)$this->localization=$this->defaultLocalization;$this->session->{static::URL_PARAM_LOCALIZATION}=$this->localization;$this->firstRequestLocalizationDetection=$firstRequestLocalizationDetection;}protected function checkLocalizationWithUrlAndRedirectIfNecessary(){if(!$this->requestLocalization&&$this->allowNonLocalizedRoutes)return TRUE;if($this->routeGetRequestsOnly&&$this->request->GetMethod()!==\MvcCore\IRequest::METHOD_GET)return TRUE;if($this->firstRequestLocalizationDetection===FALSE||($this->firstRequestLocalizationDetection===TRUE&&$this->requestLocalization!==NULL&&$this->requestLocalization!==$this->localization)){if($this->redirectFirstRequestToDefault){$targetLocalization=$this->defaultLocalization;$request=&$this->request;$this->requestGlobalGet[static::URL_PARAM_REDIRECTED_SOURCE]=rawurlencode($request->GetBaseUrl().$request->GetOriginalPath().$request->GetQuery(TRUE,TRUE).$request->GetFragment(TRUE,TRUE));$request->SetPath('/');}else if($this->requestLocalization!==NULL){$targetLocalization=$this->requestLocalization;}else{$targetLocalization=$this->localization;}}else if(($this->stricModeBySession&&!$this->adminRequest)||$this->requestLocalization===NULL){$targetLocalization=$this->localization;}else{$this->setUpLocalizationToContextAndSession($this->requestLocalization);$targetLocalization=$this->requestLocalization;}$originalRequestPath=trim($this->originalRequestPath,'/');if($originalRequestPath===$this->defaultLocalizationStr)return$this->redirectToVersion($this->setUpLocalizationToContextAndSession($this->requestLocalization));if($targetLocalization===$this->requestLocalization){$this->localization=$targetLocalization;return TRUE;}return$this->redirectToVersion($this->setUpLocalizationToContextAndSession($targetLocalization));}protected function setUpLocalizationToContextAndSession($targetLocalization){$this->session->{static::URL_PARAM_LOCALIZATION}=$targetLocalization;$this->localization=$targetLocalization;return[\MvcCore\Ext\Routers\ILocalization::URL_PARAM_LOCALIZATION=>$targetLocalization];}}}
namespace MvcCore\Ext\Forms{interface IForm{const VERSION='5.0.0-alpha';const METHOD_GET='GET';const METHOD_POST='POST';const ENCTYPE_URLENCODED='application/x-www-form-urlencoded';const ENCTYPE_MULTIPART='multipart/form-data';const ENCTYPE_PLAINTEXT='text/plain';const HTML_IDS_DELIMITER='_';const RESULT_ERRORS=0;const RESULT_SUCCESS=1;const RESULT_PREV_PAGE=2;const RESULT_NEXT_PAGE=3;const FIELD_RENDER_MODE_NORMAL='normal';const FIELD_RENDER_MODE_NO_LABEL='no-label';const FIELD_RENDER_MODE_LABEL_AROUND='label-around';const ERROR_RENDER_MODE_ALL_TOGETHER='all-together';const ERROR_RENDER_MODE_BEFORE_EACH_CONTROL='before-each-control';const ERROR_RENDER_MODE_AFTER_EACH_CONTROL='after-each-control';const FORM_ASSETS_DIR_REPLACEMENT='__MVCCORE_FORM_ASSETS_DIR__';public function Init();public function PreDispatch();public function Translate($translationKey);public function GetId();public function GetAction();public function GetMethod();public function GetEnctype();public function GetTarget();public function GetAutoComplete();public function GetNoValidate();public function GetAcceptCharsets();public function GetLang();public function GetLocale();public function&GetCssClasses();public function&GetAttributes();public function GetSuccessUrl();public function GetPrevStepUrl();public function GetNextStepUrl();public function GetErrorUrl();public function GetResult();public function GetTranslator();public function GetTranslate();public function GetDefaultRequired();public function&GetValues();public function&GetErrors();public function GetSessionExpiration();public function GetBaseTabIndex();public function GetFieldNextAutoTabIndex();public function GetDefaultFieldsRenderMode();public function GetErrorsRenderMode();public function GetViewScript();public function GetViewClass();public function&GetJsSupportFiles();public function&GetCssSupportFiles();public function GetJsSupportFilesRenderer();public function GetCssSupportFilesRenderer();public function GetFormTagRenderingStatus();public static function GetJsSupportFilesRootDir();public static function GetCssSupportFilesRootDir();public static function GetValidatorsNamespaces();public static function GetPhpIniSizeLimit($iniVarName);public static function&GetById($formId);public static function&GetAutoFocusedFormField($formId,$fieldName);public function&SetId($id);public function&SetAction($url=NULL);public function&SetMethod($method=\MvcCore\Ext\Forms\IForm::METHOD_POST);public function&SetEnctype($enctype=\MvcCore\Ext\Forms\IForm::ENCTYPE_URLENCODED);public function&SetTarget($target='_self');public function&SetAutoComplete($autoComplete=FALSE);public function&SetNoValidate($noValidate=TRUE);public function&SetAcceptCharsets($acceptCharsets=[]);public function&SetLang($lang=NULL);public function&SetLocale($locale=NULL);public function&SetCssClasses($cssClasses);public function&SetAttributes(array$attributes=[]);public function&SetSuccessUrl($url=NULL);public function&SetPrevStepUrl($url=NULL);public function&SetNextStepUrl($url=NULL);public function&SetErrorUrl($url=NULL);public function&SetResult($result=\MvcCore\Ext\Forms\IForm::RESULT_SUCCESS);public function&SetTranslator(callable$translator=NULL);public function&SetDefaultRequired($defaultRequired=TRUE);public function&SetValues(array$values=[],$caseInsensitive=FALSE,$clearPreviousSessionValues=FALSE);public function&SetErrors($errorsCollection=[]);public function&SetSessionExpiration($seconds=0);public function&SetBaseTabIndex($baseTabIndex=0);public function&SetDefaultFieldsRenderMode($defaultFieldsRenderMode=\MvcCore\Ext\Forms\IForm::FIELD_RENDER_MODE_NORMAL);public function&SetErrorsRenderMode($errorsRenderMode=\MvcCore\Ext\Forms\IForm::ERROR_RENDER_MODE_ALL_TOGETHER);public function&SetViewScript($boolOrViewScriptPath=NULL);public function&SetViewClass($viewClass='\\MvcCore\\Ext\\Forms\\View');public function&SetJsSupportFiles(array$jsRelPathsClassNamesAndParams=[]);public function&SetCssSupportFiles(array$cssRelativePaths=[]);public function&SetJsSupportFilesRenderer(callable$jsSupportFilesRenderer);public function&SetCssSupportFilesRenderer(callable$cssSupportFilesRenderer);public function SetFormTagRenderingStatus($formTagRenderingStatus=TRUE);public static function SetJsSupportFilesRootDir($jsSupportFilesRootDir);public static function SetCssSupportFilesRootDir($cssSupportFilesRootDir);public static function&SetValidatorsNamespaces(array$validatorsNamespaces=[]);public static function SetAutoFocusedFormField($formId=NULL,$fieldName=NULL,$duplicateBehaviour=\MvcCore\Ext\Forms\IField::AUTOFOCUS_DUPLICITY_EXCEPTION);public function AddAcceptCharset($charset);public function&AddCssClasses($cssClasses);public function AddError($errorMsg,$fieldNames=NULL);public function&AddJsSupportFile($jsRelativePath='/fields/custom-type.js',$jsClassName='MvcCoreForm.FieldType',$constructorParams=[]);public function&AddCssSupportFile($cssRelativePath='/fields/custom-type.css');public static function AddCsrfErrorHandler(callable$handler,$priorityIndex=NULL);public static function AddValidatorsNamespaces();public function&GetFields();public function&SetFields($fields=[]);public function&AddFields();public function&AddField(\MvcCore\Ext\Forms\IField$field);public function HasField($fieldOrFieldName=NULL);public function&RemoveField($fieldOrFieldName=NULL);public function&GetField($fieldName='');public function&GetFieldsByType($fieldType='');public function&GetFirstFieldByType($fieldType='');public function&GetFieldsByPhpClass($fieldClassName='',$directTypesOnly=FALSE);public function&GetFirstFieldByPhpClass($fieldClassName='',$directTypesOnly=FALSE);public function&ClearSession();public function&SaveSession();public function __toString();public function Render($controllerDashedName='',$actionDashedName='');public function RenderContent();public function RenderErrors();public function RenderBegin();public function RenderEnd();public function RenderSupportingCss();public function RenderSupportingJs();public function Submit(array&$rawRequestParams=[]);public function SubmitSetStartResultState(array&$rawRequestParams=[]);public function&SubmitValidateMaxPostSizeIfNecessary();public function SubmitAllFields(array&$rawRequestParams=[]);public function SubmittedRedirect();public function&GetValidator($validatorName);public function GetDefaultErrorMsg($index);public static function ProcessCsrfErrorHandlersQueue(\MvcCore\Ext\Forms\IForm&$form,$errorMsg);public function GetCsrf();public function SubmitCsrfTokens(array&$rawRequestParams=[]);public function SetUpCsrf();}}
namespace MvcCore\Ext\Routers{interface ILocalization{const URL_PARAM_LOCALIZATION='localization';const URL_PARAM_SWITCH_LOCALIZATION='switch_localization';const URL_PARAM_REDIRECTED_SOURCE='source_url';const LANG_AND_LOCALE_SEPARATOR='-';public function GetDefaultLocalization();public function&SetDefaultLocalization($defaultLocalizationOrLanguage,$defaultLocale=NULL);public function GetLocalization($asString=FALSE);public function&SetLocalization($lang,$locale=NULL);public function GetRedirectFirstRequestToDefault();public function&SetRedirectFirstRequestToDefault($redirectFirstRequestToDefault=TRUE);public function GetAllowNonLocalizedRoutes();public function&SetAllowNonLocalizedRoutes($allowNonLocalizedRoutes=TRUE);public function GetDetectLocalizationOnlyByLang();public function&SetDetectLocalizationOnlyByLang($detectLocalizationOnlyByLang=TRUE);public function GetAllowedLocalizations();public function&SetAllowedLocalizations();public function&AddAllowedLocalizations();public function&GetLocalizationEquivalents();public function&SetLocalizationEquivalents(array$localizationEquivalents=[]);public function&AddLocalizationEquivalents(array$localizationEquivalents=[]);public function GetRouteRecordsByLanguageAndLocale();public function&SetRouteRecordsByLanguageAndLocale($routeRecordsByLanguageAndLocale=TRUE);}}
namespace MvcCore\Ext\Forms\Field\Props{trait FormAttrs{protected$formAction=NULL;protected$formEnctype=NULL;protected$formMethod=NULL;protected$formNoValidate=NULL;protected$formTarget=NULL;public function GetFormAction(){return$this->formAction;}public function&SetFormAction($formAction){$this->formAction=$formAction;return$this;}public function GetFormEnctype(){return$this->formEnctype;}public function&SetFormEnctype($formEnctype){$this->formEnctype=$formEnctype;return$this;}public function GetFormMethod(){return$this->formMethod;}public function&SetFormMethod($formMethod){$this->formMethod=$formMethod;return$this;}public function GetFormNoValidate(){return$this->formNoValidate;}public function&SetFormNoValidate($formNoValidate=TRUE){$this->formNoValidate=$formNoValidate;return$this;}public function GetFormTarget(){return$this->formTarget;}public function&SetFormTarget($formTarget){$this->formTarget=$formTarget;return$this;}}}
namespace MvcCore\Ext\Forms\Field\Props{trait Submit{protected$customResultState=NULL;public function GetCustomResultState(){return$this->customResultState;}public function&SetCustomResultState($customResultState=\MvcCore\Ext\Forms\IForm::RESULT_NEXT_PAGE){$this->customResultState=$customResultState;return$this;}}}
namespace MvcCore\Route{trait Props{protected static$defaultPathConstraint='[^/]+';protected static$defaultDomainConstraint='[^\.]+';protected$pattern=NULL;protected$match=NULL;protected$reverse=NULL;protected$name='';protected$controller='';protected$action='';protected$defaults=[];protected$constraints=[];protected$filters=[];protected$method=NULL;protected$redirect=NULL;protected$absolute=FALSE;protected$groupName=NULL;protected$reverseParams=NULL;protected$matchedParams=[];protected$reverseSections=NULL;protected$lastPatternParam=NULL;protected$flags=[];protected$router=NULL;protected$config=[];private$_trailingSlashBehaviour=NULL;}}
namespace MvcCore\Ext\Routers\Localization{trait Preparing{protected function prepareLocalization(){if(!$this->defaultLocalization)throw new\InvalidArgumentException("[".__CLASS__."] No default localization configured.");$this->allowedLocalizations=array_combine($this->allowedLocalizations,$this->allowedLocalizations);$this->defaultLocalizationStr=implode(static::LANG_AND_LOCALE_SEPARATOR,$this->defaultLocalization);$this->allowedLocalizations[$this->defaultLocalizationStr]=$this->defaultLocalizationStr;if($this->detectLocalizationOnlyByLang){foreach($this->allowedLocalizations as$allowedLocalization=>$allowedLocalizationValue){$separatorPos=strpos($allowedLocalization,static::LANG_AND_LOCALE_SEPARATOR);if($separatorPos!==FALSE){$lang=substr($allowedLocalization,0,$separatorPos);if(!isset($this->localizationEquivalents[$lang]))$this->localizationEquivalents[$lang]=$allowedLocalization;}}}$sessStrictModeSwitchUrlParam=static::URL_PARAM_SWITCH_LOCALIZATION;if(isset($this->requestGlobalGet[$sessStrictModeSwitchUrlParam])){$globalGetValue=strtolower($this->requestGlobalGet[$sessStrictModeSwitchUrlParam]);$separatorPos=strpos($globalGetValue,static::LANG_AND_LOCALE_SEPARATOR);if($separatorPos!==FALSE)$globalGetValue=substr($globalGetValue,0,$separatorPos+1).strtoupper(substr($globalGetValue,$separatorPos+1));if(isset($this->allowedLocalizations[$globalGetValue]))$this->switchUriParamLocalization=$globalGetValue;}if(isset($this->session->{static::URL_PARAM_LOCALIZATION}))$this->sessionLocalization=$this->session->{static::URL_PARAM_LOCALIZATION};$this->originalRequestPath=$this->request->GetPath();$this->prepareRequestLocalizationFromUrl();}protected function prepareRequestLocalizationFromUrl(){$this->prepareRequestLocalizationFromUrlQueryString();if($this->requestLocalization===NULL&&$this->anyRoutesConfigured)$this->prepareRequestLocalizationFromUrlPath();if($this->requestLocalization===NULL){$requestPath=$this->request->GetPath(TRUE);if(trim($requestPath,'/')===''&&$requestPath!==$this->request->GetScriptName()){$this->requestLocalization=$this->defaultLocalization;$this->request->SetLang($this->requestLocalization[0]);if($this->requestLocalization[1])$this->request->SetLocale($this->requestLocalization[1]);}}}protected function prepareRequestLocalizationFromUrlQueryString(){$localizationUrlParam=static::URL_PARAM_LOCALIZATION;$langAndLocaleSeparator=static::LANG_AND_LOCALE_SEPARATOR;$requestLocalization=$this->request->GetParam($localizationUrlParam,$langAndLocaleSeparator.'a-zA-Z0-9');$this->prepareSetUpRequestLocalizationIfValid($requestLocalization,FALSE);}protected function prepareRequestLocalizationFromUrlPath(){$requestPath=$this->request->GetPath(TRUE);$secondSlashPos=mb_strlen($requestPath)>1?mb_strpos($requestPath,'/',1):FALSE;if($secondSlashPos===FALSE){$firstPathElm=$requestPath!=='/'?mb_substr($requestPath,1):'';}else{$firstPathElm=mb_substr($requestPath,1,$secondSlashPos-1);}$localizationPart=preg_replace("#[^".static::LANG_AND_LOCALE_SEPARATOR."a-z0-9]#",'',strtolower($firstPathElm));$this->prepareSetUpRequestLocalizationIfValid($localizationPart,TRUE);}protected function prepareSetUpRequestLocalizationIfValid($rawRequestLocalization,$correctRequestPath=FALSE){$result=FALSE;$langAndLocaleSeparator=static::LANG_AND_LOCALE_SEPARATOR;$requestLocalizationFormated='';$rawRequestLocalizationLength=$rawRequestLocalization?strlen($rawRequestLocalization):0;$requestLocalizationValidStr=$rawRequestLocalizationLength>0;if($requestLocalizationValidStr){$requestLocalizationFormated=strtolower($rawRequestLocalization);$separatorPos=strpos($rawRequestLocalization,static::LANG_AND_LOCALE_SEPARATOR);if($separatorPos!==FALSE)$requestLocalizationFormated=substr($requestLocalizationFormated,0,$separatorPos+1).strtoupper(substr($requestLocalizationFormated,$separatorPos+1));}if(isset($this->allowedLocalizations[$requestLocalizationFormated])){$this->requestLocalization=explode($langAndLocaleSeparator,$requestLocalizationFormated);$this->requestLocalizationEquivalent=NULL;$this->request->SetLang($this->requestLocalization[0]);$result=TRUE;if(count($this->requestLocalization)>1)$this->request->SetLocale($this->requestLocalization[1]);if($correctRequestPath){$requestPath=$this->request->GetPath(TRUE);$newPath=mb_substr($requestPath,$rawRequestLocalizationLength+1);if($newPath==='')$newPath='/';$this->request->SetPath($newPath);}}else if(isset($this->localizationEquivalents[$requestLocalizationFormated])){$targetLocalization=explode($langAndLocaleSeparator,$this->localizationEquivalents[$requestLocalizationFormated]);if($this->stricModeBySession&&$this->sessionLocalization){$this->requestLocalizationEquivalent=$this->sessionLocalization;$result=TRUE;}else{$this->requestLocalizationEquivalent=$targetLocalization;$result=TRUE;}if($correctRequestPath){$requestPath=$this->request->GetPath(TRUE);$newPath=mb_substr($requestPath,$rawRequestLocalizationLength+1);if($newPath==='')$newPath='/';$this->request->SetPath($newPath);}}return$result;}}}
namespace MvcCore\Route{trait Matching{public function&Matches(\MvcCore\IRequest&$request){$matchedParams=NULL;$pattern=&$this->matchesGetPattern();$subject=$this->matchesGetSubject($request);preg_match_all($pattern,$subject,$matchedValues);if(isset($matchedValues[0])&&count($matchedValues[0])>0){$matchedParams=$this->matchesParseRewriteParams($matchedValues,$this->GetDefaults());if(isset($matchedParams[$this->lastPatternParam]))$matchedParams[$this->lastPatternParam]=rtrim($matchedParams[$this->lastPatternParam],'/');}return$matchedParams;}protected function&matchesGetPattern(){if($this->match===NULL){$this->initMatchAndReverse();}else{$this->initReverse();}return$this->match;}protected function matchesGetSubject(\MvcCore\IRequest&$request){$subject=$this->matchesGetSubjectHostAndBase($request).$request->GetPath(TRUE);if($this->flags[2])$subject.=$request->GetQuery(TRUE,TRUE);return$subject;}protected function matchesGetSubjectHostAndBase(\MvcCore\IRequest&$request){$schemeFlag=$this->flags[0];$basePathDefined=FALSE;$basePath='';$hostFlag=$this->flags[1];if($hostFlag>=static::FLAG_HOST_BASEPATH){$hostFlag-=static::FLAG_HOST_BASEPATH;$basePath=static::PLACEHOLDER_BASEPATH;$basePathDefined=TRUE;}if($schemeFlag){if(!$basePathDefined)$basePath=$request->GetBasePath();$subject=$this->matchesGetSubjectScheme($schemeFlag).$this->matchesGetSubjectHost($request,$hostFlag).$basePath;}else{$subject=$basePathDefined?$basePath:'';}return$subject;}protected function matchesGetSubjectHost(\MvcCore\IRequest&$request,&$hostFlag){$hostPart='';if($hostFlag==static::FLAG_HOST_NO){$hostPart=$request->GetHostName();}else if($hostFlag==static::FLAG_HOST_HOST){$hostPart=static::PLACEHOLDER_HOST;}else if($hostFlag==static::FLAG_HOST_DOMAIN){$hostPart=$request->GetThirdLevelDomain().'.'.static::PLACEHOLDER_DOMAIN;}else if($hostFlag==static::FLAG_HOST_TLD){$hostPart=$request->GetThirdLevelDomain().'.'.$request->GetSecondLevelDomain().'.'.static::PLACEHOLDER_TLD;}else if($hostFlag==static::FLAG_HOST_SLD){$hostPart=$request->GetThirdLevelDomain().'.'.static::PLACEHOLDER_SLD.'.'.$request->GetTopLevelDomain();}else if($hostFlag==static::FLAG_HOST_TLD+static::FLAG_HOST_SLD){$hostPart=$request->GetThirdLevelDomain().'.'.static::PLACEHOLDER_SLD.'.'.static::PLACEHOLDER_TLD;}return$hostPart;}protected function matchesGetSubjectScheme(&$schemeFlag){static$prefixes=NULL;if($prefixes===NULL)$prefixes=[static::FLAG_SCHEME_NO=>'',static::FLAG_SCHEME_ANY=>'//',static::FLAG_SCHEME_HTTP=>'http://',static::FLAG_SCHEME_HTTPS=>'https://',];return$prefixes[$schemeFlag];}protected function&matchesParseRewriteParams(&$matchedValues,&$defaults){$toolClass=\MvcCore\Application::GetInstance()->GetToolClass();$matchedParams=[];if($this->controller!==NULL)$matchedParams['controller']=$toolClass::GetDashedFromPascalCase(str_replace(['_','\\'],'/',$this->controller));if($this->action!==NULL)$matchedParams['action']=$toolClass::GetDashedFromPascalCase($this->action);array_shift($matchedValues);foreach($matchedValues as$key=>$matchedValueArr){if(is_numeric($key))continue;$matchedValue=(string)current($matchedValueArr);if(!isset($defaults[$key]))$defaults[$key]=NULL;$matchedEmptyString=mb_strlen($matchedValue)===0;if($matchedEmptyString)$matchedValue=$defaults[$key];if(isset($matchedParams[$key])&&$matchedEmptyString)continue;$matchedParams[$key]=$matchedValue;}return$matchedParams;}}}
namespace MvcCore\Ext\Form{trait Csrf{public static function ProcessCsrfErrorHandlersQueue(\MvcCore\Ext\Forms\IForm&$form,$errorMsg){$request=$form->GetRequest();foreach(static::$csrfErrorHandlers as$handlersRecord){list($handler,$isClosure)=$handlersRecord;try{if($isClosure){$handler($form,$request,$errorMsg);}else{call_user_func($handler,$form,$request,$errorMsg);}}catch(\Exception$e){$debugClass=$form->GetApplication()->GetDebugClass();$debugClass::Log($e,\MvcCore\IDebug::CRITICAL);}}}public function GetCsrf(){$session=&$this->getSession();list($name,$value)=$session->csrf;return(object)['name'=>$name,'value'=>$value];}public function SubmitCsrfTokens(array&$rawRequestParams=[]){$result=FALSE;$session=&$this->getSession();list($name,$value)=$session->csrf?$session->csrf:[NULL,NULL];if($name!==NULL&&$value!==NULL)if(isset($rawRequestParams[$name])&&$rawRequestParams[$name]===$value)$result=TRUE;if(!$result){$errorMsg=$this->GetDefaultErrorMsg(\MvcCore\Ext\Forms\IError::CSRF);if($this->translate)$errorMsg=call_user_func($this->translator,$errorMsg);$this->AddError($errorMsg);static::ProcessCsrfErrorHandlersQueue($this,$errorMsg);}return$this;}public function SetUpCsrf(){$requestUrl=$this->request->GetBaseUrl().$this->request->GetPath();$randomHash=bin2hex(openssl_random_pseudo_bytes(32));$nowTime=(string)time();$name='____'.sha1($this->id.$requestUrl.'name'.$nowTime.$randomHash);$value=sha1($this->id.$requestUrl.'value'.$nowTime.$randomHash);$session=&$this->getSession();$session->csrf=[$name,$value];return[$name,$value];}}}
namespace MvcCore\Ext\Form{trait Session{public function&ClearSession(){$this->values=[];$this->errors=[];$session=&$this->getSession();$session->values=[];$session->csrf=[];$session->errors=[];return$this;}public function&SaveSession(){$session=&$this->getSession();$session->errors=$this->errors;$session->values=$this->values;return$this;}protected function&getSession(){if(isset(self::$allFormsSessions[$this->id])){$sessionNamespace=&self::$allFormsSessions[$this->id];}else{$sessionClass=self::$sessionClass;$toolClass=self::$toolClass;$formIdPc=$this->id;if(strpos($formIdPc,'-')!==FALSE)$formIdPc=$toolClass::GetPascalCaseFromDashed($formIdPc);if(strpos($formIdPc,'_')!==FALSE)$formIdPc=$toolClass::GetPascalCaseFromUnderscored($formIdPc);$namespaceName='\\MvcCore\\Ext\\Form\\'.ucfirst($formIdPc);$sessionNamespace=$sessionClass::GetNamespace($namespaceName);$sessionNamespace->SetExpirationSeconds($this->sessionExpiration);if(!isset($sessionNamespace->values))$sessionNamespace->values=[];if(!isset($sessionNamespace->csrf))$sessionNamespace->csrf=[];if(!isset($sessionNamespace->errors))$sessionNamespace->errors=[];self::$allFormsSessions[$this->id]=&$sessionNamespace;}return$sessionNamespace;}}}
namespace MvcCore\Ext\Form{trait FieldMethods{public function&GetFields(){return$this->fields;}public function&SetFields($fields=[]){$this->fields=[];foreach($fields as&$field)$this->AddField($field);return$this;}public function&AddFields(){$fields=func_get_args();foreach($fields as&$field)$this->AddField($field);return$this;}public function&AddField(\MvcCore\Ext\Forms\IField$field){if($this->dispatchState<1)$this->Init();$fieldName=$field->GetName();$field->SetForm($this);$this->fields[$fieldName]=&$field;if($field instanceof\MvcCore\Ext\Forms\Fields\ISubmit){$this->submitFields[$fieldName]=&$field;$fieldCustomResultState=$field->GetCustomResultState();if($fieldCustomResultState!==NULL)$this->customResultStates[$fieldName]=$fieldCustomResultState;}return$this;}public function HasField($fieldOrFieldName=NULL){$fieldName=NULL;if($fieldOrFieldName instanceof\MvcCore\Ext\Forms\IField){$fieldName=$fieldOrFieldName->GetName();}else if(is_string($fieldOrFieldName)){$fieldName=$fieldOrFieldName;}return isset($this->fields[$fieldName]);}public function&RemoveField($fieldOrFieldName=NULL){if($this->dispatchState<1)$this->Init();$fieldName=NULL;if($fieldOrFieldName instanceof\MvcCore\Ext\Forms\IField){$fieldName=$fieldOrFieldName->GetName();}else if(is_string($fieldOrFieldName)){$fieldName=$fieldOrFieldName;}if(isset($this->fields[$fieldName]))unset($this->fields[$fieldName]);return$this;}public function&GetField($fieldName=''){$result=NULL;if(isset($this->fields[$fieldName]))$result=&$this->fields[$fieldName];return$result;}public function&GetFieldsByType($fieldType=''){$result=[];foreach($this->fields as&$field){if($field->GetType()==$fieldType)$result[$field->GetName()]=$field;}return$result;}public function&GetFirstFieldByType($fieldType=''){$result=NULL;foreach($this->fields as&$field){if($field->GetType()==$fieldType){$result=&$field;}}return$result;}public function&GetFieldsByPhpClass($fieldClassName='',$directTypesOnly=FALSE){$result=[];foreach($this->fields as&$field){if(is_a($field,$fieldClassName)){if($directTypesOnly)if(is_subclass_of($field,$fieldClassName))continue;$result[$field->GetName()]=$field;}}return$result;}public function&GetFirstFieldByPhpClass($fieldClassName='',$directTypesOnly=FALSE){$result=NULL;foreach($this->fields as&$field){if(is_a($field,$fieldClassName)){if($directTypesOnly)if(is_subclass_of($field,$fieldClassName))continue;$result=$field;break;}}return$result;}}}
namespace MvcCore\Ext\Form{trait ConfigProps{protected$id=NULL;protected$action=NULL;protected$method=\MvcCore\Ext\Forms\IForm::METHOD_POST;protected$enctype=\MvcCore\Ext\Forms\IForm::ENCTYPE_URLENCODED;protected$target=NULL;protected$autoComplete=NULL;protected$noValidate=NULL;protected$acceptCharsets=[];protected$lang=NULL;protected$locale=NULL;protected$cssClasses=[];protected$attributes=[];protected$successUrl=NULL;protected$prevStepUrl=NULL;protected$nextStepUrl=NULL;protected$errorUrl=NULL;protected$result=NULL;protected$translator=NULL;protected$defaultRequired=FALSE;protected$fields=[];protected$values=[];protected$errors=[];protected$sessionExpiration=0;protected$baseTabIndex=0;protected$defaultFieldsRenderMode=\MvcCore\Ext\Forms\IForm::FIELD_RENDER_MODE_NORMAL;protected$errorsRenderMode=\MvcCore\Ext\Forms\IForm::ERROR_RENDER_MODE_ALL_TOGETHER;protected$viewScript=NULL;protected$viewClass='\\MvcCore\\Ext\\Forms\\View';protected$jsSupportFiles=[];protected$cssSupportFiles=[];protected$jsSupportFilesRenderer=NULL;protected$cssSupportFilesRenderer=NULL;protected static$jsSupportFilesRootDir=NULL;protected static$cssSupportFilesRootDir=NULL;protected static$validatorsNamespaces=['\\MvcCore\\Ext\\Forms\\Validators\\'];protected static$autoFocusedFormField=[];}}
namespace MvcCore\Ext\Form{trait GetMethods{public function GetId(){return$this->id;}public function GetAction(){return$this->action;}public function GetMethod(){return$this->method;}public function GetEnctype(){return$this->enctype;}public function GetTarget(){return$this->target;}public function GetAutoComplete(){return$this->autoComplete;}public function GetNoValidate(){return$this->noValidate;}public function GetAcceptCharsets(){return$this->acceptCharsets;}public function GetLang(){return$this->lang;}public function GetLocale(){return$this->locale;}public function&GetCssClasses(){return$this->cssClasses;}public function&GetAttributes(){return$this->attributes;}public function GetSuccessUrl(){return$this->successUrl;}public function GetPrevStepUrl(){return$this->prevStepUrl;}public function GetNextStepUrl(){return$this->nextStepUrl;}public function GetErrorUrl(){return$this->errorUrl;}public function GetResult(){return$this->result;}public function GetTranslator(){return$this->translator;}public function GetTranslate(){return$this->translate;}public function GetDefaultRequired(){return$this->defaultRequired;}public function&GetValues(){return$this->values;}public function&GetErrors(){return$this->errors;}public function GetSessionExpiration(){return$this->sessionExpiration;}public function GetBaseTabIndex(){return$this->baseTabIndex;}public function GetFieldNextAutoTabIndex(){$this->fieldsAutoTabIndex+=1;return$this->fieldsAutoTabIndex;}public function GetDefaultFieldsRenderMode(){return$this->defaultFieldsRenderMode;}public function GetErrorsRenderMode(){return$this->errorsRenderMode;}public function GetViewScript(){return$this->viewScript;}public function GetViewClass(){return$this->viewClass;}public function&GetJsSupportFiles(){return$this->jsSupportFiles;}public function&GetCssSupportFiles(){return$this->cssSupportFiles;}public function GetJsSupportFilesRenderer(){return$this->jsSupportFilesRenderer;}public function GetCssSupportFilesRenderer(){return$this->cssSupportFilesRenderer;}public function GetFormTagRenderingStatus(){return$this->formTagRendergingStatus;}public static function GetJsSupportFilesRootDir(){return static::$jsSupportFilesRootDir;}public static function GetCssSupportFilesRootDir(){return static::$cssSupportFilesRootDir;}public static function GetValidatorsNamespaces(){return static::$validatorsNamespaces;}public static function GetPhpIniSizeLimit($iniVarName){$rawIniValue=ini_get($iniVarName);if($rawIniValue===FALSE){return 0;}else if($rawIniValue===NULL){return NULL;}$unit=strtoupper(substr($rawIniValue,-1));$multiplier=($unit=='M'?1048576:($unit=='K'?1024:($unit=='G'?1073741824:1)));return intval($multiplier*floatval($rawIniValue));}public static function&GetById($formId){if(isset(self::$instances[$formId])){return self::$instances[$formId];}else{throw new\RuntimeException('No form instance exists under form id `'.$formId.'`.'.' Check if searched form instance has been already initialized'.' or if form id has been already set.');}}public static function&GetAutoFocusedFormField($formId,$fieldName){if(self::$autoFocusedFormField){list($currentFormId,$currentFieldName)=self::$autoFocusedFormField;return self::GetById($currentFormId)->GetField($currentFieldName);}return NULL;}}}
namespace MvcCore\Ext\Form{trait Assets{protected function completeSupportingFilesToRender($javascriptFiles=TRUE){$files=[];if($javascriptFiles){$instanceCollection=&$this->jsSupportFiles;$staticCollection=&self::$allJsSupportFiles;}else{$instanceCollection=&$this->cssSupportFiles;$staticCollection=&self::$allCssSupportFiles;}foreach($instanceCollection as$item){$absoluteSupportingFilePath=static::absolutizeSupportingFilePath($item[0],$javascriptFiles);$files[$absoluteSupportingFilePath]=TRUE;}$files=array_keys($files);foreach($files as$key=>$file){if(isset($staticCollection[$file])){unset($files[$key]);}else{$staticCollection[$file]=TRUE;}}return array_values($files);}protected static function absolutizeSupportingFilePath($supportingFileRelPath='',$javascriptFiles=TRUE){$assetsRootDir=$javascriptFiles?static::$jsSupportFilesRootDir:static::$cssSupportFilesRootDir;return str_replace([\MvcCore\Ext\Forms\IForm::FORM_ASSETS_DIR_REPLACEMENT,'\\'],[$assetsRootDir,'/'],$supportingFileRelPath);}protected function renderSupportingFile(&$content,&$absolutePath,$useExternalRenderer=FALSE,&$rendererHandler=NULL){if($useExternalRenderer){call_user_func($rendererHandler,new\Packager_Php_Wrapper_SplFileInfo($absolutePath));}else{$content.=trim(\Packager_Php_Wrapper::FileGetContents($absolutePath),"\n\r;").';';}}}}
namespace MvcCore\Ext\Form{use\MvcCore\Ext\Forms\IError;trait InternalProps{protected$submitFields=[];protected$customResultStates=[];protected$formTagRendergingStatus=FALSE;protected$validators=[];protected$fieldsAutoTabIndex=0;protected$translate=FALSE;protected static$sessionClass=NULL;protected static$toolClass=NULL;protected static$allFormsSessions=[];protected static$allJsSupportFiles=[];protected static$allCssSupportFiles=[];protected static$csrfErrorHandlers=[];protected static$jsBaseSupportFile=\MvcCore\Ext\Forms\IForm::FORM_ASSETS_DIR_REPLACEMENT.'/mvccore-form.js';protected static$defaultErrorMessages=[IError::REQUIRED=>"Field `{0}` is required.",IError::EMPTY_CONTENT=>"Sent data are empty.",IError::MAX_POST_SIZE=>"Sent data exceeds the limit of `{1}` bytes.",IError::CSRF=>"Form hash expired, please submit the form again.",];protected static$instances=[];}}
namespace MvcCore\Ext\Form{trait Rendering{public function __toString(){return$this->Render();}public function Render($controllerDashedName='',$actionDashedName=''){$this->PreDispatch();if($this->viewScript){$result=$this->view->RenderTemplate();}else{$result=$this->view->RenderNaturally();}$this->cleanSessionErrorsAfterRender();return$result;}public function RenderContent(){return$this->view->RenderContent();}public function RenderErrors(){return$this->view->RenderErrors();}public function RenderBegin(){return$this->view->RenderBegin();}public function RenderEnd(){$this->PreDispatch();$this->SetFormTagRenderingStatus(FALSE);$result='</form>'.$this->RenderSupportingJs().$this->RenderSupportingCss();$this->cleanSessionErrorsAfterRender();return$result;}public function RenderSupportingCss(){if(!$this->cssSupportFiles)return'';$cssFiles=$this->completeSupportingFilesToRender(FALSE);if(!$cssFiles)return'';$cssFilesContent='';$useExternalRenderer=is_callable($this->cssSupportFilesRenderer);foreach($cssFiles as$cssFile){$this->renderSupportingFile($cssFilesContent,$cssFile,$useExternalRenderer,$this->cssSupportFilesRenderer);}if($useExternalRenderer)return'';return'<style type="text/css">'.$cssFilesContent.'</style>';}public function RenderSupportingJs(){if(!$this->jsSupportFiles)return'';$jsFiles=$this->completeSupportingFilesToRender(TRUE);if(!$jsFiles)return'';$jsFilesContent='';$fieldsConstructors=[];$useExternalRenderer=is_callable($this->jsSupportFilesRenderer);if(!isset(self::$allJsSupportFiles[static::$jsBaseSupportFile])){$jsBaseSupportFile=$this->absolutizeSupportingFilePath(static::$jsBaseSupportFile,'js');self::$allJsSupportFiles[static::$jsBaseSupportFile]=TRUE;$this->renderSupportingFile($jsFilesContent,$jsBaseSupportFile,$useExternalRenderer,$this->jsSupportFilesRenderer);}foreach($jsFiles as$jsFile)$this->renderSupportingFile($jsFilesContent,$jsFile,$useExternalRenderer,$this->jsSupportFilesRenderer);foreach($this->jsSupportFiles as$jsSupportFile){list(,$jsFullClassName,$constructParams)=$jsSupportFile;$constructParamsEncoded=json_encode($constructParams);$constructParamsEncoded=mb_substr($constructParamsEncoded,1,mb_strlen($constructParamsEncoded)-2);$fieldsConstructors[]='new '.$jsFullClassName.'('.$constructParamsEncoded.')';}$result=$jsFilesContent.'new MvcCoreForm('.'document.getElementById(\''.$this->id.'\'),'.'['.implode(',',$fieldsConstructors).']'.')';$viewDocType=\MvcCore\View::GetDoctype();if($this->response->IsXmlOutput()||strpos($viewDocType,\MvcCore\View::DOCTYPE_XHTML)!==FALSE||strpos($viewDocType,\MvcCore\View::DOCTYPE_XML)!==FALSE)$result='/*<![CDATA[*/'.$result.'/*]]>*/';return'<script type="text/javascript">'.$result.'</script>';}protected function cleanSessionErrorsAfterRender(){$this->errors=[];$session=&$this->getSession();$session->errors=[];return$this;}}}
namespace MvcCore\Ext\Form{trait SetMethods{public function&SetId($id){$this->id=$id;self::$instances[$id]=&$this;return$this;}public function&SetAction($url=NULL){$this->action=$url;return$this;}public function&SetMethod($method=\MvcCore\Ext\Forms\IForm::METHOD_POST){$this->method=strtoupper($method);return$this;}public function&SetEnctype($enctype=\MvcCore\Ext\Forms\IForm::ENCTYPE_URLENCODED){$this->enctype=$enctype;return$this;}public function&SetTarget($target='_self'){$this->target=$target;return$this;}public function&SetAutoComplete($autoComplete=FALSE){if($autoComplete==='on'||$autoComplete===TRUE){$this->autoComplete=TRUE;}else if($autoComplete==='off'||$autoComplete===FALSE){$this->autoComplete=FALSE;}else{$this->autoComplete=NULL;}return$this;}public function&SetNoValidate($noValidate=TRUE){if($noValidate===TRUE){$this->noValidate=TRUE;}else{$this->noValidate=NULL;}return$this;}public function&SetAcceptCharsets($acceptCharsets=[]){$this->acceptCharsets=$acceptCharsets;return$this;}public function&SetLang($lang=NULL){$this->lang=$lang;return$this;}public function&SetLocale($locale=NULL){$this->locale=strtoupper($locale);return$this;}public function&SetCssClasses($cssClasses){$cssClassesArr=gettype($cssClasses)=='array'?$cssClasses:explode(' ',(string)$cssClasses);$this->cssClasses=$cssClassesArr;return$this;}public function&SetAttributes(array$attributes=[]){$this->attributes=$attributes;return$this;}public function&SetSuccessUrl($url=NULL){$this->successUrl=$url;return$this;}public function&SetPrevStepUrl($url=NULL){$this->nextStepUrl=$url;return$this;}public function&SetNextStepUrl($url=NULL){$this->nextStepUrl=$url;return$this;}public function&SetErrorUrl($url=NULL){$this->errorUrl=$url;return$this;}public function&SetResult($result=\MvcCore\Ext\Forms\IForm::RESULT_SUCCESS){$this->result=$result;return$this;}public function&SetTranslator(callable$translator=NULL){if($translator!==NULL&&is_callable($translator))$this->translator=$translator;return$this;}public function&SetDefaultRequired($defaultRequired=TRUE){$this->defaultRequired=$defaultRequired;return$this;}public function&SetValues(array$values=[],$caseInsensitive=FALSE,$clearPreviousSessionValues=FALSE){if($this->dispatchState<1)$this->Init();if($clearPreviousSessionValues)$this->ClearSession();$defaultsKeys=$caseInsensitive?','.implode(',',array_keys($values)).',':'';foreach($this->fields as$fieldName=>&$field){if(isset($values[$fieldName])){$fieldValue=$values[$fieldName];}else if($caseInsensitive){$defaultsKeyPos=stripos($defaultsKeys,','.$fieldName.',');if($defaultsKeyPos===FALSE)continue;$defaultsKey=substr($defaultsKeys,$defaultsKeyPos+1,strlen($fieldName));$fieldValue=$values[$defaultsKey];}else{continue;}$fieldValuesIsStr=is_string($fieldValue);if($fieldValue!==NULL&&(!$fieldValuesIsStr||($fieldValuesIsStr&&$fieldValue!=''))){$field->SetValue($fieldValue);$this->values[$fieldName]=$fieldValue;}}return$this;}public function&SetErrors($errorsCollection=[]){$this->errors=[];foreach($errorsCollection as$errorMsgAndFieldNames){list($errorMsg,$fieldNames)=$errorMsgAndFieldNames;$this->AddError($errorMsg,is_array($fieldNames)?$fieldNames:[$fieldNames]);}return$this;}public function&SetSessionExpiration($seconds=0){$this->sessionExpiration=$seconds;return$this;}public function&SetBaseTabIndex($baseTabIndex=0){$this->baseTabIndex=$baseTabIndex;return$this;}public function&SetDefaultFieldsRenderMode($defaultFieldsRenderMode=\MvcCore\Ext\Forms\IForm::FIELD_RENDER_MODE_NORMAL){$this->defaultFieldsRenderMode=$defaultFieldsRenderMode;return$this;}public function&SetErrorsRenderMode($errorsRenderMode=\MvcCore\Ext\Forms\IForm::ERROR_RENDER_MODE_ALL_TOGETHER){$this->errorsRenderMode=$errorsRenderMode;return$this;}public function&SetViewScript($boolOrViewScriptPath=NULL){$this->viewScript=$boolOrViewScriptPath;return$this;}public function&SetViewClass($viewClass='\\MvcCore\\Ext\\Forms\\View'){$this->viewClass=$viewClass;return$this;}public function&SetJsSupportFiles(array$jsRelPathsClassNamesAndParams=[]){$this->jsSupportFiles=[];foreach($jsRelPathsClassNamesAndParams as$jsRelPathClassNameAndParams){list($jsRelativePath,$jsClassName,$constructorParams)=$jsRelPathClassNameAndParams;$this->AddJsSupportFile($jsRelativePath,$jsClassName,$constructorParams);}return$this;}public function&SetCssSupportFiles(array$cssRelativePaths=[]){$this->cssSupportFiles=[];foreach($cssRelativePaths as$cssRelativePath)$this->AddCssSupportFile($cssRelativePath);return$this;}public function&SetJsSupportFilesRenderer(callable$jsSupportFilesRenderer){$this->jsSupportFilesRenderer=$jsSupportFilesRenderer;return$this;}public function&SetCssSupportFilesRenderer(callable$cssSupportFilesRenderer){$this->cssSupportFilesRenderer=$cssSupportFilesRenderer;return$this;}public function SetFormTagRenderingStatus($formTagRenderingStatus=TRUE){$this->formTagRendergingStatus=$formTagRenderingStatus;return$this;}public static function SetJsSupportFilesRootDir($jsSupportFilesRootDir){if($jsSupportFilesRootDir)static::$jsSupportFilesRootDir=$jsSupportFilesRootDir;return static::$jsSupportFilesRootDir;}public static function SetCssSupportFilesRootDir($cssSupportFilesRootDir){if($cssSupportFilesRootDir)static::$cssSupportFilesRootDir=$cssSupportFilesRootDir;return static::$cssSupportFilesRootDir;}public static function&SetValidatorsNamespaces(array$validatorsNamespaces=[]){static::$validatorsNamespaces=[];return static::AddValidatorsNamespaces($validatorsNamespaces);}public static function SetAutoFocusedFormField($formId=NULL,$fieldName=NULL,$duplicateBehaviour=\MvcCore\Ext\Forms\IField::AUTOFOCUS_DUPLICITY_EXCEPTION){if(self::$autoFocusedFormField){if($formId===NULL&&$fieldName===NULL){list($oldFormId,$oldFieldName)=self::$autoFocusedFormField;self::GetById($oldFormId)->GetField($oldFieldName)->SetAutoFocus(FALSE);self::$autoFocusedFormField=[];}else if($duplicateBehaviour===\MvcCore\Ext\Forms\IField::AUTOFOCUS_DUPLICITY_EXCEPTION){list($currentFormId,$currentFieldName)=self::$autoFocusedFormField;throw new\RuntimeException('Another form field has already defined `autofocus` attribute.'.' Form id: `'.$currentFormId.'`, field name: `'.$currentFieldName.'`.');}else if($duplicateBehaviour===\MvcCore\Ext\Forms\IField::AUTOFOCUS_DUPLICITY_QUIETLY_SET_NEW){self::GetById($formId)->GetField($fieldName)->SetAutoFocus(TRUE,\MvcCore\Ext\Forms\IField::AUTOFOCUS_DUPLICITY_QUIETLY_SET_NEW);}else if($duplicateBehaviour===\MvcCore\Ext\Forms\IField::AUTOFOCUS_DUPLICITY_UNSET_OLD_SET_NEW){list($oldFormId,$oldFieldName)=self::$autoFocusedFormField;self::GetById($oldFormId)->GetField($oldFieldName)->SetAutoFocus(FALSE);self::GetById($formId)->GetField($fieldName)->SetAutoFocus(TRUE,\MvcCore\Ext\Forms\IField::AUTOFOCUS_DUPLICITY_QUIETLY_SET_NEW);}}else{self::$autoFocusedFormField=[$formId,$fieldName];self::GetById($formId)->GetField($fieldName)->SetAutoFocus(TRUE,\MvcCore\Ext\Forms\IField::AUTOFOCUS_DUPLICITY_QUIETLY_SET_NEW);}return TRUE;}}}
namespace MvcCore\Ext\Form{trait Submitting{public function Submit(array&$rawRequestParams=[]){if($this->dispatchState<1)$this->Init();if(!$rawRequestParams)$rawRequestParams=$this->request->GetParams('.*');$this->SubmitSetStartResultState($rawRequestParams)->SubmitValidateMaxPostSizeIfNecessary()->SubmitCsrfTokens($rawRequestParams)->SubmitAllFields($rawRequestParams)->SaveSession();return[$this->result,$this->values,$this->errors,];}public function SubmitSetStartResultState(array&$rawRequestParams=[]){if(!$this->customResultStates){$this->result=\MvcCore\Ext\Forms\IForm::RESULT_SUCCESS;}else{$customResultStateDefined=FALSE;foreach($this->customResultStates as$fieldName=>$customResultState){if(isset($rawRequestParams[$fieldName])){$customResultStateDefined=TRUE;$this->result=$customResultState;break;}}if(!$customResultStateDefined)$this->result=\MvcCore\Ext\Forms\IForm::RESULT_SUCCESS;}return$this;}public function&SubmitValidateMaxPostSizeIfNecessary(){if($this->method!=\MvcCore\Ext\Forms\IForm::METHOD_POST)return$this;$contentLength=$this->request->GetContentLength();if($contentLength===NULL)$this->AddError($this->GetDefaultErrorMsg(\MvcCore\Ext\Forms\IError::EMPTY_CONTENT));$maxSize=static::GetPhpIniSizeLimit('post_max_size');if($maxSize>0&&$maxSize<$contentLength){$viewClass=$this->viewClass;$this->AddError($viewClass::Format($this->GetDefaultErrorMsg(\MvcCore\Ext\Forms\IError::MAX_POST_SIZE),[$maxSize]));}return$this;}public function SubmitAllFields(array&$rawRequestParams=[]){$rawRequestParams=$this->submitAllFieldsEncodeAcceptCharsets($rawRequestParams);foreach($this->fields as$fieldName=>&$field){if($field instanceof\MvcCore\Ext\Forms\Fields\ISubmit)continue;$safeValue=$field->Submit($rawRequestParams);if($safeValue!==NULL){$field->SetValue($safeValue);$this->values[$fieldName]=$safeValue;}}return$this;}public function SubmittedRedirect(){if($this->dispatchState<1)$this->Init();$urlPropertyName='';if($this->result===\MvcCore\Ext\Forms\IForm::RESULT_ERRORS){$urlPropertyName='errorUrl';}else if($this->result===\MvcCore\Ext\Forms\IForm::RESULT_SUCCESS){$urlPropertyName='successUrl';}else if($this->result===\MvcCore\Ext\Forms\IForm::RESULT_PREV_PAGE){$urlPropertyName='prevStepUrl';}else if($this->result===\MvcCore\Ext\Forms\IForm::RESULT_NEXT_PAGE){$urlPropertyName='nextStepUrl';}$url=isset($this->{$urlPropertyName})?$this->{$urlPropertyName}:NULL;$errorMsg=$url?'':'Specify `'.$urlPropertyName.'` property.';if($this->result)$this->values=[];$this->SaveSession();if(!$url&&$this->result>-1&&$this->result<4)throw new\RuntimeException('['.__CLASS__.'] No url specified to redirect. '.$errorMsg);if($url)self::Redirect($url,\MvcCore\IResponse::SEE_OTHER);}public function&GetValidator($validatorName){if(isset($this->validators[$validatorName])){$validator=&$this->validators[$validatorName];}else{$validator=NULL;$toolClass=self::$toolClass;foreach(static::$validatorsNamespaces as$validatorsNamespace){$validatorFullClassName=$validatorsNamespace.$validatorName;if(class_exists($validatorFullClassName)&&$toolClass::CheckClassInterface($validatorFullClassName,'MvcCore\\Ext\\Forms\\IValidator',TRUE,TRUE)){$validator=$validatorFullClassName::CreateInstance()->SetForm($this);break;}}if($validator===NULL)$this->throwNewInvalidArgumentException('Validator `'.$validatorName.'` not found in any namespace: `'.implode('`, `',static::$validatorsNamespaces).'`.');$this->validators[$validatorName]=&$validator;}return$validator;}public function GetDefaultErrorMsg($index){return static::$defaultErrorMessages[$index];}protected function&submitAllFieldsEncodeAcceptCharsets(array&$rawRequestParams=[]){if(count($this->acceptCharsets)===0)return$rawRequestParams;$toEncoding=strtoupper($this->GetResponse()->GetEncoding());if(!static::$toolClass)static::$toolClass=\MvcCore\Application::GetInstance()->GetToolClass();$bestCharset=NULL;$translatedStats=[];$translatedRawRequestParams=[];foreach($this->acceptCharsets as$acceptCharset){if($acceptCharset==='UNKNOWN')$acceptCharset=$toEncoding;list($stats,$total,$rawTranslatedValues)=$this->encodeAcceptCharsetsArrayOrString($rawRequestParams,$acceptCharset,$toEncoding);$translatedRawRequestParams[$acceptCharset]=$rawTranslatedValues;if($total===$stats){$bestCharset=$acceptCharset;break;}else{$translatedStats[$acceptCharset]=$stats;}}if(!$bestCharset){asort($translatedStats);$translatedStats=array_reverse($translatedStats);reset($translatedStats);$firstCharset=current(array_keys($translatedStats));$bestScore=$translatedStats[$firstCharset];foreach($this->acceptCharsets as$acceptCharset){if($acceptCharset==='UNKNOWN')$acceptCharset=$toEncoding;if($translatedStats[$acceptCharset]===$bestScore){$bestCharset=$acceptCharset;break;}}}return$translatedRawRequestParams[$bestCharset];}protected function encodeAcceptCharsetsArrayOrString(&$rawValue,$fromEncoding,$toEncoding){if(gettype($rawValue)=='array'){$stats=0;$totalCount=0;$rawTranslatedValues=[];foreach($rawValue as$rawKey=>&$rawValueItem){if(gettype($rawValueItem)=='array'){list($rawItemStats,$rawItemsTotal,$rawTranslatedValue)=$this->encodeAcceptCharsetsArrayOrString($rawValueItem,$fromEncoding,$toEncoding);}else{list($rawItemStats,$rawItemsTotal,$rawTranslatedValue)=$this->encodeAcceptCharsetsString($rawValueItem,$fromEncoding,$toEncoding);}$totalCount+=$rawItemsTotal;if($rawItemStats){$stats+=$rawItemStats;$rawTranslatedValues[$rawKey]=$rawTranslatedValue;}else{$rawTranslatedValues[$rawKey]=$rawValue;}}return[$stats,$totalCount,$rawTranslatedValues];}else{return$this->encodeAcceptCharsetsString($rawValue,$fromEncoding,$toEncoding);}}protected function encodeAcceptCharsetsString(&$rawValue,$fromEncoding,$toEncoding){$errors=[];$toolClass=static::$toolClass;$translatedValue=$toolClass::Invoke('iconv',[$fromEncoding,$toEncoding.'//TRANSLIT',$rawValue],function()use(&$errors){$errors[]=func_get_args();});if($errors||$translatedValue===FALSE){return[0,1,NULL];}else{return[1,1,$translatedValue];}}}}
namespace MvcCore\Ext\Form{trait AddMethods{public function AddAcceptCharset($charset){$this->acceptCharsets[]=$charset;return$this;}public function&AddCssClasses($cssClasses){$cssClassesArr=gettype($cssClasses)=='array'?$cssClasses:explode(' ',(string)$cssClasses);$this->cssClasses=array_merge($this->cssClasses,$cssClassesArr);return$this;}public function AddError($errorMsg,$fieldNames=NULL){$errorMsgUtf8=iconv(mb_detect_encoding($errorMsg,mb_detect_order(),TRUE),"UTF-8",$errorMsg);$fieldNamesArr=$fieldNames===NULL?[]:(gettype($fieldNames)=='array'?$fieldNames:[$fieldNames]);$newErrorRec=[strip_tags($errorMsgUtf8),$fieldNamesArr];if($fieldNamesArr){foreach($fieldNamesArr as$fieldName){if(isset($this->fields[$fieldName])){$field=&$this->fields[$fieldName];$field->AddError($errorMsgUtf8)->AddCssClasses('error');if($field instanceof\MvcCore\Ext\Forms\IFieldsGroup)$field->AddGroupLabelCssClasses('error');}}}$this->errors[]=$newErrorRec;$this->result=\MvcCore\Ext\Forms\IForm::RESULT_ERRORS;return$this;}public function&AddJsSupportFile($jsRelativePath='/fields/custom-type.js',$jsClassName='MvcCoreForm.FieldType',$constructorParams=[]){$this->jsSupportFiles[]=[$jsRelativePath,$jsClassName,$constructorParams];return$this;}public function&AddCssSupportFile($cssRelativePath='/fields/custom-type.css'){$this->cssSupportFiles[]=[$cssRelativePath];return$this;}public static function AddCsrfErrorHandler(callable$handler,$priorityIndex=NULL){if(!is_callable($handler))throw new\InvalidArgumentException('['.__CLASS__.'] Given argument is not callable: `'.serialize($handler).'`.');$reflection=new\ReflectionFunction($handler);$isClosure=$reflection->isClosure();if($priorityIndex===NULL){static::$csrfErrorHandlers[]=[$handler,$isClosure];}else{if(isset(static::$csrfErrorHandlers[$priorityIndex])){array_splice(static::$csrfErrorHandlers,$priorityIndex,0,[$handler,$isClosure]);}else{static::$csrfErrorHandlers[$priorityIndex]=[$handler,$isClosure];}}return count(static::$csrfErrorHandlers);}public static function AddValidatorsNamespaces(){$validatorsNamespaces=func_get_args();foreach($validatorsNamespaces as$validatorsNamespace)static::$validatorsNamespaces[]='\\'.trim($validatorsNamespace,'\\').'\\';return count(static::$validatorsNamespaces);}}}
namespace MvcCore\View{trait MagicMethods{public function __set($name,$value){return$this->__protected['store'][$name]=&$value;}public function __get($name){$store=&$this->__protected['store'];if(array_key_exists($name,$store))return$store[$name];if($controllerType=$this->getReflectionClass('controller')){if($controllerType->hasProperty($name)){$property=$controllerType->getProperty($name);if(!$property->isStatic()){if(!$property->isPublic())$property->setAccessible(TRUE);$value=$property->getValue($this->controller);$store[$name]=&$value;return$value;}}}return NULL;}public function __isset($name){$store=&$this->__protected['store'];if(array_key_exists($name,$store))return TRUE;if($controllerType=$this->getReflectionClass('controller')){if($controllerType->hasProperty($name)){$property=$controllerType->getProperty($name);if(!$property->isStatic()){if(!$property->isPublic())$property->setAccessible(TRUE);$value=$property->getValue($this->controller);$store[$name]=&$value;return TRUE;}}}return FALSE;}public function __unset($name){$store=&$this->__protected['store'];if(isset($store[$name]))unset($store[$name]);}protected function&getReflectionClass($currentContextObjectName){$privates=&$this->__protected;$reflectionTypes=&$privates['reflectionTypes'];if(isset($reflectionTypes[$currentContextObjectName])){return$reflectionTypes[$currentContextObjectName];}if($privates['reflectionName']===$currentContextObjectName){$privates['reflectionName']=NULL;return NULL;}$privates['reflectionName']=$currentContextObjectName;$currentContextObject=$this->{$currentContextObjectName};if($currentContextObject!==NULL){$reflectionType=new\ReflectionClass($currentContextObject);$reflectionTypes[$currentContextObjectName]=&$reflectionType;return$reflectionType;}$privates['reflectionName']=NULL;return NULL;}}}
namespace MvcCore\Ext\Routers\MediaAndLocalization{trait Routing{public function Route(){$this->internalRequest=$this->request->IsInternalRequest();list($requestCtrlName,$requestActionName)=$this->routeDetectStrategy();if(!$this->internalRequest){if(!$this->redirectToProperTrailingSlashIfNecessary())return FALSE;$this->prepare();$this->prepareMedia();$this->prepareLocalization();if(!$this->preRouteMedia())return FALSE;if(!$this->preRouteLocalization())return FALSE;}if($this->routeByQueryString){$this->queryStringRouting($requestCtrlName,$requestActionName);}else{$this->rewriteRouting($requestCtrlName,$requestActionName);if($this->currentRoute===NULL&&!$this->requestLocalization){$this->allowNonLocalizedRoutes=FALSE;if(!$this->checkLocalizationWithUrlAndRedirectIfNecessary())return FALSE;}}if(!$this->routeProcessRouteRedirectionIfAny())return FALSE;return$this->routeSetUpDefaultForHomeIfNoMatch()->routeSetUpSelfRouteNameIfAny()->canonicalRedirectIfAny();}}}
namespace MvcCore\Ext\Routers\MediaAndLocalization{trait RedirectSections{protected function redirectToVersionSections($systemParams){$request=&$this->request;$urlBaseSection=$request->GetBaseUrl();$urlPathWithQuerySection=$request->GetPath(TRUE);$targetMediaSiteVersion=NULL;$targetLocalization=NULL;$mediaVersionParamName=\MvcCore\Ext\Routers\IMedia::URL_PARAM_MEDIA_VERSION;$localizationParamName=\MvcCore\Ext\Routers\ILocalization::URL_PARAM_LOCALIZATION;$this->redirectStatusCode=\MvcCore\IResponse::MOVED_PERMANENTLY;if(isset($systemParams[$mediaVersionParamName]))$targetMediaSiteVersion=$systemParams[$mediaVersionParamName];if(isset($systemParams[$localizationParamName]))$targetLocalization=$systemParams[$localizationParamName];if($targetMediaSiteVersion===NULL){$this->redirectStatusCode=\MvcCore\IResponse::MOVED_PERMANENTLY;$targetMediaSiteVersion=$this->requestMediaSiteVersion!==NULL?$this->requestMediaSiteVersion:($this->sessionMediaSiteVersion!==NULL?$this->sessionMediaSiteVersion:static::MEDIA_VERSION_FULL);}if($targetLocalization===NULL){$this->redirectStatusCode=\MvcCore\IResponse::SEE_OTHER;$targetLocalization=$this->requestLocalization!==NULL?$this->requestLocalization:($this->sessionLocalization!==NULL?$this->sessionLocalization:$this->defaultLocalization);}$targetMediaUrlValue=$this->redirectMediaGetUrlValueAndUnsetGet($targetMediaSiteVersion);$targetLocalizationUrlValue=$this->redirectLocalizationGetUrlValueAndUnsetGet($targetLocalization);$urlPathWithQueryIsHome=NULL;if($this->anyRoutesConfigured){if($targetMediaUrlValue===NULL){unset($systemParams[$mediaVersionParamName]);}else{$systemParams[$mediaVersionParamName]=$targetMediaUrlValue;}if($targetLocalizationUrlValue===NULL){unset($systemParams[$localizationParamName]);}else{$systemParams[$localizationParamName]=$targetLocalizationUrlValue;if($targetLocalizationUrlValue===$this->defaultLocalizationStr){$urlPathWithQueryIsHome=$this->urlIsHomePath($urlPathWithQuerySection);if($urlPathWithQueryIsHome)unset($systemParams[$localizationParamName]);}}$this->redirectAddAllRemainingInGlobalGet($urlPathWithQuerySection);}else{$this->removeDefaultCtrlActionFromGlobalGet();if($this->requestGlobalGet)$urlPathWithQuerySection.=$request->GetScriptName();$this->redirectAddAllRemainingInGlobalGet($urlPathWithQuerySection);}return[$urlBaseSection,$urlPathWithQuerySection,$systemParams,$urlPathWithQueryIsHome];}}}
namespace MvcCore\Ext\Routers\MediaAndLocalization{trait UrlByRouteSections{protected function urlByRouteSections(\MvcCore\IRoute&$route,array&$params=[],$urlParamRouteName=NULL){$defaultParams=array_merge([],$this->GetDefaultParams()?:[]);if($urlParamRouteName=='self')$params=array_merge($this->requestedParams?:[],$params);$mediaVersionUrlParam=static::URL_PARAM_MEDIA_VERSION;if(isset($params[$mediaVersionUrlParam])){$mediaSiteVersion=$params[$mediaVersionUrlParam];unset($params[$mediaVersionUrlParam]);}else if(isset($defaultParams[$mediaVersionUrlParam])){$mediaSiteVersion=$defaultParams[$mediaVersionUrlParam];unset($defaultParams[$mediaVersionUrlParam]);}else{$mediaSiteVersion=$this->mediaSiteVersion;}$routeMethod=$route->GetMethod();if($this->routeGetRequestsOnly&&$routeMethod!==NULL&&$routeMethod!==\MvcCore\IRequest::METHOD_GET){$mediaSiteUrlValue=NULL;}else if(isset($this->allowedSiteKeysAndUrlValues[$mediaSiteVersion])){$mediaSiteUrlValue=$this->allowedSiteKeysAndUrlValues[$mediaSiteVersion];}else{$mediaSiteUrlValue=NULL;trigger_error('['.__CLASS__.'] Not allowed media site version used to generate url: `'.$mediaSiteVersion.'`. Allowed values: `'.implode('`, `',array_keys($this->allowedSiteKeysAndUrlValues)).'`.',E_USER_ERROR);}if($this->stricModeBySession&&$mediaSiteVersion!==NULL&&$mediaSiteVersion!==$this->mediaSiteVersion)$params[static::URL_PARAM_SWITCH_MEDIA_VERSION]=$mediaSiteVersion;$localizedRoute=$route instanceof\MvcCore\Ext\Routers\Localizations\Route;$localizationParamName=static::URL_PARAM_LOCALIZATION;if(isset($params[$localizationParamName])){$localizationStr=$params[$localizationParamName];}else{$localizationStr=implode(static::LANG_AND_LOCALE_SEPARATOR,$this->localization);if($localizedRoute)$params[$localizationParamName]=$localizationStr;}if($this->routeGetRequestsOnly&&$routeMethod!==NULL&&$routeMethod!==\MvcCore\IRequest::METHOD_GET){$localizationStr=NULL;}else if(!isset($this->allowedLocalizations[$localizationStr])){if(isset($this->localizationEquivalents[$localizationStr]))$localizationStr=$this->localizationEquivalents[$localizationStr];if(!isset($this->allowedLocalizations[$localizationStr])){$localizationStr=NULL;trigger_error('['.__CLASS__.'] Not allowed localization used to generate url: `'.$localizationStr.'`. Allowed values: `'.implode('`, `',array_keys($this->allowedLocalizations)).'`.',E_USER_ERROR);}}if($this->stricModeBySession&&$localizationStr!==implode(static::LANG_AND_LOCALE_SEPARATOR,$this->localization))$params[static::URL_PARAM_SWITCH_LOCALIZATION]=$localizationStr;list($urlBaseSection,$urlPathWithQuerySection)=$route->Url($this->request,$params,$defaultParams,$this->getQueryStringParamsSepatator());$systemParams=[];if($mediaSiteUrlValue!==NULL)$systemParams[$mediaVersionUrlParam]=$mediaSiteUrlValue;if($localizationStr!==NULL)$systemParams[$localizationParamName]=$localizationStr;return[$urlBaseSection,$urlPathWithQuerySection,$systemParams];}}}
namespace MvcCore\Ext\Auths\Basics\Form{trait Base{protected$auth=NULL;protected$successUrlField=NULL;protected$errorUrlField=NULL;protected$sourceUrlField=NULL;protected function initAuthFormPropsAndHiddenControls(){$this->auth=\MvcCore\Ext\Auths\Basic::GetInstance();$this->successUrlField=new\MvcCore\Ext\Forms\Fields\Hidden(['name'=>'successUrl','value'=>$this->auth->GetSignedInUrl(),'validators'=>['Url'],]);$this->errorUrlField=new\MvcCore\Ext\Forms\Fields\Hidden(['name'=>'errorUrl','value'=>$this->auth->GetSignErrorUrl(),'validators'=>['Url'],]);$this->sourceUrlField=new\MvcCore\Ext\Forms\Fields\Hidden(['name'=>'sourceUrl','validators'=>['Url'],]);$this->AddFields($this->successUrlField,$this->errorUrlField,$this->sourceUrlField);return$this;}public function PreDispatch(){if($this->dispatchState>1)return$this;parent::PreDispatch();$successUrlValue=$this->successUrlField->GetValue();if($successUrlValue){$this->auth->SetSignedInUrl(rawurlencode($successUrlValue));$this->successUrlField->SetValue(rawurlencode($successUrlValue));}else{$successUrlValue=$this->auth->GetSignedInUrl();if(!$successUrlValue)$successUrlValue=htmlspecialchars($this->request->GetFullUrl());$this->successUrlField->SetValue(rawurlencode($successUrlValue));}$errorUrlValue=$this->errorUrlField->GetValue();if($errorUrlValue){$this->auth->SetSignErrorUrl(rawurlencode($errorUrlValue));$this->errorUrlField->SetValue(rawurlencode($errorUrlValue));}else{$errorUrlValue=$this->auth->GetSignErrorUrl();if(!$errorUrlValue)$errorUrlValue=htmlspecialchars($this->request->GetFullUrl());$this->errorUrlField->SetValue(rawurlencode($errorUrlValue));}$sourceUrl=$this->request->GetParam('sourceUrl','.*','','string');$sourceUrl=filter_var(rawurldecode(htmlspecialchars($sourceUrl)),FILTER_VALIDATE_URL);if($sourceUrl)$this->sourceUrlField->SetValue(rawurlencode($sourceUrl));return$this;}}}
namespace MvcCore\View{trait ViewHelpers{public static function GetHelpersDir(){return static::$helpersDir;}public static function SetHelpersDir($helpersDir='Helpers'){return static::$helpersDir=$helpersDir;}public static function AddHelpersNamespaces(){if(!static::$helpersNamespaces)self::_initHelpersNamespaces();foreach(func_get_args()as$arg)static::$helpersNamespaces[]='\\'.trim($arg,'\\').'\\';}public static function SetHelpersNamespaces(){static::$helpersNamespaces=[];foreach(func_get_args()as$arg)static::$helpersNamespaces[]='\\'.trim($arg,'\\').'\\';}public function __call($method,$arguments){$result='';$instance=&$this->GetHelper($method);if(method_exists($instance,$method)){$result=call_user_func_array([$instance,$method],$arguments);}else{throw new\InvalidArgumentException("[".__CLASS__."] View helper instance '".get_class($instance)."' has no method '$method'.");}return$result;}public function&GetHelper($helperName){$setUpViewAgain=FALSE;$implementsIHelper=FALSE;$instance=NULL;$helpers=&$this->__protected['helpers'];if(isset($helpers[$helperName])){$instance=&$helpers[$helperName];}else if(isset(self::$_globalHelpers[$helperName])){$globalHelpersRecord=&self::$_globalHelpers[$helperName];$instance=&$globalHelpersRecord[0];$implementsIHelper=$globalHelpersRecord[1];$setUpViewAgain=TRUE;}else{$helperFound=FALSE;if(self::$_toolClass===NULL)self::$_toolClass=\MvcCore\Application::GetInstance()->GetToolClass();$toolClass=self::$_toolClass;$helpersInterface=self::HELPERS_INTERFACE_CLASS_NAME;if(!static::$helpersNamespaces)self::_initHelpersNamespaces();foreach(static::$helpersNamespaces as$helperClassBase){$className=$helperClassBase.ucfirst($helperName).'Helper';if(class_exists($className)){$helperFound=TRUE;$setUpViewAgain=TRUE;if($toolClass::CheckClassInterface($className,$helpersInterface,TRUE,FALSE)){$implementsIHelper=TRUE;$instance=&$className::GetInstance();}else{$instance=new$className();}self::$_globalHelpers[$helperName]=[$instance,$implementsIHelper];break;}}if(!$helperFound)throw new\InvalidArgumentException("[".__CLASS__."] View helper method '$helperName' is not possible to handle by any configured view helper "." (View helper namespaces: '".implode("', '",static::$helpersNamespaces)."').");}if($setUpViewAgain){if($implementsIHelper)$instance->SetView($this);$helpers[$helperName]=&$instance;}return$instance;}public function&SetHelper($helperName,&$instance,$forAllTemplates=TRUE){$implementsIHelper=FALSE;if($forAllTemplates){if(self::$_toolClass===NULL)self::$_toolClass=\MvcCore\Application::GetInstance()->GetToolClass();$toolClass=self::$_toolClass;$helpersInterface=self::HELPERS_INTERFACE_CLASS_NAME;$className=get_class($instance);$implementsIHelper=$toolClass::CheckClassInterface($className,$helpersInterface,FALSE,FALSE);self::$_globalHelpers[$helperName]=[&$instance,$implementsIHelper];}$this->__protected['helpers'][$helperName]=&$instance;if($implementsIHelper)$instance->SetView($this);return$this;}}}
namespace MvcCore\Ext\Auths\Basics{interface IDatabaseUser{public static function SetUsersTableStructure($tableName=NULL,$columnNames=NULL);}}
namespace MvcCore\Ext\Auths\Basics{interface IForm{const HTML_ID_SIGNIN='authentication_signin';const HTML_ID_SIGNOUT='authentication_signout';public function&SetId($id);public function&SetAction($url=NULL);public function&SetMethod($method=\MvcCore\Ext\Forms\IForm::METHOD_POST);public function&SetCssClasses($cssClasses);public function&SetSuccessUrl($url=NULL);public function&SetErrorUrl($url=NULL);public function&SetTranslator(callable$translator=NULL);public function Init();public function&AddFields();public function&AddField(\MvcCore\Ext\Forms\IField$field);public function Submit(array&$rawRequestParams=[]);public function&ClearSession();public function SubmittedRedirect();public function __toString();public function Render($controllerDashedName='',$actionDashedName='');}}
namespace MvcCore\View{trait DirectoryMethods{public function GetCurrentViewFullPath(){$result=NULL;$renderedFullPaths=&$this->__protected['renderedFullPaths'];$count=count($renderedFullPaths);if($count>0)$result=$renderedFullPaths[$count-1];return$result;}public function GetCurrentViewDirectory(){$result=$this->GetCurrentViewFullPath();$lastSlashPos=mb_strrpos($result,'/');if($lastSlashPos!==FALSE){$result=mb_substr($result,0,$lastSlashPos);}return$result;}public function GetParentViewFullPath(){$result=NULL;$renderedFullPaths=&$this->__protected['renderedFullPaths'];$count=count($renderedFullPaths);if($count>1){$result=$renderedFullPaths[$count-2];}else{$controller=$this->controller;$parentCtrl=$controller->GetParentController();if($parentCtrl!==NULL){while(TRUE){$parentCtrlView=$parentCtrl->GetView();if($parentCtrlView===NULL){$parentCtrl->GetParentController();if($parentCtrl===NULL)break;}$result=$parentCtrlView->GetCurrentViewFullPath();if($result!==NULL)break;}}if($result===NULL){$relativePath=$this->_correctRelativePath(static::$layoutsDir,$controller->GetLayout());return static::GetViewScriptFullPath(static::$layoutsDir,$relativePath);}}return$result;}public function GetParentViewDirectory(){$result=$this->GetParentViewFullPath();$lastSlashPos=mb_strrpos($result,'/');if($lastSlashPos!==FALSE){$result=mb_substr($result,0,$lastSlashPos);}return$result;}}}
namespace MvcCore\Ext\Forms\Field\Props{trait Options{protected$options=[];public function&SetOptions(array$options=[]){$this->options=&$options;return$this;}public function&AddOptions(array$options=[]){$this->options=array_merge($this->options,$options);return$this;}public function&GetOptions(){return$this->options;}}}
namespace MvcCore\View{trait GettersSetters{public static function CreateInstance(){return new static();}public static function GetExtension(){return static::$extension;}public static function SetExtension($extension='.phtml'){return static::$extension=$extension;}public static function GetDoctype(){return static::$doctype;}public static function SetDoctype($doctype=\MvcCore\IView::DOCTYPE_HTML5){return static::$doctype=$doctype;}public static function GetLayoutsDir(){return static::$layoutsDir;}public static function SetLayoutsDir($layoutsDir='Layouts'){return static::$layoutsDir=$layoutsDir;}public static function GetScriptsDir(){return static::$scriptsDir;}public static function SetScriptsDir($scriptsDir='Scripts'){return static::$scriptsDir=$scriptsDir;}public function&SetController(\MvcCore\IController&$controller){$this->controller=$controller;return$this;}public function&GetController(){return$this->controller;}}}
namespace MvcCore{interface IView{const DOCTYPE_HTML4='HTML4';const DOCTYPE_XHTML='XHTML';const DOCTYPE_HTML5='HTML5';const DOCTYPE_XML='XML';const HELPERS_INTERFACE_CLASS_NAME='MvcCore\\Ext\\Views\\Helpers\\IHelper';public static function CreateInstance();public static function GetExtension();public static function SetExtension($extension='.phtml');public static function GetDoctype();public static function SetDoctype($doctype=\MvcCore\IView::DOCTYPE_HTML5);public static function GetLayoutsDir();public static function SetLayoutsDir($layoutsDir='Layouts');public static function GetScriptsDir();public static function SetScriptsDir($scriptsDir='Scripts');public static function GetHelpersDir();public static function SetHelpersDir($helpersDir='Helpers');public static function AddHelpersNamespaces();public static function SetHelpersNamespaces();public static function GetViewScriptFullPath($typePath='',$corectedRelativePath='');public function&SetController(\MvcCore\IController&$controller);public function&GetController();public function&SetUpStore(\MvcCore\IView&$view,$overwriteExistingKeys=TRUE);public function&GetContent();public function GetCurrentViewFullPath();public function GetCurrentViewDirectory();public function GetParentViewFullPath();public function GetParentViewDirectory();public function&RenderScript($relativePath='');public function&RenderLayout($relativePath='');public function&RenderLayoutAndContent($relativePath='',&$content='');public function&Render($typePath='',$relativePath='');public function Evaluate($content='');public function Url($controllerActionOrRouteName='Index:Index',array$params=[]);public function AssetUrl($path='');public function&GetHelper($helperName);public function&SetHelper($helperName,&$instance,$forAllTemplates=TRUE);public function __set($name,$value);public function __get($name);public function __isset($name);public function __unset($name);public function __call($method,$arguments);}}
namespace MvcCore\View{trait UrlHelpers{public function Url($controllerActionOrRouteName='Index:Index',array$params=[]){return$this->controller->GetRouter()->Url($controllerActionOrRouteName,$params);}public function AssetUrl($path=''){return$this->controller->AssetUrl($path);}}}
namespace MvcCore\View{trait Props{protected$controller=NULL;protected$__protected=['content'=>'','store'=>[],'helpers'=>[],'renderedFullPaths'=>[],'reflectionTypes'=>[],'reflectionName'=>NULL,];protected static$extension='.phtml';protected static$doctype=self::DOCTYPE_HTML5;protected static$layoutsDir='Layouts';protected static$scriptsDir='Scripts';protected static$helpersDir='Helpers';protected static$helpersNamespaces=[];private static$_globalHelpers=[];private static$_viewScriptsFullPathBase=NULL;private static$_toolClass=NULL;}}
namespace MvcCore\View{trait Rendering{public function&RenderScript($relativePath=''){return$this->Render(static::$scriptsDir,$relativePath);}public function&RenderLayout($relativePath=''){return$this->Render(static::$layoutsDir,$relativePath);}public function&RenderLayoutAndContent($relativePath='',&$content=''){$this->__protected['content']=&$content;return$this->Render(static::$layoutsDir,$relativePath);}public function&Render($typePath='',$relativePath=''){if(!$typePath)$typePath=static::$scriptsDir;$result='';$relativePath=$this->_correctRelativePath($typePath,$relativePath);$viewScriptFullPath=static::GetViewScriptFullPath($typePath,$relativePath);if(!\Packager_Php_Wrapper::FileExists($viewScriptFullPath)){throw new\InvalidArgumentException('['.__CLASS__."] Template not found in path: `$viewScriptFullPath`.");}$renderedFullPaths=&$this->__protected['renderedFullPaths'];$renderedFullPaths[]=$viewScriptFullPath;ob_start();\Packager_Php_Wrapper::IncludeStandard(($viewScriptFullPath),$this);$result=ob_get_clean();array_pop($renderedFullPaths);return$result;}public static function GetViewScriptFullPath($typePath='',$corectedRelativePath=''){if(self::$_viewScriptsFullPathBase===NULL)self::_initViewScriptsFullPathBase();return implode('/',[self::$_viewScriptsFullPathBase,$typePath,$corectedRelativePath.static::$extension]);}public function&SetUpStore(\MvcCore\IView&$view,$overwriteExistingKeys=TRUE){$currentStore=&$this->__protected['store'];$viewStore=&$view->__protected['store'];if($overwriteExistingKeys){$this->__protected['store']=array_merge($currentStore,$viewStore);}else{foreach($viewStore as$key=>&$value)if(!array_key_exists($key,$currentStore))$currentStore[$key]=&$value;}return$this;}public function&GetContent(){return$this->__protected['content'];}public function&Evaluate($content=''){ob_start();try{eval(' ?'.'>'.$content.'<'.'?php ');}catch(\Exception$e){throw$e;}$content=ob_get_clean();return$content;}}}
namespace MvcCore\Ext\Forms\Field\Props{trait Wrapper{public$wrapper='{control}';public function GetWrapper(){return$this->wrapper;}public function&SetWrapper($wrapper){$this->wrapper=$wrapper;return$this;}protected function renderControlWrapper($renderedCode){$wrapperReplacement='{control}';$wrapper=mb_strpos($wrapperReplacement,$this->wrapper)!==FALSE?$this->wrapper:$wrapperReplacement;return str_replace($wrapperReplacement,$renderedCode,$wrapper);}}}
namespace MvcCore\Ext\Forms\Fields{interface IOptions{public function&SetOptions(array$options=[]);public function&AddOptions(array$options=[]);public function&GetOptions();}}
namespace MvcCore\View{trait PrivateMethods{private function _correctRelativePath($typePath,$relativePath){$result=str_replace('\\','/',$relativePath);if(substr($relativePath,0,2)=='./'){if(self::$_viewScriptsFullPathBase===NULL)self::_initViewScriptsFullPathBase();$typedViewDirFullPath=implode('/',[self::$_viewScriptsFullPathBase,$typePath]);$renderedFullPaths=&$this->__protected['renderedFullPaths'];$lastRenderedFullPath=$renderedFullPaths[count($renderedFullPaths)-1];$renderedRelPath=substr($lastRenderedFullPath,strlen($typedViewDirFullPath));$renderedRelPathLastSlashPos=strrpos($renderedRelPath,'/');if($renderedRelPathLastSlashPos!==FALSE){$result=substr($renderedRelPath,0,$renderedRelPathLastSlashPos+1).substr($relativePath,2);$result=ltrim($result,'/');}}return$result;}private static function _initViewScriptsFullPathBase(){$app=&\MvcCore\Application::GetInstance();self::$_viewScriptsFullPathBase=implode('/',[$app->GetRequest()->GetAppRoot(),$app->GetAppDir(),$app->GetViewsDir()]);}private static function _initHelpersNamespaces(){$app=&\MvcCore\Application::GetInstance();static::$helpersNamespaces=['\\MvcCore\\Ext\\Views\Helpers\\','\\'.implode('\\',[$app->GetAppDir(),$app->GetViewsDir(),static::$helpersDir]).'\\',];}}}
namespace MvcCore\Config{trait Helpers{protected function isKeyNumeric($rawKey){$numericRawKey=preg_replace("#[^0-9\-]#",'',$rawKey);return$numericRawKey==$rawKey;}protected function getTypedValue($rawValue){if(gettype($rawValue)=="array"){foreach($rawValue as$key=>$value){$rawValue[$key]=$this->getTypedValue($value);}return$rawValue;}else{$numericRawVal=preg_replace("#[^0-9\-\.]#",'',$rawValue);if($numericRawVal==$rawValue){return$this->getTypedValueFloatIpOrInt($rawValue);}else{return$this->getTypedValueBoolOrString($rawValue);}}}protected function getTypedValueFloatIpOrInt($rawValue){if(strpos($rawValue,'.')!==FALSE){if(substr_count($rawValue,'.')===1){return floatval($rawValue);}else{return$rawValue;}}else{$intVal=intval($rawValue);return(string)$intVal===$rawValue?$intVal:$rawValue;}}protected function getTypedValueBoolOrString($rawValue){$lowerRawValue=strtolower($rawValue);if(isset(static::$booleanValues[$lowerRawValue])){return static::$booleanValues[$lowerRawValue];}else{return trim($rawValue);}}}}
namespace MvcCore\Config{trait Environment{public static function SetEnvironment($environment=\MvcCore\IConfig::ENVIRONMENT_PRODUCTION){static::$environment=$environment;}public static function GetEnvironment($autoloadSystemConfig=FALSE){if($autoloadSystemConfig)if(static::GetSystem()===FALSE)static::initEnvironmentByIps();else static::initEnvironmentByIps();return static::$environment;}protected static function initEnvironmentByIps(){if(static::$environment===NULL){$request=&\MvcCore\Application::GetInstance()->GetRequest();$serverAddress=$request->GetServerIp();$remoteAddress=$request->GetClientIp();if($serverAddress==$remoteAddress){static::$environment=static::ENVIRONMENT_DEVELOPMENT;}else{static::$environment=static::ENVIRONMENT_PRODUCTION;}}}}}
namespace MvcCore\Ext\Routers\Localizations\Route{trait PropsGettersSetters{protected$patternLocalized=[];protected$matchLocalized=[];protected$reverseLocalized=[];protected$defaultsLocalized=[];protected$constraintsLocalized=[];protected$reverseParamsLocalized=[];protected$reverseSectionsLocalized=[];public function GetPattern($localization=NULL){if($localization!==NULL&&array_key_exists($localization,$this->patternLocalized)){return$this->patternLocalized[$localization];}else{return$this->pattern;}}public function&SetPattern($pattern,$localization=NULL){if($localization!==NULL){$this->patternLocalized[$localization]=$pattern;}else if(is_array($pattern)){$this->patternLocalized=$pattern;}else{$this->pattern=$pattern;}return$this;}public function GetMatch($localization=NULL){if($localization!==NULL&&array_key_exists($localization,$this->matchLocalized)){return$this->matchLocalized[$localization];}else{return$this->match;}}public function&SetMatch($match,$localization=NULL){if($localization!==NULL){$this->matchLocalized[$localization]=$match;}else if(is_array($match)){$this->matchLocalized=$match;}else{$this->match=$match;}return$this;}public function GetReverse($localization=NULL){if($localization!==NULL&&array_key_exists($localization,$this->reverseLocalized)){return$this->reverseLocalized[$localization];}return$this->reverse;}public function&SetReverse($reverse,$localization=NULL){if($localization!==NULL){$this->reverseLocalized[$localization]=$reverse;}else if(is_array($reverse)){$this->reverseLocalized=$reverse;}else{$this->reverse=$reverse;}return$this;}public function&GetDefaults($localization=NULL){if($localization!==NULL&&array_key_exists($localization,$this->defaultsLocalized)&&is_array($this->defaultsLocalized[$localization])){return$this->defaultsLocalized[$localization];}return$this->defaults;}public function&SetDefaults($defaults=[],$localization=NULL){if($localization!==NULL){$this->defaultsLocalized[$localization]=&$defaults;}else{if($this->recordIsLocalized($defaults)){$this->defaultsLocalized=$defaults;}else{$this->defaults=$defaults;}}return$this;}public function&GetConstraints($localization=NULL){if($localization!==NULL&&array_key_exists($localization,$this->constraintsLocalized)&&is_array($this->constraintsLocalized[$localization])){return$this->constraintsLocalized[$localization];}return$this->constraints;}public function&SetConstraints($constraints=[],$localization=NULL){if($localization!==NULL){$this->constraintsLocalized[$localization]=&$constraints;if(!isset($this->defaultsLocalized[$localization]))$this->defaultsLocalized[$localization]=[];$defaults=&$this->defaultsLocalized[$localization];foreach($constraints as$key=>$value)if(!isset($defaults[$key]))$defaults[$key]=NULL;}else{$localizedConstraints=$this->recordIsLocalized($constraints);if($localization===NULL&&$localizedConstraints){$this->constraintsLocalized=&$constraints;$defaults=&$this->defaultsLocalized;foreach($constraints as$localization=>$constraintsLocalized){if(!isset($this->defaultsLocalized[$localization]))$this->defaultsLocalized[$localization]=[];$defaults=&$this->defaultsLocalized[$localization];foreach($constraintsLocalized as$key=>$value)if(!isset($defaults[$key]))$defaults[$key]=NULL;}}else if($localization===NULL&&!$localizedConstraints){$this->constraints=&$constraints;$defaults=&$this->defaults;foreach($constraints as$key=>$value){if(!isset($defaults[$key]))$defaults[$key]=NULL;}}}return$this;}public function GetReverseParams(){return$this->reverseParams;}public function GetGroupName(){return$this->groupName;}public function&SetGroupName($groupName){$this->groupName=$groupName;return$this;}}}
namespace MvcCore\Ext\Routers\Localizations\Route{trait UrlBuilding{public function Url(\MvcCore\IRequest&$request,array&$params=[],array&$defaultUrlParams=[],$queryStringParamsSepatator='&'){$router=&$this->router;$localizationParamName=$router::URL_PARAM_LOCALIZATION;if(isset($params[$localizationParamName])){$localizationStr=$params[$localizationParamName];unset($params[$localizationParamName]);}else if(isset($defaultUrlParams[$localizationParamName])){$localizationStr=$defaultUrlParams[$localizationParamName];unset($defaultUrlParams[$localizationParamName]);}else{$localizationStr=implode($router::LANG_AND_LOCALE_SEPARATOR,$router->GetLocalization());}$localization=explode($router::LANG_AND_LOCALE_SEPARATOR,$localizationStr);$routesLocalization=$router->GetRouteRecordsByLanguageAndLocale()?$localizationStr:$localization[0];if(!array_key_exists($routesLocalization,$this->reverseParamsLocalized)||!array_key_exists($routesLocalization,$this->reverseLocalized))$this->initReverse($routesLocalization);$reverseParams=$this->reverseParamsLocalized[$routesLocalization];if(count($reverseParams)===0){$allParamsClone=array_merge([],$params);}else{$emptyReverseParams=array_fill_keys(array_keys($reverseParams),'');$allMergedParams=array_merge($this->GetDefaults($routesLocalization),$defaultUrlParams,$params);$allParamsClone=array_merge($emptyReverseParams,array_intersect_key($allMergedParams,$emptyReverseParams),$params);}$localizationContained=array_key_exists($localizationParamName,$allParamsClone);$allParamsClone[$localizationParamName]=$localizationStr;list(,$filteredParams)=$this->Filter($allParamsClone,$defaultUrlParams,\MvcCore\IRoute::CONFIG_FILTER_OUT);if(!$localizationContained)unset($filteredParams[$localizationParamName]);$domainPercentageParams=$this->urlGetAndRemoveDomainPercentageParams($filteredParams);$result=$this->urlComposeByReverseSectionsAndParams($this->reverseLocalized[$routesLocalization],$this->reverseSectionsLocalized[$routesLocalization],$this->reverseParamsLocalized[$routesLocalization],$filteredParams,$this->GetDefaults($routesLocalization));if($filteredParams){$result.=(mb_strpos($result,'?')!==FALSE?$queryStringParamsSepatator:'?').str_replace('%2F','/',http_build_query($filteredParams,'',$queryStringParamsSepatator,PHP_QUERY_RFC3986));}return$this->urlSplitResultToBaseAndPathWithQuery($request,$result,$domainPercentageParams);}}}
namespace MvcCore\Application{trait PropsGettersSetters{protected static$instance;protected$compiled=NULL;protected$controller=NULL;protected$request=NULL;protected$response=NULL;protected$router=NULL;protected$preRouteHandlers=[];protected$postRouteHandlers=[];protected$preDispatchHandlers=[];protected$postDispatchHandlers=[];protected$configClass='\MvcCore\Config';protected$controllerClass='\MvcCore\Controller';protected$debugClass='\MvcCore\Debug';protected$requestClass='\MvcCore\Request';protected$responseClass='\MvcCore\Response';protected$routeClass='\MvcCore\Route';protected$routerClass='\MvcCore\Router';protected$sessionClass='\MvcCore\Session';protected$toolClass='\MvcCore\Tool';protected$viewClass='\MvcCore\View';protected$appDir='App';protected$controllersDir='Controllers';protected$viewsDir='Views';protected$defaultControllerName='Index';protected$defaultControllerDefaultActionName='Index';protected$defaultControllerErrorActionName='Error';protected$defaultControllerNotFoundActionName='NotFound';protected$terminated=FALSE;public function GetCompiled(){if($this->compiled===NULL){$compiled=static::NOT_COMPILED;if(strpos(PACKAGER_PHP_FILE_BASE.'/vendor/mvccore/mvccore/src/MvcCore/Application/PropsGettersSetters.php','phar://')===0){$compiled=static::COMPILED_PHAR;}else if(class_exists('\Packager_Php_Wrapper')){$compiled=constant('\Packager_Php_Wrapper::FS_MODE');}$this->compiled=$compiled;}return$this->compiled;}public function GetConfigClass(){return$this->configClass;}public function GetControllerClass(){return$this->controllerClass;}public function GetDebugClass(){return$this->debugClass;}public function GetRequestClass(){return$this->requestClass;}public function GetResponseClass(){return$this->responseClass;}public function GetRouteClass(){return$this->routeClass;}public function GetRouterClass(){return$this->routerClass;}public function GetSessionClass(){return$this->sessionClass;}public function GetToolClass(){return$this->toolClass;}public function GetViewClass(){return$this->viewClass;}public function&GetRequest(){if($this->request===NULL){$requestClass=$this->requestClass;$this->request=$requestClass::CreateInstance($_SERVER,$_GET,$_POST,$_COOKIE,$_FILES);}return$this->request;}public function&GetResponse(){if($this->response===NULL){$responseClass=$this->responseClass;$this->response=$responseClass::CreateInstance();}return$this->response;}public function&GetRouter(){if($this->router===NULL){$routerClass=$this->routerClass;$this->router=&$routerClass::GetInstance();}return$this->router;}public function&GetController(){return$this->controller;}public function GetAppDir(){return$this->appDir;}public function GetControllersDir(){return$this->controllersDir;}public function GetViewsDir(){return$this->viewsDir;}public function GetDefaultControllerAndActionNames(){return[$this->defaultControllerName,$this->defaultControllerDefaultActionName];}public function&SetCompiled($compiled=''){$this->compiled=$compiled;return$this;}public function&SetConfigClass($configClass){return$this->setCoreClass($configClass,'configClass','MvcCore\IConfig');}public function&SetControllerClass($controllerClass){return$this->setCoreClass($controllerClass,'configClass','MvcCore\IController');}public function&SetDebugClass($debugClass){return$this->setCoreClass($debugClass,'debugClass','MvcCore\IDebug');}public function&SetRequestClass($requestClass){return$this->setCoreClass($requestClass,'requestClass','MvcCore\IRequest');}public function&SetResponseClass($responseClass){return$this->setCoreClass($responseClass,'responseClass','MvcCore\IResponse');}public function&SetRouteClass($routeClass){return$this->setCoreClass($routeClass,'routerClass','MvcCore\IRoute');}public function&SetRouterClass($routerClass){return$this->setCoreClass($routerClass,'routerClass','MvcCore\IRouter');}public function&SetSessionClass($sessionClass){return$this->setCoreClass($sessionClass,'sessionClass','MvcCore\ISession');}public function&SetToolClass($toolClass){return$this->setCoreClass($toolClass,'toolClass','MvcCore\ITool');}public function&SetViewClass($viewClass){return$this->setCoreClass($viewClass,'viewClass','MvcCore\IView');}public function&SetAppDir($appDir){$this->appDir=$appDir;return$this;}public function&SetController(\MvcCore\IController$controller=NULL){$this->controller=$controller;return$this;}public function&SetControllersDir($controllersDir){$this->controllersDir=$controllersDir;return$this;}public function&SetViewsDir($viewsDir){$this->viewsDir=$viewsDir;return$this;}public function&SetDefaultControllerName($defaultControllerName){$this->defaultControllerName=$defaultControllerName;return$this;}public function&SetDefaultControllerDefaultActionName($defaultActionName){$this->defaultControllerDefaultActionName=$defaultActionName;return$this;}public function&SetDefaultControllerErrorActionName($defaultControllerErrorActionName){$this->defaultControllerErrorActionName=$defaultControllerErrorActionName;return$this;}public function&SetDefaultControllerNotFoundActionName($defaultControllerNotFoundActionName){$this->defaultControllerNotFoundActionName=$defaultControllerNotFoundActionName;return$this;}public function&AddPreRouteHandler(callable$handler,$priorityIndex=NULL){if(!is_callable($handler))throw new\InvalidArgumentException("[".__CLASS__."] Pre route handler is not callable (handler: $handler, priorityIndex: $priorityIndex).");return$this->setHandler($this->preRouteHandlers,$handler,$priorityIndex);}public function&AddPostRouteHandler(callable$handler,$priorityIndex=NULL){if(!is_callable($handler))throw new\InvalidArgumentException("[".__CLASS__."] Post route handler is not callable (handler: $handler, priorityIndex: $priorityIndex).");return$this->setHandler($this->postRouteHandlers,$handler,$priorityIndex);}public function&AddPreDispatchHandler(callable$handler,$priorityIndex=NULL){if(!is_callable($handler))throw new\InvalidArgumentException("[".__CLASS__."] Pre dispatch handler is not callable (handler: $handler, priorityIndex: $priorityIndex).");return$this->setHandler($this->preDispatchHandlers,$handler,$priorityIndex);}public function&AddPostDispatchHandler(callable$handler,$priorityIndex=NULL){if(!is_callable($handler))throw new\InvalidArgumentException("[".__CLASS__."] Post dispatch handler is not callable (handler: $handler, priorityIndex: $priorityIndex).");return$this->setHandler($this->postDispatchHandlers,$handler,$priorityIndex);}}}
namespace MvcCore\Application{trait Helpers{public function GetDefaultControllerIfHasAction($actionName){$defaultControllerName=$this->CompleteControllerName($this->defaultControllerName);if(class_exists($defaultControllerName)&&method_exists($defaultControllerName,$actionName.'Action')){return$defaultControllerName;}return'';}public function CompleteControllerName($controllerNamePascalCase){if(substr($controllerNamePascalCase,0,2)=='//')return'\\'.ltrim($controllerNamePascalCase,'/');return'\\'.implode('\\',[$this->appDir,$this->controllersDir,ltrim($controllerNamePascalCase,'\\')]);}public function IsErrorDispatched(){$toolClass=$this->toolClass;$defaultCtrlName=$toolClass::GetDashedFromPascalCase($this->defaultControllerName);$errorActionName=$toolClass::GetDashedFromPascalCase($this->defaultControllerErrorActionName);return$this->request->GetControllerName()==$defaultCtrlName&&$this->request->GetActionName()==$errorActionName;}public function IsNotFoundDispatched(){$toolClass=$this->toolClass;$defaultCtrlName=$toolClass::GetDashedFromPascalCase($this->defaultControllerName);$errorActionName=$toolClass::GetDashedFromPascalCase($this->defaultControllerNotFoundActionName);return$this->request->GetControllerName()==$defaultCtrlName&&$this->request->GetActionName()==$errorActionName;}protected function&setCoreClass($newCoreClassName,$coreClassVar,$coreClassInterface){if(call_user_func([$this->toolClass,'CheckClassInterface'],$newCoreClassName,$coreClassInterface,TRUE,TRUE))$this->$coreClassVar=$newCoreClassName;return$this;}protected function&setHandler(array&$handlers,callable$handler,$priorityIndex=NULL){$closureCalling=((is_string($handler)&&strpos($handler,'::')!==FALSE)||(is_array($handler)&&strpos($handler[1],'::')!==FALSE))?FALSE:TRUE;if($priorityIndex===NULL){$handlers[]=[$closureCalling,$handler];}else{if(isset($handlers[$priorityIndex])){array_splice($handlers,$priorityIndex,0,[$closureCalling,$handler]);}else{$handlers[$priorityIndex]=[$closureCalling,$handler];}}return$this;}}}
namespace MvcCore\Application{trait Dispatching{public function Run($singleFileUrl=FALSE){if($singleFileUrl)$this->SetCompiled(static::COMPILED_SFU);$this->GetRequest();$this->GetResponse();$debugClass=$this->debugClass;$debugClass::Init();if(!$this->ProcessCustomHandlers($this->preRouteHandlers))return$this->Terminate();if(!$this->RouteRequest())return$this->Terminate();if(!$this->ProcessCustomHandlers($this->postRouteHandlers))return$this->Terminate();if(!$this->DispatchRequest())return$this->Terminate();return$this->Terminate();}public function SessionStart(){$sessionClass=$this->sessionClass;$sessionClass::Start();}public function RouteRequest(){return$this->GetRouter()->SetRequest($this->GetRequest())->Route();}public function ProcessCustomHandlers(&$handlers=[]){if($this->request->IsInternalRequest()===TRUE)return TRUE;$result=TRUE;foreach($handlers as$handlerRecord){list($closureCalling,$handler)=$handlerRecord;$subResult=NULL;try{if($closureCalling){$subResult=$handler($this->request,$this->response);}else{$subResult=call_user_func($handler,$this->request,$this->response);}if($subResult===FALSE){$result=FALSE;break;}}catch(\Exception$e){$this->DispatchException($e);$result=FALSE;break;}}return$result;}public function DispatchRequest(){$route=&$this->router->GetCurrentRoute();if($route===NULL)return$this->DispatchException('No route for request',404);list($ctrlPc,$actionPc)=[$route->GetController(),$route->GetAction()];$actionName=$actionPc.'Action';$viewClass=$this->viewClass;$viewScriptFullPath=$viewClass::GetViewScriptFullPath($viewClass::GetScriptsDir(),$this->request->GetControllerName().'/'.$this->request->GetActionName());if($ctrlPc=='Controller'){$controllerName=$this->controllerClass;}else if($this->controller!==NULL){$controllerName='\\'.get_class($this->controller);}else{$controllerName=$this->CompleteControllerName($ctrlPc);if(!class_exists($controllerName)){if(\Packager_Php_Wrapper::FileExists($viewScriptFullPath)){$controllerName=$this->controllerClass;}else{return$this->DispatchException("Controller class `$controllerName` doesn't exist.",404);}}}return$this->DispatchControllerAction($controllerName,$actionName,$viewScriptFullPath,function(\Exception&$e){return$this->DispatchException($e);});}public function DispatchControllerAction($ctrlClassFullName,$actionNamePc,$viewScriptFullPath,callable$exceptionCallback){if($this->controller===NULL){$controller=NULL;try{$controller=$ctrlClassFullName::CreateInstance();}catch(\Exception$e){return$this->DispatchException($e->getMessage(),404);}$this->controller=&$controller;}$this->controller->SetApplication($this)->SetRequest($this->request)->SetResponse($this->response)->SetRouter($this->router);if(!method_exists($this->controller,$actionNamePc)&&$ctrlClassFullName!==$this->controllerClass){if(!\Packager_Php_Wrapper::FileExists($viewScriptFullPath)){$appRoot=$this->request->GetAppRoot();$viewScriptPath=mb_strpos($viewScriptFullPath,$appRoot)===FALSE?$viewScriptFullPath:mb_substr($viewScriptFullPath,mb_strlen($appRoot));$ctrlClassFullName=$this->request->GetControllerName();return$this->DispatchException("Controller class `$ctrlClassFullName` has not method `$actionNamePc` \n"."or view doesn't exist: `$viewScriptPath`.",404);}}if(!$this->ProcessCustomHandlers($this->preDispatchHandlers))return FALSE;try{$this->controller->Dispatch($actionNamePc);}catch(\Exception$e){return$exceptionCallback($e);}return TRUE;}public function Url($controllerActionOrRouteName='Index:Index',$params=[]){return$this->router->Url($controllerActionOrRouteName,$params);}public function Terminate(){if($this->terminated)return$this;$this->processCustomHandlers($this->postDispatchHandlers);$sessionClass=$this->sessionClass;$sessionClass::SendCookie();$sessionClass::Close();$this->response->Send();$this->terminated=TRUE;if($this->controller){$ctrlType=new\ReflectionClass($this->controller);$dispatchStateProperty=$ctrlType->getProperty('dispatchState');$dispatchStateProperty->setAccessible(TRUE);$dispatchStateProperty->setValue($this->controller,5);}return$this;}public function DispatchException($exceptionOrMessage,$code=NULL){if(class_exists('\Packager_Php'))return FALSE;$exception=NULL;if($exceptionOrMessage instanceof\Exception){$exception=$exceptionOrMessage;}else{try{if($code===NULL)throw new\Exception($exceptionOrMessage);throw new\ErrorException($exceptionOrMessage,$code);}catch(\Exception$e){$exception=$e;}}$debugClass=$this->debugClass;$configClass=$this->configClass;if($exception->getCode()==404){$debugClass::Log($exception->getMessage().": ".$this->request->GetFullUrl(),\MvcCore\IDebug::INFO);return$this->RenderNotFound($exception->getMessage());}else if($configClass::IsDevelopment(TRUE)){$debugClass::Exception($exception);return FALSE;}else{$debugClass::Log($exception,\MvcCore\IDebug::EXCEPTION);return$this->RenderError($exception);}}public function RenderError(\Exception$e){$defaultCtrlFullName=$this->GetDefaultControllerIfHasAction($this->defaultControllerErrorActionName);$exceptionMessage=$e->getMessage();if($defaultCtrlFullName){$debugClass=$this->debugClass;$viewClass=$this->viewClass;$this->router->SetOrCreateDefaultRouteAsCurrent(\MvcCore\IRouter::DEFAULT_ROUTE_NAME_ERROR,$this->defaultControllerName,$this->defaultControllerErrorActionName,TRUE);$newParams=array_merge($this->request->GetParams('.*'),['code'=>500,'message'=>$exceptionMessage,]);$this->request->SetParams($newParams);$this->response->SetCode(500);$this->controller=NULL;$this->DispatchControllerAction($defaultCtrlFullName,$this->defaultControllerErrorActionName."Action",$viewClass::GetViewScriptFullPath($viewClass::GetScriptsDir(),$this->request->GetControllerName().'/'.$this->request->GetActionName()),function(\Exception&$e)use($exceptionMessage,$debugClass){$this->router->RemoveRoute(\MvcCore\IRouter::DEFAULT_ROUTE_NAME_NOT_FOUND);$configClass=$this->configClass;if($configClass::IsDevelopment(TRUE)){$debugClass::Exception($e);}else{$debugClass::Log($e,\MvcCore\IDebug::EXCEPTION);$this->RenderError500PlainText($exceptionMessage.PHP_EOL.PHP_EOL.$e->getMessage());}});return FALSE;}else{return$this->RenderError500PlainText($exceptionMessage);}}public function RenderNotFound($exceptionMessage=''){if(!$exceptionMessage)$exceptionMessage='Page not found.';$defaultCtrlFullName=$this->GetDefaultControllerIfHasAction($this->defaultControllerNotFoundActionName);if($defaultCtrlFullName){$debugClass=$this->debugClass;$viewClass=$this->viewClass;$this->router->SetOrCreateDefaultRouteAsCurrent(\MvcCore\IRouter::DEFAULT_ROUTE_NAME_NOT_FOUND,$this->defaultControllerName,$this->defaultControllerNotFoundActionName,TRUE);$newParams=array_merge($this->request->GetParams('.*'),['code'=>404,'message'=>$exceptionMessage,]);$this->request->SetParams($newParams);$this->response->SetCode(404);$this->controller=NULL;$this->DispatchControllerAction($defaultCtrlFullName,$this->defaultControllerNotFoundActionName."Action",$viewClass::GetViewScriptFullPath($viewClass::GetScriptsDir(),$this->request->GetControllerName().'/'.$this->request->GetActionName()),function(\Exception&$e)use($exceptionMessage,$debugClass){$this->router->RemoveRoute(\MvcCore\IRouter::DEFAULT_ROUTE_NAME_NOT_FOUND);$configClass=$this->configClass;if($configClass::IsDevelopment(TRUE)){$debugClass::Exception($e);}else{$debugClass::Log($e,\MvcCore\IDebug::EXCEPTION);$this->RenderError404PlainText($exceptionMessage);}});return FALSE;}else{return$this->RenderError404PlainText($exceptionMessage);}}public function RenderError500PlainText($text=''){$htmlResponse=FALSE;$responseClass=$this->responseClass;$configClass=$this->configClass;if(!$configClass::IsDevelopment(TRUE)){$text='Error 500: Internal Server Error.';}else{$obContent=ob_get_clean();if(mb_strlen($obContent)>0)$htmlResponse=mb_strpos($obContent,'<')!==FALSE&&mb_strpos($obContent,'>')!==FALSE;if($htmlResponse){$text='<pre><big>Error 500</big>: '.PHP_EOL.PHP_EOL.$text.'</pre>'.$obContent;}else{$text='Error 500: '.PHP_EOL.PHP_EOL.$text.$obContent;}}$this->response=$responseClass::CreateInstance(\MvcCore\IResponse::INTERNAL_SERVER_ERROR,['Content-Type'=>$htmlResponse?'text/html':'text/plain'],$text);return FALSE;}public function RenderError404PlainText($text=''){$htmlResponse=FALSE;$responseClass=$this->responseClass;$configClass=$this->configClass;if(!$configClass::IsDevelopment(TRUE)){$text='Error 404: Page not found.';}else{$obContent=ob_get_clean();if(mb_strlen($obContent)>0)$htmlResponse=mb_strpos($obContent,'<')!==FALSE&&mb_strpos($obContent,'>')!==FALSE;if($htmlResponse){$text='<pre><big>Error 404</big>: '.PHP_EOL.PHP_EOL.$text.'</pre>'.$obContent;}else{$text='Error 404: '.PHP_EOL.PHP_EOL.$text.$obContent;}}$this->response=$responseClass::CreateInstance(\MvcCore\IResponse::NOT_FOUND,['Content-Type'=>$htmlResponse?'text/html':'text/plain'],$text);return FALSE;}}}
namespace MvcCore\Ext\Routers\Modules\Route{trait Matching{protected function matchesGetSubject(\MvcCore\IRequest&$request){$subject=$this->matchesGetSubjectHostAndBase($request);if(!$this->flags[0])throw new\InvalidArgumentException("[".__CLASS__."] Domain route pattern or reverse must be defined as "."absolute with `//`, `http://` or `https://` at the beginning (`//www.domain.com`).");return$subject;}protected function&matchesParseRewriteParams(&$matchedValues,&$defaults){$matchedParams=[];array_shift($matchedValues);foreach($matchedValues as$key=>$matchedValueArr){if(is_numeric($key))continue;$matchedValue=(string)current($matchedValueArr);if(!isset($defaults[$key]))$defaults[$key]=NULL;$matchedEmptyString=mb_strlen($matchedValue)===0;if($matchedEmptyString)$matchedValue=$defaults[$key];if(isset($matchedParams[$key])&&$matchedEmptyString)continue;$matchedParams[$key]=$matchedValue;}return$matchedParams;}}}
namespace MvcCore\Ext\Routers\Module{trait UrlByRoute{public function UrlByRoute(\MvcCore\IRoute&$route,array&$params=[],$urlParamRouteName=NULL){$moduleParamName=static::URL_PARAM_MODULE;$moduleParamDefined=isset($params[$moduleParamName]);$currentDomainRouteMatched=$this->currentDomainRoute!==NULL;if($route->GetAbsolute()&&$moduleParamDefined&&$currentDomainRouteMatched&&$params[$moduleParamName]!==$this->requestedDomainParams[$moduleParamName])throw new\InvalidArgumentException("[".__CLASS__."] It's not possible to create URL address "."to different module/domain for route defined as absolute.");$targetModule=NULL;$targetDomainRoute=NULL;$domainParamsDefault=[];$domainParams=[];if($moduleParamDefined){$targetModule=$params[$moduleParamName];if(!isset($this->domainRoutes[$targetModule])){throw new\InvalidArgumentException("[".__CLASS__."] No domain route defined for module: `$targetModule`.");}else{$targetDomainRoute=$this->domainRoutes[$targetModule];$routeReverseParamsKeys=$targetDomainRoute->GetReverseParams();$routeReverseParamsDefaults=array_fill_keys($routeReverseParamsKeys,NULL);$targetDomainRouteDefaults=array_intersect_key($targetDomainRoute->GetDefaults(),$routeReverseParamsDefaults);$domainParamsDefault=array_merge($routeReverseParamsDefaults,$targetDomainRouteDefaults);$domainParamsDefault[$moduleParamName]=$targetModule;}}else if($currentDomainRouteMatched){$targetModule=$this->currentDomainRoute->GetModule();$targetDomainRoute=$this->currentDomainRoute;$domainParamsDefault=$this->requestedDomainParams;}if($targetModule!==NULL){$domainParams=array_intersect_key($params,$domainParamsDefault);$params=array_diff_key($params,$domainParamsDefault);$defaultDomainParams=array_merge([],$this->GetDefaultParams()?:[]);list($domainUrlBaseSection,)=$targetDomainRoute->Url($this->request,$domainParams,$defaultDomainParams,'');}else{$domainUrlBaseSection=NULL;}list($urlBaseSection,$urlPathWithQuerySection,$systemParams)=$this->urlByRouteSections($route,$params,$urlParamRouteName);if($targetModule!==NULL)$systemParams=array_diff_key($systemParams,$domainParamsDefault);$localizedRoute=$route instanceof\MvcCore\Ext\Routers\Localizations\Route;$localizationParamName=static::URL_PARAM_LOCALIZATION;$urlPathWithQueryIsHome=NULL;if(isset($systemParams[$localizationParamName])){if(!$localizedRoute){unset($systemParams[$localizationParamName]);}else{$urlPathWithQueryIsHome=$this->urlIsHomePath($urlPathWithQuerySection);if($urlPathWithQueryIsHome&&$systemParams[$localizationParamName]===$this->defaultLocalizationStr){unset($systemParams[$localizationParamName]);}}}return$this->urlByRoutePrefixSystemParams($domainUrlBaseSection?:$urlBaseSection,$urlPathWithQuerySection,$systemParams,$urlPathWithQueryIsHome);}}}
namespace MvcCore\Ext\Routers\Modules\Route{trait PropsGettersSetters{protected$module=NULL;protected$namespace=NULL;public function GetModule(){return$this->module;}public function&SetModule($module){$this->module=$module;return$this;}public function GetNamespace(){return$this->namespace;}public function&SetNamespace($namespace){$this->namespace=$namespace;return$this;}public function GetName(){$this->trriggerUnusedMethodError(__METHOD__);return NULL;}public function&SetName($name){$this->trriggerUnusedMethodError(__METHOD__);return$this;}public function GetController(){$this->trriggerUnusedMethodError(__METHOD__);return NULL;}public function&SetController($controller){$this->trriggerUnusedMethodError(__METHOD__);return$this;}public function GetAction(){$this->trriggerUnusedMethodError(__METHOD__);return NULL;}public function&SetAction($action){$this->trriggerUnusedMethodError(__METHOD__);return$this;}public function GetControllerAction(){$this->trriggerUnusedMethodError(__METHOD__);return NULL;}public function&SetControllerAction($controllerAction){$this->trriggerUnusedMethodError(__METHOD__);return$this;}public function GetMethod(){$this->trriggerUnusedMethodError(__METHOD__);return NULL;}public function&SetMethod($method=NULL){$this->trriggerUnusedMethodError(__METHOD__);return$this;}public function GetRedirect(){$this->trriggerUnusedMethodError(__METHOD__);return NULL;}public function&SetRedirect($redirectRouteName=NULL){$this->trriggerUnusedMethodError(__METHOD__);return$this;}public function GetAbsolute(){$this->trriggerUnusedMethodError(__METHOD__);return TRUE;}public function&SetAbsolute($absolute=TRUE){$this->trriggerUnusedMethodError(__METHOD__);return$this;}public function GetGroupName(){$this->trriggerUnusedMethodError(__METHOD__);return NULL;}public function&SetGroupName($groupName){$this->trriggerUnusedMethodError(__METHOD__);return$this;}protected function trriggerUnusedMethodError($method){$cls=__CLASS__;trigger_error("[$cls] The method `$method` is not used in the extended `$cls` class.",E_USER_WARNING);}}}
namespace MvcCore\Ext\Routers\MediaAndLocalization{trait UrlByRoute{public function UrlByRoute(\MvcCore\IRoute&$route,array&$params=[],$urlParamRouteName=NULL){list($urlBaseSection,$urlPathWithQuerySection,$systemParams)=$this->urlByRouteSections($route,$params,$urlParamRouteName);$localizedRoute=$route instanceof\MvcCore\Ext\Routers\Localizations\Route;$localizationParamName=static::URL_PARAM_LOCALIZATION;$urlPathWithQueryIsHome=NULL;if(isset($systemParams[$localizationParamName])){if(!$localizedRoute){unset($systemParams[$localizationParamName]);}else{$urlPathWithQueryIsHome=$this->urlIsHomePath($urlPathWithQuerySection);if($urlPathWithQueryIsHome&&$systemParams[$localizationParamName]===$this->defaultLocalizationStr){unset($systemParams[$localizationParamName]);}}}return$this->urlByRoutePrefixSystemParams($urlBaseSection,$urlPathWithQuerySection,$systemParams,$urlPathWithQueryIsHome);}}}
namespace MvcCore\Ext\Routers\Modules\Route{trait InternalInits{}}
namespace MvcCore\Ext\Routers\Media{trait UrlByRouteSections{protected function urlByRouteSections(\MvcCore\IRoute&$route,array&$params=[],$urlParamRouteName=NULL){$defaultParams=array_merge([],$this->defaultParams);if($urlParamRouteName=='self')$params=array_merge($this->requestedParams,$params);$mediaVersionUrlParam=static::URL_PARAM_MEDIA_VERSION;if(isset($params[$mediaVersionUrlParam])){$mediaSiteVersion=$params[$mediaVersionUrlParam];unset($params[$mediaVersionUrlParam]);}else if(isset($defaultParams[$mediaVersionUrlParam])){$mediaSiteVersion=$defaultParams[$mediaVersionUrlParam];unset($defaultParams[$mediaVersionUrlParam]);}else{$mediaSiteVersion=$this->mediaSiteVersion;}$routeMethod=$route->GetMethod();if($this->routeGetRequestsOnly&&$routeMethod!==NULL&&$routeMethod!==\MvcCore\IRequest::METHOD_GET){$mediaSiteUrlValue=NULL;}else if(isset($this->allowedSiteKeysAndUrlValues[$mediaSiteVersion])){$mediaSiteUrlValue=$this->allowedSiteKeysAndUrlValues[$mediaSiteVersion];}else{$mediaSiteUrlValue=NULL;trigger_error('['.__CLASS__.'] Not allowed media site version used to generate url: `'.$mediaSiteVersion.'`. Allowed values: `'.implode('`, `',array_keys($this->allowedSiteKeysAndUrlValues)).'`.',E_USER_ERROR);}if($this->stricModeBySession&&$mediaSiteVersion!==NULL&&$mediaSiteVersion!==$this->mediaSiteVersion)$params[static::URL_PARAM_SWITCH_MEDIA_VERSION]=$mediaSiteVersion;list($urlBaseSection,$urlPathWithQuerySection)=$route->Url($this->request,$params,$this->GetDefaultParams(),$this->getQueryStringParamsSepatator());$systemParams=[];if($mediaSiteUrlValue!==NULL)$systemParams[$mediaVersionUrlParam]=$mediaSiteUrlValue;return[$urlBaseSection,$urlPathWithQuerySection,$systemParams];}}}
namespace MvcCore\Ext\Routers\Media{trait UrlByRoute{public function UrlByRoute(\MvcCore\IRoute&$route,array&$params=[],$urlParamRouteName=NULL){list($urlBaseSection,$urlPathWithQuerySection,$systemParams)=$this->urlByRouteSections($route,$params,$urlParamRouteName);return$this->urlByRoutePrefixSystemParams($urlBaseSection,$urlPathWithQuerySection,$systemParams);}}}
namespace MvcCore\Ext\Routers\Modules\Route{trait Instancing{public function __construct($patternOrConfig=NULL,$module=NULL,$namespace=NULL,$defaults=[],$constraints=[],$advancedConfiguration=[]){if(count(func_get_args())===0)return;if(is_array($patternOrConfig)){$data=(object)$patternOrConfig;$this->constructDataPatternsDefaultsConstraintsFilters($data);$this->constructDataModuleNamespace($data);}else{$this->constructVarsPatternDefaultsConstraintsFilters($patternOrConfig,$defaults,$constraints,$advancedConfiguration);$this->constructVarsModuleNamespace($module,$namespace);}}protected function constructDataModuleNamespace(&$data){if(isset($data->module))$this->SetModule($data->module);if(isset($data->namespace))$this->SetNamespace($data->namespace);}protected function constructVarsModuleNamespace(&$module,&$namespace){if($module!==NULL)$this->module=$module;if($namespace!==NULL)$this->namespace=$namespace;}}}
namespace MvcCore\Ext\Routers\Media{trait Routing{public function Route(){$this->internalRequest=$this->request->IsInternalRequest();list($requestCtrlName,$requestActionName)=$this->routeDetectStrategy();if(!$this->internalRequest){if(!$this->redirectToProperTrailingSlashIfNecessary())return FALSE;$this->prepare();$this->prepareMedia();if(!$this->preRouteMedia())return FALSE;}if($this->routeByQueryString){$this->queryStringRouting($requestCtrlName,$requestActionName);}else{$this->rewriteRouting($requestCtrlName,$requestActionName);}if(!$this->routeProcessRouteRedirectionIfAny())return FALSE;return$this->routeSetUpDefaultForHomeIfNoMatch()->routeSetUpSelfRouteNameIfAny()->canonicalRedirectIfAny();}}}
namespace MvcCore\Ext\Routers\Media{trait RedirectSections{protected function redirectToVersionSections($systemParams){$request=&$this->request;$urlBaseSection=$request->GetBaseUrl();$urlPathWithQuerySection=$request->GetPath(TRUE);$mediaVersionParamName=static::URL_PARAM_MEDIA_VERSION;$targetMediaUrlValue=$this->redirectMediaGetUrlValueAndUnsetGet($systemParams[$mediaVersionParamName]);$urlPathWithQueryIsHome=NULL;if($this->anyRoutesConfigured){if($targetMediaUrlValue===NULL){unset($systemParams[$mediaVersionParamName]);}else{$systemParams[$mediaVersionParamName]=$targetMediaUrlValue;}$this->redirectAddAllRemainingInGlobalGet($urlPathWithQuerySection);}else{$this->removeDefaultCtrlActionFromGlobalGet();if($this->requestGlobalGet)$urlPathWithQuerySection.=$request->GetScriptName();$this->redirectAddAllRemainingInGlobalGet($urlPathWithQuerySection);}$this->redirectStatusCode=\MvcCore\IResponse::SEE_OTHER;return[$urlBaseSection,$urlPathWithQuerySection,$systemParams,$urlPathWithQueryIsHome];}}}
namespace MvcCore\Ext\Routers\Modules{interface IRoute{}}
namespace MvcCore\Ext\Routers\Module{trait Redirect{protected function redirectToVersion($systemParams){$targetModule=NULL;$targetDomainRoute=NULL;$domainParamsDefault=[];$domainParams=[];$systemParamsClone=[];if($this->currentDomainRoute!==NULL){$targetModule=$this->currentDomainRoute->GetModule();$targetDomainRoute=$this->currentDomainRoute;$domainParamsDefault=$this->requestedDomainParams;}if($targetModule!==NULL){$domainParams=array_intersect_key($systemParams,$domainParamsDefault);$systemParamsClone=array_diff_key($systemParams,$domainParamsDefault);$defaultDomainParams=array_merge([],$this->GetDefaultParams()?:[]);$mediaVersionParamName=static::URL_PARAM_MEDIA_VERSION;if(isset($domainParams[$mediaVersionParamName])){$domainParams[$mediaVersionParamName]=$this->redirectMediaGetUrlValueAndUnsetGet($domainParams[$mediaVersionParamName]);}$localizationParamName=static::URL_PARAM_LOCALIZATION;if(isset($domainParams[$localizationParamName])){$domainParams[$localizationParamName]=$this->redirectLocalizationGetUrlValueAndUnsetGet($domainParams[$localizationParamName]);}list($domainUrlBaseSection,)=$targetDomainRoute->Url($this->request,$domainParams,$defaultDomainParams,'');}else{$domainUrlBaseSection=NULL;}list($urlBaseSection,$urlPathWithQuerySection,$systemParams,$urlPathWithQueryIsHome)=$this->redirectToVersionSections($systemParams);$targetUrl=$this->urlByRoutePrefixSystemParams($domainUrlBaseSection?:$urlBaseSection,$urlPathWithQuerySection,$systemParamsClone,$urlPathWithQueryIsHome);$req=&$this->request;$fullOriginalUrl=$req::HtmlSpecialChars($req->GetBaseUrl().$req->GetOriginalPath().$req->GetQuery(TRUE,TRUE));if($fullOriginalUrl===$targetUrl)return TRUE;$this->redirect($targetUrl,$this->redirectStatusCode);return FALSE;}}}
namespace MvcCore\Config{trait LoadingIniData{protected function&load($configPath='',$systemConfig=FALSE){$cfgFullPath=\MvcCore\Application::GetInstance()->GetRequest()->GetAppRoot().$configPath;if(!\Packager_Php_Wrapper::FileExists($cfgFullPath))return$this->result;$rawIniData=\Packager_Php_Wrapper::ParseIniFile($cfgFullPath,TRUE);if($rawIniData===FALSE)return$this->result;$this->result=[];$environment=$systemConfig?$this->initDataDetectEnvironmentBySystemConfig($rawIniData):static::$environment;$iniData=$this->iniPrepareToParse($rawIniData,$environment);$this->iniDataProcess($iniData);foreach($this->objectTypes as&$objectType){if($objectType[0])$objectType[1]=(object)$objectType[1];}unset($this->objectTypes);return$this->result;}protected function&iniPrepareToParse(array&$rawIniData,$environment){$iniData=[];foreach($rawIniData as$keyOrSectionName=>$valueOrSectionValues){if(is_array($valueOrSectionValues)){if(strpos($keyOrSectionName,'>')!==FALSE){list($envNameLocal,$keyOrSectionName)=explode('>',str_replace(' ','',$keyOrSectionName));if($envNameLocal!==$environment)continue;}$sectionValues=[];foreach($valueOrSectionValues as$key=>$value)$sectionValues[$keyOrSectionName.'.'.$key]=$value;$iniData=array_merge($iniData,$sectionValues);}else{$iniData[$keyOrSectionName]=$valueOrSectionValues;}}return$iniData;}protected function initDataDetectEnvironmentBySystemConfig(array&$rawIni=[]){$environment=NULL;if(isset($rawIni['environments'])){$environments=&$rawIni['environments'];$serverAddress=','.\MvcCore\Application::GetInstance()->GetRequest()->GetServerIp().',';$serverComputerName=','.gethostname().',';foreach($environments as$environmentName=>$environmentComputerNamesOrIps){$environmentComputerNamesOrIps=','.$environmentComputerNamesOrIps.',';if(strpos($environmentComputerNamesOrIps,$serverAddress)!==FALSE||strpos($environmentComputerNamesOrIps,$serverComputerName)!==FALSE){$environment=$environmentName;break;}}}if($environment&&!static::$environment)static::SetEnvironment($environment);return static::$environment;}protected function iniDataProcess(array&$iniData){$this->objectTypes['']=[1,&$this->result];foreach($iniData as$rawKey=>$rawValue){$current=&$this->result;$rawKeys=[];$lastRawKey=$rawKey;$lastDotPos=strrpos($rawKey,'.');if($lastDotPos!==FALSE){$rawKeys=explode('.',substr($rawKey,0,$lastDotPos));$lastRawKey=substr($rawKey,$lastDotPos+1);}$levelKey='';$prevLevelKey='';foreach($rawKeys as$key){$prevLevelKey=$levelKey;$levelKey.=($levelKey?'.':'').$key;if(!isset($current[$key])){$current[$key]=[];$this->objectTypes[$levelKey]=[1,&$current[$key]];if($this->isKeyNumeric($key)&&isset($this->objectTypes[$prevLevelKey])){$this->objectTypes[$prevLevelKey][0]=0;}}$current=&$current[$key];}$typedValue=$this->getTypedValue($rawValue);if(isset($current[$lastRawKey])){$current[$lastRawKey][]=$typedValue;$this->objectTypes[$levelKey?$levelKey:$lastRawKey][0]=0;}else{if(!is_array($current)){$current=[$current];$this->objectTypes[$levelKey]=[0,&$current];}$current[$lastRawKey]=$typedValue;if($this->isKeyNumeric($lastRawKey))$this->objectTypes[$levelKey][0]=0;}}}}}
namespace MvcCore\Ext\Routers{interface IModule{const URL_PARAM_MODULE='module';}}
namespace MvcCore\Response{trait PropsGettersSetters{protected static$codeMessages=[\MvcCore\IResponse::OK=>'OK',\MvcCore\IResponse::MOVED_PERMANENTLY=>'Moved Permanently',\MvcCore\IResponse::SEE_OTHER=>'See Other',\MvcCore\IResponse::NOT_FOUND=>'Not Found',\MvcCore\IResponse::INTERNAL_SERVER_ERROR=>'Internal Server Error',];protected$code=NULL;protected$headers=[];protected$encoding=NULL;protected$body=NULL;protected$sent=FALSE;protected$disabledHeaders=[];public function&SetCode($code){$this->code=$code;http_response_code($code);return$this;}public function GetCode(){if($this->code===NULL){$phpCode=http_response_code();$this->code=$phpCode===FALSE?static::OK:$phpCode;}return$this->code;}public function&SetEncoding($encoding='utf-8'){$this->encoding=$encoding;$this->headers['Content-Encoding']=$encoding;return$this;}public function GetEncoding(){return$this->encoding;}public function IsRedirect(){return isset($this->headers['Location']);}}}
namespace MvcCore\Response{trait Instancing{public static function CreateInstance($code=\MvcCore\IResponse::OK,$headers=[],$body=''){$responseClass=\MvcCore\Application::GetInstance()->GetResponseClass();return new$responseClass($code,$headers,$body);}public function __construct($code=\MvcCore\IResponse::OK,$headers=[],$body=''){$this->code=$code;$this->headers=$headers;$this->body=$body;}}}
namespace MvcCore\Response{trait Headers{public function&SetHeaders(array$headers=[],$cleanAllPrevious=FALSE){if($cleanAllPrevious){header_remove();$this->headers=[];}foreach($headers as$name=>$value){$this->SetHeader($name,$value);}return$this;}public function&SetHeader($name,$value){if(isset($this->disabledHeaders[$name]))return$this;header($name.": ".$value);$this->headers[$name]=$value;if($name==='Content-Type'){$charsetPos=strpos($value,'charset');if($charsetPos!==FALSE){$equalPos=strpos($value,'=',$charsetPos);if($equalPos!==FALSE)$this->SetEncoding(trim(substr($value,$equalPos+1)));}}if($name==='Content-Encoding')$this->encoding=$value;return$this;}public function GetHeader($name){return isset($this->headers[$name])?$this->headers[$name]:NULL;}public function HasHeader($name){return isset($this->headers[$name]);}public function UpdateHeaders(){$rawHeaders=headers_list();$name='';$value='';foreach($rawHeaders as$rawHeader){$doubleDotPos=strpos($rawHeader,':');if($doubleDotPos!==FALSE){$name=trim(substr($rawHeader,0,$doubleDotPos));$value=trim(substr($rawHeader,$doubleDotPos+1));}else{$name=$rawHeader;$value='';}if(!isset($this->disabledHeaders[$name]))$this->headers[$name]=$value;}}public function&SetDisabledHeaders(){$this->disabledHeaders=[];$args=func_get_args();if(count($args)===1&&is_array($args[0]))$args=$args[0];foreach($args as$arg)$this->disabledHeaders[$arg]=TRUE;return$this;}public function GetDisabledHeaders(){return array_keys($this->disabledHeaders);}}}
namespace MvcCore\Response{trait Cookies{public function SetCookie($name,$value,$lifetime=0,$path='/',$domain=NULL,$secure=NULL,$httpOnly=TRUE){if($this->IsSent())throw new\RuntimeException("[".__CLASS__."] Cannot set cookie after HTTP headers have been sent.");$request=\MvcCore\Application::GetInstance()->GetRequest();return\setcookie($name,$value,$lifetime===0?0:time()+$lifetime,$path,$domain===NULL?$request->GetHostName():$domain,$secure===NULL?$request->IsSecure():$secure,$httpOnly);}public function DeleteCookie($name,$path='/',$domain=NULL,$secure=NULL){return$this->SetCookie($name,'',0,$path,$domain,$secure);}}}
namespace MvcCore\Response{trait Content{public function&SetBody($body){$this->body=&$body;return$this;}public function&PrependBody($body){$this->body=$body.$this->body;return$this;}public function&AppendBody($body){$this->body.=$body;return$this;}public function&GetBody(){return$this->body;}public function IsHtmlOutput(){if(isset($this->headers['Content-Type'])){$value=$this->headers['Content-Type'];return strpos($value,'text/html')!==FALSE||strpos($value,'application/xhtml+xml')!==FALSE;}return FALSE;}public function IsXmlOutput(){if(isset($this->headers['Content-Type'])){$value=$this->headers['Content-Type'];return strpos($value,'xml')!==FALSE;}return FALSE;}public function IsSent(){return$this->sent||headers_sent();}public function Send(){if($this->IsSent())return;$code=$this->GetCode();$status=isset(static::$codeMessages[$code])?' '.static::$codeMessages[$code]:'';if(!isset($this->headers['Content-Encoding'])){if(!$this->encoding)$this->encoding='utf-8';$this->headers['Content-Encoding']=$this->encoding;}$this->UpdateHeaders();header("HTTP/1.0 $code $status");foreach($this->headers as$name=>$value){if($name=='Content-Type'){$charsetMatched=FALSE;$charsetPos=strpos($value,'charset');if($charsetPos!==FALSE){$equalPos=strpos($value,'=',$charsetPos);if($equalPos!==FALSE)$charsetMatched=TRUE;}if(!$charsetMatched)$value.=';charset='.$this->encoding;}if(isset($this->disabledHeaders[$name])){header_remove($name);}else{header($name.": ".$value);}}foreach($this->disabledHeaders as$name=>$b)header_remove($name);$this->addTimeAndMemoryHeader();echo $this->body;if(ob_get_level())echo  ob_get_clean();$this->sent=TRUE;}protected function addTimeAndMemoryHeader(){$headerName=static::HEADER_X_MVCCORE_CPU_RAM;if(isset($this->disabledHeaders[$headerName]))return;$mtBegin=\MvcCore\Application::GetInstance()->GetRequest()->GetMicrotime();$time=number_format((microtime(TRUE)-$mtBegin)*1000,1,'.',' ');$ram=function_exists('memory_get_peak_usage')?number_format(memory_get_peak_usage()/1000000,2,'.',' '):'n/a';header("$headerName: $time ms, $ram MB");}}}
namespace MvcCore\Request{trait Props{protected static$twoSegmentTlds=['co.jp'=>1,'ac.uk'=>1,'co.uk'=>1,'co.kr'=>1,'co.nl'=>1,'in.ua'=>1,'co.nf'=>1,'ny.us'=>1,'co.us'=>1];protected$lang=NULL;protected$locale=NULL;protected$mediaSiteVersion=NULL;protected$protocol=NULL;protected$secure=NULL;protected$hostName=NULL;protected$host=NULL;protected$port=NULL;protected$domainParts=NULL;protected$portDefined=FALSE;protected$path=NULL;protected$query=NULL;protected$fragment=NULL;protected$ajax=NULL;protected$scriptName=NULL;protected$appRoot=NULL;protected$basePath=NULL;protected$requestPath=NULL;protected$domainUrl=NULL;protected$baseUrl=NULL;protected$requestUrl=NULL;protected$fullUrl=NULL;protected$method=NULL;protected$referer=NULL;protected$serverIp=NULL;protected$clientIp=NULL;protected$contentLength=NULL;protected$microtime=NULL;protected$headers=NULL;protected$params=NULL;protected$appRequest=NULL;protected$controllerName=NULL;protected$actionName=NULL;protected$globalServer=[];protected$globalGet=[];protected$globalPost=[];protected$globalCookies=[];protected$globalFiles=[];}}
namespace MvcCore\Request{trait InternalInits{public static function ParseHttpAcceptLang($languagesList){$languages=[];$languageRanges=explode(',',trim($languagesList));foreach($languageRanges as$languageRange){$regExpResult=preg_match("/(\*|[a-zA-Z0-9]{1,8}(?:-[a-zA-Z0-9]{1,8})*)(?:\s*;\s*q\s*=\s*(0(?:\.\d{0,3})|1(?:\.0{0,3})))?/",trim($languageRange),$match);if($regExpResult){$priority=isset($match[2])?(string)floatval($match[2]):'1.0';if(!isset($languages[$priority]))$languages[$priority]=[];$langOrLangWithLocale=str_replace('-','_',$match[1]);$delimiterPos=strpos($langOrLangWithLocale,'_');if($delimiterPos!==FALSE){$languages[$priority][]=[strtolower(substr($langOrLangWithLocale,0,$delimiterPos)),strtoupper(substr($langOrLangWithLocale,$delimiterPos+1))];}else{$languages[$priority][]=[strtolower($langOrLangWithLocale),NULL];}}}krsort($languages);reset($languages);return$languages;}protected function initUrlSegments(){$absoluteUrl=$this->GetProtocol().'//'.$this->globalServer['HTTP_HOST'].rawurldecode($this->globalServer['REQUEST_URI']);$parsedUrl=parse_url($absoluteUrl);if(isset($parsedUrl['port'])){$this->port=$parsedUrl['port'];$this->portDefined=TRUE;}$this->path=isset($parsedUrl['path'])?$parsedUrl['path']:'';$this->path=trim(mb_substr($this->path,mb_strlen($this->GetBasePath())),'?&');$this->query=trim(isset($parsedUrl['query'])?$parsedUrl['query']:'','?&');$this->fragment=trim(isset($parsedUrl['fragment'])?$parsedUrl['fragment']:'','#');}protected function initHeaders(){if(function_exists('getallheaders')){$headers=getallheaders();}else{$headers=[];foreach($this->globalServer as$name=>$value){if(substr($name,0,5)=='HTTP_'){$headers[str_replace(' ','-',ucwords(strtolower(str_replace('_',' ',substr($name,5)))))]=$value;}else if($name=="CONTENT_TYPE"){$headers["Content-Type"]=$value;}else if($name=="CONTENT_LENGTH"){$headers["Content-Length"]=$value;}}}$this->headers=$headers;}protected function initParams(){$params=array_merge($this->globalGet);if($this->GetMethod()==self::METHOD_POST){$postValues=[];if(count($this->globalPost)>0){$postValues=$this->globalPost;}else{$postValues=$this->initParamsCompletePostData();}$params=array_merge($params,$postValues);}$this->params=$params;}protected function initParamsCompletePostData(){$result=[];$rawPhpInput=\Packager_Php_Wrapper::FileGetContents('php://input');$decodedJsonResult=\MvcCore\Tool::DecodeJson($rawPhpInput);if($decodedJsonResult->success){$result=(array)$decodedJsonResult->data;}else{$rows=explode('&',$rawPhpInput);foreach($rows as$row){list($key,$value)=explode('=',$row);$result[$key]=$value;}}return$result;}protected function getParamFromCollection(&$paramsCollection=[],$name="",$pregReplaceAllowedChars="a-zA-Z0-9_;, /\-\@\:",$ifNullValue=NULL,$targetType=NULL){if(!isset($paramsCollection[$name]))return NULL;if(is_array($paramsCollection[$name])){$result=[];$paramsCollection=$paramsCollection[$name];foreach($paramsCollection as$key=>&$value){$cleanedKey=$this->cleanParamValue($key,$pregReplaceAllowedChars);$result[$cleanedKey]=$this->getParamItem($value,$pregReplaceAllowedChars,$ifNullValue,$targetType);}return$result;}else{return$this->getParamItem($paramsCollection[$name],$pregReplaceAllowedChars,$ifNullValue,$targetType);}}protected function initScriptNameAndBasePath(){$this->basePath='';$this->scriptName=str_replace('\\','/',$this->globalServer['SCRIPT_NAME']);$lastSlashPos=mb_strrpos($this->scriptName,'/');if($lastSlashPos!==0){$redirectUrl=isset($this->globalServer['REDIRECT_URL'])?$this->globalServer['REDIRECT_URL']:'';$redirectUrlLength=mb_strlen($redirectUrl);$requestUri=$this->globalServer['REQUEST_URI'];$questionMarkPos=mb_strpos($requestUri,'?');if($questionMarkPos!==FALSE)$requestUri=mb_substr($requestUri,0,$questionMarkPos);if($redirectUrlLength===0||($redirectUrlLength>0&&$redirectUrl===$requestUri)){$this->basePath=mb_substr($this->scriptName,0,$lastSlashPos);$this->scriptName='/'.mb_substr($this->scriptName,$lastSlashPos+1);}else{$requestUriPosInRedirectUri=mb_strrpos($redirectUrl,$requestUri);$apacheRedirectedPath=mb_substr($redirectUrl,0,$requestUriPosInRedirectUri);$this->scriptName=mb_substr($this->scriptName,mb_strlen($apacheRedirectedPath));$lastSlashPos=mb_strrpos($this->scriptName,'/');$this->basePath=mb_substr($this->scriptName,0,$lastSlashPos);}}else{$this->scriptName='/'.mb_substr($this->scriptName,$lastSlashPos+1);}}protected function initLangAndLocale(){$rawUaLanguages=$this->globalServer['HTTP_ACCEPT_LANGUAGE'];if(extension_loaded('Intl')){$langAndLocaleStr=\locale_accept_from_http($rawUaLanguages);$langAndLocaleArr=$langAndLocaleStr!==NULL?explode('_',$langAndLocaleStr):[NULL,NULL];}else{$languagesAndLocales=static::ParseHttpAcceptLang($rawUaLanguages);$langAndLocaleArr=current($languagesAndLocales);if(is_array($langAndLocaleArr))$langAndLocaleArr=current($langAndLocaleArr);}if($langAndLocaleArr[0]===NULL)$langAndLocaleArr[0]='';if(count($langAndLocaleArr)>1&&$langAndLocaleArr[1]===NULL)$langAndLocaleArr[1]='';list($this->lang,$this->locale)=$langAndLocaleArr;}protected function initDomainSegments(){$hostName=$this->GetHostName();$this->domainParts=[];$lastDotPos=mb_strrpos($hostName,'.');if($lastDotPos===FALSE){$this->domainParts=[NULL,NULL,$hostName];}else{$first=mb_substr($hostName,$lastDotPos+1);$second=mb_substr($hostName,0,$lastDotPos);if(self::$twoSegmentTlds){$lastDotPos=mb_strrpos($second,'.');if($lastDotPos!==FALSE){$firstTmp=mb_substr($second,$lastDotPos+1).'.'.$first;if(isset(self::$twoSegmentTlds[$firstTmp])){$first=$firstTmp;$second=$firstTmp=mb_substr($second,0,$lastDotPos);}}}$lastDotPos=mb_strrpos($second,'.');if($lastDotPos===FALSE){$this->domainParts=[NULL,$second,$first];}else{$third=mb_substr($second,0,$lastDotPos);$second=mb_substr($second,$lastDotPos+1);$this->domainParts=[$third,$second,$first];}}}}}
namespace MvcCore\Request{trait Instancing{public static function CreateInstance(array&$server=[],array&$get=[],array&$post=[],array&$cookie=[],array&$files=[]){$requestClass=\MvcCore\Application::GetInstance()->GetRequestClass();return new$requestClass($server,$get,$post,$cookie,$files);}public function __construct(array&$server=[],array&$get=[],array&$post=[],array&$cookie=[],array&$files=[]){$this->globalServer=&$server;$this->globalGet=&$get;$this->globalPost=&$post;$this->globalCookies=&$cookie;$this->globalFiles=&$files;}public function&InitAll(){$this->GetScriptName();$this->GetAppRoot();$this->GetMethod();$this->GetBasePath();$this->GetProtocol();$this->IsSecure();$this->GetHostName();$this->GetHost();$this->GetRequestPath();$this->GetFullUrl();$this->GetReferer();$this->GetMicrotime();$this->IsAjax();if($this->port===NULL)$this->initUrlSegments();if($this->headers===NULL)$this->initHeaders();if($this->params===NULL)$this->initParams();$this->GetServerIp();$this->GetClientIp();$this->GetContentLength();return$this;}}}
namespace MvcCore\Request{trait GettersSetters{public static function AddTwoSegmentTlds(){$tlds=func_get_args();if(count($tlds)===1&&is_array($tlds[0]))$tlds=$tlds[0];foreach($tlds as$tld)self::$twoSegmentTlds[$tld]=TRUE;}public function IsInternalRequest(){if($this->appRequest===NULL){$ctrl=$this->GetControllerName();$action=$this->GetActionName();if($ctrl!==NULL&&$action!==NULL){$this->appRequest=FALSE;if($ctrl==='controller'&&$action==='asset')$this->appRequest=TRUE;}}return$this->appRequest;}public function&SetControllerName($controllerName){$this->controllerName=$controllerName;$this->params['controller']=$controllerName;return$this;}public function GetControllerName(){if($this->controllerName===NULL){if(isset($this->globalGet['controller']))$this->controllerName=$this->GetParam('controller','a-zA-Z0-9\-_/','','string');}return$this->controllerName;}public function&SetActionName($actionName){$this->actionName=$actionName;$this->params['action']=$actionName;return$this;}public function GetActionName(){if($this->actionName===NULL){if(isset($this->globalGet['action']))$this->actionName=$this->GetParam('action','a-zA-Z0-9\-_','','string');}return$this->actionName;}public function&SetLang($lang){$this->lang=$lang;return$this;}public function GetLang(){if($this->lang===NULL)$this->initLangAndLocale();return$this->lang;}public function&SetLocale($locale){$this->locale=$locale;return$this;}public function GetLocale(){if($this->locale===NULL)$this->initLangAndLocale();return$this->locale;}public function&SetMediaSiteVersion($mediaSiteVersion){$this->mediaSiteVersion=$mediaSiteVersion;return$this;}public function GetMediaSiteVersion(){return$this->mediaSiteVersion;}public function __call($name,$arguments=[]){$nameBegin=strtolower(substr($name,0,3));$prop=lcfirst(substr($name,3));if($nameBegin=='get'&&isset($this->$prop)){return$this->$prop;}else if($nameBegin=='set'){$this->$prop=isset($arguments[0])?$arguments[0]:NULL;return$this;}else{throw new\InvalidArgumentException('['.__CLASS__."] No property with name '$prop' defined.");}}public function __get($name){return isset($this->$name)?$this->$name:NULL;}public function __set($name,$value){$this->$name=$value;return$this;}public function GetScriptName(){if($this->scriptName===NULL)$this->initScriptNameAndBasePath();return$this->scriptName;}public function GetAppRoot(){if($this->appRoot===NULL){$indexFilePath=ucfirst(str_replace(['\\','//'],'/',$this->globalServer['SCRIPT_FILENAME']));if(strpos(PACKAGER_PHP_FILE_BASE.'/vendor/mvccore/mvccore/src/MvcCore/Request/GettersSetters.php','phar://')===0){$this->appRoot='phar://'.$indexFilePath;}else{$this->appRoot=substr($indexFilePath,0,mb_strrpos($indexFilePath,'/'));}}return$this->appRoot;}public function&SetMethod($rawMethod){$this->method=$rawMethod;return$this;}public function GetMethod(){if($this->method===NULL){$this->method=strtoupper($this->globalServer['REQUEST_METHOD']);}return$this->method;}public function&SetBasePath($rawBasePath){$this->basePath=$rawBasePath;$this->baseUrl=NULL;$this->requestUrl=NULL;$this->fullUrl=NULL;return$this;}public function GetBasePath(){if($this->basePath===NULL)$this->initScriptNameAndBasePath();return$this->basePath;}public function&SetProtocol($rawProtocol){$this->protocol=$rawProtocol;$this->domainUrl=NULL;$this->baseUrl=NULL;$this->requestUrl=NULL;$this->fullUrl=NULL;return$this;}public function GetProtocol(){if($this->protocol===NULL){$this->protocol=(isset($this->globalServer['HTTPS'])&&strtolower($this->globalServer['HTTPS'])=='on')?static::PROTOCOL_HTTPS:static::PROTOCOL_HTTP;}return$this->protocol;}public function IsSecure(){if($this->secure===NULL)$this->secure=$this->GetProtocol()==static::PROTOCOL_HTTPS;return$this->secure;}public function GetReferer($rawInput=FALSE){if($this->referer===NULL){$referer=isset($this->globalServer['HTTP_REFERER'])?$this->globalServer['HTTP_REFERER']:'';if($referer){while(mb_strpos($referer,'%')!==FALSE)$referer=rawurldecode($referer);$referer=filter_var($referer,FILTER_SANITIZE_URL)?:'';}$this->referer=$referer;}return$rawInput?$this->referer:static::HtmlSpecialChars($this->referer);}public function GetMicrotime(){if($this->microtime===NULL)$this->microtime=$this->globalServer['REQUEST_TIME_FLOAT'];return$this->microtime;}public function&SetTopLevelDomain($topLevelDomain){if($this->domainParts===NULL)$this->initDomainSegments();$this->domainParts[2]=$topLevelDomain;$this->hostName=trim(implode('.',$this->domainParts),'.');if($this->hostName&&$this->portDefined)$this->host=$this->hostName.':'.$this->port;$this->domainUrl=NULL;$this->baseUrl=NULL;$this->requestUrl=NULL;$this->fullUrl=NULL;return$this;}public function GetTopLevelDomain(){if($this->domainParts===NULL)$this->initDomainSegments();return$this->domainParts[2];}public function&SetSecondLevelDomain($secondLevelDomain){if($this->domainParts===NULL)$this->initDomainSegments();$this->domainParts[1]=$secondLevelDomain;$this->hostName=trim(implode('.',$this->domainParts),'.');if($this->hostName&&$this->portDefined)$this->host=$this->hostName.':'.$this->port;$this->domainUrl=NULL;$this->baseUrl=NULL;$this->requestUrl=NULL;$this->fullUrl=NULL;return$this;}public function GetSecondLevelDomain(){if($this->domainParts===NULL)$this->initDomainSegments();return isset($this->domainParts[1])?$this->domainParts[1]:NULL;}public function&SetThirdLevelDomain($thirdLevelDomain){if($this->domainParts===NULL)$this->initDomainSegments();$this->domainParts[0]=$thirdLevelDomain;$this->hostName=trim(implode('.',$this->domainParts),'.');if($this->hostName&&$this->portDefined)$this->host=$this->hostName.':'.$this->port;$this->domainUrl=NULL;$this->baseUrl=NULL;$this->requestUrl=NULL;$this->fullUrl=NULL;return$this;}public function GetThirdLevelDomain(){if($this->domainParts===NULL)$this->initDomainSegments();return isset($this->domainParts[0])?$this->domainParts[0]:NULL;}public function&SetHostName($rawHostName){if($this->hostName!==$rawHostName)$this->domainParts=NULL;$this->hostName=$rawHostName;$this->domainUrl=NULL;$this->baseUrl=NULL;$this->requestUrl=NULL;$this->fullUrl=NULL;if($rawHostName&&$this->portDefined)$this->host=$rawHostName.':'.$this->port;return$this;}public function GetHostName(){if($this->hostName===NULL)$this->hostName=$this->globalServer['SERVER_NAME'];return$this->hostName;}public function&SetHost($rawHost){$this->host=$rawHost;$this->domainUrl=NULL;$this->baseUrl=NULL;$this->requestUrl=NULL;$this->fullUrl=NULL;$doubleDotPos=mb_strpos($rawHost,':');if($doubleDotPos!==FALSE){$hostName=mb_substr($rawHost,0,$doubleDotPos);$this->SetPort(mb_substr($rawHost,$doubleDotPos+1));}else{$hostName=$rawHost;$this->port='';$this->portDefined=FALSE;}return$this->SetHostName($hostName);}public function GetHost(){if($this->host===NULL)$this->host=$this->globalServer['HTTP_HOST'];return$this->host;}public function&SetPort($rawPort){$this->port=$rawPort;$this->domainUrl=NULL;$this->baseUrl=NULL;$this->requestUrl=NULL;$this->fullUrl=NULL;if(strlen($rawPort)>0){$this->host=$this->hostName.':'.$rawPort;$this->portDefined=TRUE;}else{$this->host=$this->hostName;$this->portDefined=FALSE;}return$this;}public function GetPort(){if($this->port===NULL)$this->initUrlSegments();return$this->port;}public function&SetPath($rawPathValue){$this->path=$rawPathValue;$this->requestUrl=NULL;$this->requestPath=NULL;$this->fullUrl=NULL;return$this;}public function GetPath($rawInput=FALSE){if($this->path===NULL)$this->initUrlSegments();return$rawInput?$this->path:static::HtmlSpecialChars($this->path);}public function&SetQuery($rawQuery){$this->query=ltrim($rawQuery,'?');$this->fullUrl=NULL;$this->requestPath=NULL;return$this;}public function GetQuery($withQuestionMark=FALSE,$rawInput=FALSE){if($this->query===NULL)$this->initUrlSegments();$result=($withQuestionMark&&mb_strlen($this->query)>0)?'?'.$this->query:$this->query;return$rawInput?$result:static::HtmlSpecialChars($result);}public function GetRequestPath($rawInput=FALSE){if($this->requestPath===NULL){$this->requestPath=$this->GetPath(TRUE).$this->GetQuery(TRUE,TRUE).$this->GetFragment(TRUE,TRUE);}return$rawInput?$this->requestPath:static::HtmlSpecialChars($this->requestPath);}public function GetDomainUrl(){if($this->domainUrl===NULL)$this->domainUrl=$this->GetProtocol().'//'.$this->GetHost();return$this->domainUrl;}public function GetBaseUrl(){if($this->baseUrl===NULL)$this->baseUrl=$this->GetDomainUrl().$this->GetBasePath();return$this->baseUrl;}public function GetRequestUrl($rawInput=FALSE){if($this->requestUrl===NULL)$this->requestUrl=$this->GetBaseUrl().$this->GetPath(TRUE);return$rawInput?$this->requestUrl:$this->HtmlSpecialChars($this->requestUrl);}public function GetFullUrl($rawInput=FALSE){if($this->fullUrl===NULL)$this->fullUrl=$this->GetRequestUrl(TRUE).$this->GetQuery(TRUE,TRUE).$this->GetFragment(TRUE,TRUE);return$rawInput?$this->fullUrl:static::HtmlSpecialChars($this->fullUrl);}public function GetFragment($withHash=FALSE,$rawInput=FALSE){if($this->fragment===NULL)$this->initUrlSegments();$result=($withHash&&mb_strlen($this->fragment)>0)?'?'.$this->fragment:$this->fragment;return$rawInput?$result:static::HtmlSpecialChars($result);}public function GetServerIp(){if($this->serverIp===NULL){$this->serverIp=(isset($this->globalServer['SERVER_ADDR'])?$this->globalServer['SERVER_ADDR']:(isset($this->globalServer['LOCAL_ADDR'])?$this->globalServer['LOCAL_ADDR']:''));}return$this->serverIp;}public function GetClientIp(){if($this->clientIp===NULL){$this->clientIp=(isset($this->globalServer['REMOTE_ADDR'])?$this->globalServer['REMOTE_ADDR']:(isset($this->globalServer['HTTP_X_CLIENT_IP'])?$this->globalServer['HTTP_X_CLIENT_IP']:''));}return$this->clientIp;}public function IsAjax(){if($this->ajax===NULL){$this->ajax=(isset($this->globalServer['HTTP_X_REQUESTED_WITH'])&&strlen($this->globalServer['HTTP_X_REQUESTED_WITH'])>0);}return$this->ajax;}public function GetContentLength(){if($this->contentLength===NULL){if(isset($this->globalServer['CONTENT_LENGTH'])&&ctype_digit($this->globalServer['CONTENT_LENGTH']))$this->contentLength=intval($this->globalServer['CONTENT_LENGTH']);}return$this->contentLength;}public static function HtmlSpecialChars($str){static$chars=['"'=>'&quot;',"'"=>'&apos;','<'=>'&lt;','>'=>'&gt;',];return strtr($str,$chars);}}}
namespace MvcCore\Request{trait CollectionsMethods{public function&GetGlobalCollection($type){$collection='global'.ucfirst(strtolower($type));return$this->{$collection};}public function&SetHeaders(array&$headers=[]){$this->headers=&$headers;return$this;}public function&GetHeaders($pregReplaceAllowedChars=['#[\<\>\'"]#'=>'']){if($this->headers===NULL)$this->initHeaders();if($pregReplaceAllowedChars===FALSE||$pregReplaceAllowedChars===''||$pregReplaceAllowedChars==='.*')return$this->headers;$cleanedHeaders=[];foreach($this->headers as$key=>&$value){$cleanedKey=$this->cleanParamValue($key,$pregReplaceAllowedChars);$cleanedHeaders[$cleanedKey]=$this->GetHeader($key,$pregReplaceAllowedChars);}return$cleanedHeaders;}public function&SetHeader($name='',$value=''){if($this->headers===NULL)$this->initHeaders();$this->headers[$name]=$value;return$this;}public function GetHeader($name='',$pregReplaceAllowedChars="a-zA-Z0-9_;, /\-\.\@\=\+\?\!",$ifNullValue=NULL,$targetType=NULL){if($this->headers===NULL)$this->initHeaders();return$this->getParamFromCollection($this->headers,$name,$pregReplaceAllowedChars,$ifNullValue,$targetType);}public function HasHeader($name=''){if($this->headers===NULL)$this->initHeaders();return isset($this->headers[$name]);}public function&SetParams(array&$params=[]){$this->params=&$params;return$this;}public function&GetParams($pregReplaceAllowedChars=['#[\<\>\'"]#'=>''],$onlyKeys=[]){if($this->params===NULL)$this->initParams();if($pregReplaceAllowedChars===FALSE||$pregReplaceAllowedChars===''||$pregReplaceAllowedChars==='.*'){if($onlyKeys){$result=array_intersect_key($this->params,array_flip($onlyKeys));}else{$result=$this->params;}return$result;}$cleanedParams=[];foreach($this->params as$key=>&$value){if($onlyKeys&&!in_array($key,$onlyKeys,TRUE))continue;$cleanedKey=$this->cleanParamValue($key,$pregReplaceAllowedChars);$cleanedParams[$cleanedKey]=$this->GetParam($key,$pregReplaceAllowedChars);}return$cleanedParams;}public function&SetParam($name='',$value=''){if($this->params===NULL)$this->initParams();$this->params[$name]=$value;return$this;}public function&RemoveParam($name=''){if($this->params===NULL)$this->initParams();unset($this->params[$name]);return$this;}public function GetParam($name='',$pregReplaceAllowedChars="a-zA-Z0-9_;, /\-\@\:",$ifNullValue=NULL,$targetType=NULL){if($this->params===NULL)$this->initParams();return$this->getParamFromCollection($this->params,$name,$pregReplaceAllowedChars,$ifNullValue,$targetType);}public function HasParam($name=''){if($this->params===NULL)$this->initParams();return isset($this->params[$name]);}public function&SetFiles(array&$files=[]){$this->globalFiles=&$files;return$this;}public function&GetFiles(){return$this->globalFiles;}public function&SetFile($file='',$data=[]){$this->globalFiles[$file]=$data;return$this;}public function GetFile($file=''){if(isset($this->globalFiles[$file]))return$this->globalFiles[$file];return[];}public function HasFile($file=''){return isset($this->globalFiles[$file]);}public function&SetCookies(array&$cookies=[]){$this->globalCookies=&$cookies;return$this;}public function&GetCookies($pregReplaceAllowedChars=['#[\<\>\'"]#'=>''],$onlyKeys=[]){if($pregReplaceAllowedChars===FALSE||$pregReplaceAllowedChars===''||$pregReplaceAllowedChars==='.*'){if($onlyKeys){$result=array_intersect_key($this->paglobalCookiesrams,array_flip($onlyKeys));}else{$result=$this->globalCookies;}return$result;}$cleanedCookies=[];foreach($this->globalCookies as$key=>&$value){if($onlyKeys&&!in_array($key,$onlyKeys,TRUE))continue;$cleanedKey=$this->cleanParamValue($key,$pregReplaceAllowedChars);$cleanedCookies[$cleanedKey]=$this->GetCookie($key,$pregReplaceAllowedChars);}return$cleanedCookies;}public function&SetCookie($name="",$value=""){$this->globalCookies[$name]=$value;return$this;}public function GetCookie($name='',$pregReplaceAllowedChars="a-zA-Z0-9_;, /\-\.\@\=\+\?\!",$ifNullValue=NULL,$targetType=NULL){return$this->getParamFromCollection($this->globalCookies,$name,$pregReplaceAllowedChars,$ifNullValue,$targetType);}public function HasCookie($name=''){return isset($this->globalCookies[$name]);}protected function getParamItem(&$rawValue=NULL,$pregReplaceAllowedChars="a-zA-Z0-9_;, /\-\@\:",$ifNullValue=NULL,$targetType=NULL){if($rawValue===NULL){if($targetType===NULL)return$ifNullValue;$result=is_scalar($ifNullValue)?$ifNullValue:clone$ifNullValue;settype($result,$targetType);return$result;}else{if(is_string($rawValue)&&mb_strlen(trim($rawValue))===0){$result="";if($targetType===NULL)return$result;$result=is_scalar($ifNullValue)?$ifNullValue:clone$ifNullValue;settype($result,$targetType);return$result;}else if($pregReplaceAllowedChars===FALSE||$pregReplaceAllowedChars==='.*'){$result=$rawValue;if($targetType===NULL)return$result;settype($result,$targetType);return$result;}else if(is_array($rawValue)){$result=[];foreach((array)$rawValue as$key=>&$value){$cleanedKey=$this->cleanParamValue($key,$pregReplaceAllowedChars);$result[$cleanedKey]=$this->getParamItem($value,$pregReplaceAllowedChars,$ifNullValue,$targetType);}return$result;}else{$result=$this->cleanParamValue($rawValue,$pregReplaceAllowedChars);if($targetType===NULL)return$result;settype($result,$targetType);return$result;}}}protected function cleanParamValue($rawValue,$pregReplaceAllowedChars="a-zA-Z0-9_;, /\-\@\:"){if($pregReplaceAllowedChars===FALSE){return$rawValue;}else if(is_array($pregReplaceAllowedChars)){foreach($pregReplaceAllowedChars as$pattern=>$replace){$replaceFn=mb_substr($pattern,0,1)==='#'?'preg_replace':'str_replace';$rawValue=$replaceFn($pattern,$replace,$rawValue);}return$rawValue;}else{return preg_replace("#[^".$pregReplaceAllowedChars."]#","",(string)$rawValue);}}}}
namespace MvcCore{interface ITool{public static function GetDashedFromPascalCase($pascalCase='');public static function GetPascalCaseFromDashed($dashed='');public static function GetUnderscoredFromPascalCase($pascalCase='');public static function GetPascalCaseFromUnderscored($underscored='');public static function EncodeJson(&$data);public static function DecodeJson(&$jsonStr);public static function Invoke($internalFuncName,array$args,callable$onError);public static function CheckClassInterface($testClassName,$interfaceName,$checkStaticMethods=FALSE,$throwException=TRUE);public static function CheckClassTrait($testClassName,$traitName,$throwException=TRUE);}}
namespace MvcCore{interface ISession{const SESSION_METADATA_KEY='__MC';const DEFAULT_NAMESPACE_NAME='default';const EXPIRATION_SECONDS_MINUTE=60;const EXPIRATION_SECONDS_HOUR=3600;const EXPIRATION_SECONDS_DAY=86400;const EXPIRATION_SECONDS_WEEK=604800;const EXPIRATION_SECONDS_MONTH=2592000;const EXPIRATION_SECONDS_YEAR=31536000;public static function Start();public static function GetSessionStartTime();public static function GetSessionMetadata();public static function Close();public static function&GetNamespace($name=\MvcCore\ISession::DEFAULT_NAMESPACE_NAME);public function&SetExpirationHoops($hoops);public function&SetExpirationSeconds($seconds);public static function SendCookie();public function Destroy();public static function DestroyAll();public function __isset($key);public function __unset($key);public function __get($key);public function __set($key,$value);public function __debugInfo();public function count();}}
namespace MvcCore{interface IResponse{const OK=200;const MOVED_PERMANENTLY=301;const SEE_OTHER=303;const NOT_FOUND=404;const INTERNAL_SERVER_ERROR=500;const HEADER_X_MVCCORE_CPU_RAM='X-MvcCore-Cpu-Ram';public static function CreateInstance($code=\MvcCore\IResponse::OK,$headers=[],$body='');public function&SetCode($code);public function GetCode();public function&SetHeaders(array$headers=[]);public function&SetHeader($name,$value);public function GetHeader($name);public function HasHeader($name);public function&SetEncoding($encoding='utf-8');public function GetEncoding();public function&SetBody($body);public function&PrependBody($body);public function&AppendBody($body);public function&GetBody();public function UpdateHeaders();public function IsRedirect();public function IsHtmlOutput();public function IsXmlOutput();public function IsSent();public function Send();public function SetCookie($name,$value,$lifetime=0,$path='/',$domain=NULL,$secure=NULL,$httpOnly=TRUE);public function DeleteCookie($name,$path='/',$domain=NULL,$secure=NULL);public function&SetDisabledHeaders();public function GetDisabledHeaders();}}
namespace MvcCore\Config{trait PropsGettersSetters{public static$SystemConfigPath='/%appPath%/config.ini';protected static$environment=NULL;protected static$systemConfig=NULL;protected static$configsCache=[];protected static$booleanValues=['yes'=>TRUE,'no'=>FALSE,'true'=>TRUE,'false'=>FALSE,];private static$_app;private static$_appRoot;protected$result=FALSE;protected$objectTypes=[];public static function IsDevelopment($autoloadSystemConfig=FALSE){return static::GetEnvironment($autoloadSystemConfig)===static::ENVIRONMENT_DEVELOPMENT;}public static function IsBeta($autoloadSystemConfig=FALSE){return static::GetEnvironment($autoloadSystemConfig)===static::ENVIRONMENT_BETA;}public static function IsAlpha($autoloadSystemConfig=FALSE){return static::GetEnvironment($autoloadSystemConfig)===static::ENVIRONMENT_ALPHA;}public static function IsProduction($autoloadSystemConfig=FALSE){return static::GetEnvironment($autoloadSystemConfig)===static::ENVIRONMENT_PRODUCTION;}}}
namespace MvcCore\Ext\Routers\Module{trait Canonical{protected function canonicalRedirectQueryStringStrategy(){$req=&$this->request;$redirectToCanonicalUrl=FALSE;$requestGlobalGet=&$req->GetGlobalCollection('get');$requestedCtrlDc=isset($requestGlobalGet['controller'])?$requestGlobalGet['controller']:NULL;$requestedActionDc=isset($requestGlobalGet['action'])?$requestGlobalGet['action']:NULL;$toolClass=self::$toolClass;list($dfltCtrlPc,$dftlActionPc)=$this->application->GetDefaultControllerAndActionNames();$dfltCtrlDc=$toolClass::GetDashedFromPascalCase($dfltCtrlPc);$dftlActionDc=$toolClass::GetDashedFromPascalCase($dftlActionPc);$requestedParamsClone=array_merge([],$this->requestedParams);if($requestedCtrlDc===NULL&&$requestedParamsClone['controller']===$dfltCtrlDc){unset($requestedParamsClone['controller']);$redirectToCanonicalUrl=TRUE;}else if($requestedCtrlDc!==NULL&&$requestedCtrlDc===$dfltCtrlDc){unset($requestedParamsClone['controller']);$redirectToCanonicalUrl=TRUE;}if($requestedActionDc===NULL&&$requestedParamsClone['action']===$dftlActionDc){unset($requestedParamsClone['action']);$redirectToCanonicalUrl=TRUE;}else if($requestedActionDc!==NULL&&$requestedActionDc===$dftlActionDc){unset($requestedParamsClone['action']);$redirectToCanonicalUrl=TRUE;}if($this->currentDomainRoute!==NULL){$targetDomainRoute=$this->currentDomainRoute;$domainParams=array_intersect_key($requestedParamsClone,$this->requestedDomainParams);$requestedParamsClone=array_diff_key($requestedParamsClone,$this->requestedDomainParams);list($domainUrlBaseSection,)=$targetDomainRoute->Url($this->request,$domainParams,$this->requestedDomainParams,'');if(mb_strpos($domainUrlBaseSection,'//')===FALSE)$domainUrlBaseSection=$req->GetDomainUrl().$domainUrlBaseSection;if(mb_strlen($domainUrlBaseSection)>0&&$domainUrlBaseSection!==$req->GetBaseUrl())$redirectToCanonicalUrl=TRUE;}if($redirectToCanonicalUrl){$selfCanonicalUrl=$this->UrlByQueryString($this->selfRouteName,$requestedParamsClone);$this->redirect($selfCanonicalUrl,\MvcCore\IResponse::MOVED_PERMANENTLY);return FALSE;}return TRUE;}protected function canonicalRedirectRewriteRoutesStrategy(){$req=&$this->request;$redirectToCanonicalUrl=FALSE;$defaultParams=$this->GetDefaultParams()?:[];if($this->currentDomainRoute!==NULL){$targetDomainRoute=$this->currentDomainRoute;$domainParams=array_intersect_key($defaultParams,$this->requestedDomainParams);$defaultParamsClone=array_diff_key($defaultParams,$this->requestedDomainParams);$requestedParamsClone=array_diff_key($this->requestedParams,$this->requestedDomainParams);list($domainUrlBaseSection,)=$targetDomainRoute->Url($this->request,$domainParams,$defaultParams,'');list($selfUrlDomainAndBasePart,$selfUrlPathAndQueryPart)=$this->currentRoute->Url($req,$requestedParamsClone,$defaultParamsClone,$this->getQueryStringParamsSepatator());if(mb_strpos($domainUrlBaseSection,'//')===FALSE)$domainUrlBaseSection=$req->GetDomainUrl().$domainUrlBaseSection;if(mb_strlen($domainUrlBaseSection)>0&&$domainUrlBaseSection!==$req->GetBaseUrl())$redirectToCanonicalUrl=TRUE;}else{$domainUrlBaseSection=NULL;list($selfUrlDomainAndBasePart,$selfUrlPathAndQueryPart)=$this->currentRoute->Url($req,$this->requestedParams,$defaultParams,$this->getQueryStringParamsSepatator());if(mb_strpos($selfUrlDomainAndBasePart,'//')===FALSE)$selfUrlDomainAndBasePart=$req->GetDomainUrl().$selfUrlDomainAndBasePart;if(mb_strlen($selfUrlDomainAndBasePart)>0&&$selfUrlDomainAndBasePart!==$req->GetBaseUrl())$redirectToCanonicalUrl=TRUE;}if(mb_strlen($selfUrlPathAndQueryPart)>0){$path=$req->GetPath(TRUE);$requestedUrl=$path===''?'/':$path;if(mb_strpos($selfUrlPathAndQueryPart,'?')!==FALSE){$selfUrlPathAndQueryPart=rawurldecode($selfUrlPathAndQueryPart);$requestedUrl.=$req->GetQuery(TRUE,TRUE);}if($selfUrlPathAndQueryPart!==$requestedUrl)$redirectToCanonicalUrl=TRUE;}if($redirectToCanonicalUrl){$selfCanonicalUrl=$this->Url($this->selfRouteName,$this->requestedParams);$this->redirect($selfCanonicalUrl,\MvcCore\IResponse::MOVED_PERMANENTLY);return FALSE;}return TRUE;}}}
namespace MvcCore\Ext\Routers\Module{trait DomainRouting{protected function routeDetectStrategy(){list($requestCtrlName,$requestActionName)=parent::routeDetectStrategy();if(!$this->internalRequest)$this->domainRouting();return[$requestCtrlName,$requestActionName];}protected function domainRouting(){$request=&$this->request;if($this->routeGetRequestsOnly){trigger_error("[".__CLASS__."] Routing only GET requests with special media "."site version or localization conditions is not allowed in module router.",E_USER_WARNING);$this->routeGetRequestsOnly=FALSE;}$allMatchedParams=[];foreach($this->domainRoutes as&$route){$allMatchedParams=$route->Matches($request);if($allMatchedParams!==NULL){$this->currentDomainRoute=clone$route;$this->currentModule=$this->currentDomainRoute->GetModule();$this->currentDomainRoute->SetMatchedParams($allMatchedParams);$this->domainRoutingSetRequestedAndDefaultParams($allMatchedParams);$break=$this->domainRoutingFilterParams($allMatchedParams);if($break)break;}}if($this->currentDomainRoute!==NULL){$localizationUrlParamName=static::URL_PARAM_LOCALIZATION;if(isset($this->defaultParams[$localizationUrlParamName])){if(!$this->prepareSetUpRequestLocalizationIfValid($this->defaultParams[$localizationUrlParamName],FALSE))$this->switchUriParamLocalization=implode(static::LANG_AND_LOCALE_SEPARATOR,$this->defaultLocalization);}$mediaUrlParamName=static::URL_PARAM_MEDIA_VERSION;if(isset($this->defaultParams[$mediaUrlParamName]))if(!$this->prepareSetUpRequestMediaSiteVersionIfValid($this->defaultParams[$mediaUrlParamName]))$this->switchUriParamMediaSiteVersion=static::MEDIA_VERSION_FULL;}}protected function domainRoutingSetRequestedAndDefaultParams(array&$allMatchedParams){$currentRoute=&$this->currentDomainRoute;$allMatchedParams[static::URL_PARAM_MODULE]=$currentRoute->GetModule();$this->defaultParams=array_merge($currentRoute->GetDefaults(),$allMatchedParams);$this->requestedDomainParams=array_merge([],$allMatchedParams);}protected function domainRoutingFilterParams(array&$allMatchedParams){$request=&$this->request;$defaultParamsBefore=array_merge([],$this->defaultParams);$requestParams=array_merge([],$this->defaultParams);list($success,$requestParamsFiltered)=$this->currentDomainRoute->Filter($requestParams,$this->defaultParams,\MvcCore\IRoute::CONFIG_FILTER_IN);if($success===FALSE){$this->defaultParams=$defaultParamsBefore;$this->requestedDomainParams=[];$allMatchedParams=[];$this->currentDomainRoute=NULL;return FALSE;}$requestParams=array_merge($this->request->GetParams(FALSE),$requestParamsFiltered);$this->request->SetParams($requestParams);return TRUE;}protected function routeSetUpDefaultForHomeIfNoMatch(){$domainRouteNamespace=NULL;if($this->currentDomainRoute!==NULL){$domainRouteNamespace=$this->currentDomainRoute->GetNamespace();}if($this->currentRoute===NULL){$request=&$this->request;$requestIsHome=(trim($request->GetPath(),'/')==''||$request->GetPath()==$request->GetScriptName());if($requestIsHome||$this->routeToDefaultIfNotMatch){list($dfltCtrl,$dftlAction)=$this->application->GetDefaultControllerAndActionNames();if($domainRouteNamespace!==NULL){if(substr($dfltCtrl,0,2)!='//'&&substr($dfltCtrl,0,1)!='\\')$dfltCtrl=rtrim($domainRouteNamespace,'\\').'\\'.$dfltCtrl;}$this->SetOrCreateDefaultRouteAsCurrent(static::DEFAULT_ROUTE_NAME,$dfltCtrl,$dftlAction);$requestParams=array_merge([],$this->request->GetParams(FALSE));unset($requestParams['controller'],$requestParams['action']);$this->requestedParams=&$requestParams;}}else if($domainRouteNamespace!==NULL){$currentRouteCtrl=$this->currentRoute->GetController();if(substr($currentRouteCtrl,0,2)!='//'&&substr($currentRouteCtrl,0,1)!='\\'){$currentRouteCtrl=rtrim($domainRouteNamespace,'\\').'\\'.$currentRouteCtrl;$this->RedefineRoutedTarget($currentRouteCtrl,NULL,TRUE);}}return$this;}protected function rewriteRoutingCloneRouteToCurrent(\MvcCore\IRoute&$route,array&$allMatchedParams){$modules=$route->GetAdvancedConfigProperty('modules');if(is_array($modules)&&!in_array($this->currentModule,$modules))return TRUE;$this->currentRoute=clone$route;$this->currentRoute->SetMatchedParams($allMatchedParams);return FALSE;}}}
namespace MvcCore{interface IDebug{const DEBUG='debug',INFO='info',WARNING='warning',ERROR='error',EXCEPTION='exception',CRITICAL='critical',JAVASCRIPT='javascript';public static function Init($forceDevelopmentMode=NULL);public static function Timer($name=NULL);public static function Dump($value,$return=FALSE,$exit=FALSE);public static function BarDump($value,$title=NULL,$options=[]);public static function Log($value,$priority=\MvcCore\IDebug::INFO);public static function FireLog($value,$priority=\MvcCore\IDebug::DEBUG);public static function Exception($exception,$exit=TRUE);public static function ShutdownHandler();}}
namespace MvcCore\Ext\Routers\Module{trait Props{protected$domainRoutes=[];protected$currentDomainRoute=NULL;protected$currentModule=NULL;protected static$routeDomainClass='\MvcCore\Ext\Routers\Modules\Route';}}
namespace MvcCore{interface IConfig{const ENVIRONMENT_DEVELOPMENT='development';const ENVIRONMENT_BETA='beta';const ENVIRONMENT_ALPHA='alpha';const ENVIRONMENT_PRODUCTION='production';public static function IsDevelopment($autoloadSystemConfig=FALSE);public static function IsBeta($autoloadSystemConfig=FALSE);public static function IsAlpha($autoloadSystemConfig=FALSE);public static function IsProduction($autoloadSystemConfig=FALSE);public static function GetEnvironment();public static function SetEnvironment($environment=\MvcCore\IConfig::ENVIRONMENT_PRODUCTION);public static function&CreateInstance();public static function&GetSystem();public static function&GetConfig($appRootRelativePath);}}
namespace MvcCore{interface IApplication{const VERSION='5.0.0-alpha';const COMPILED_PHP='PHP';const COMPILED_PHAR='PHAR';const COMPILED_SFU='SFU';const NOT_COMPILED='';public static function&GetInstance();public function GetCompiled();public function GetConfigClass();public function GetControllerClass();public function GetDebugClass();public function GetRequestClass();public function GetResponseClass();public function GetRouteClass();public function GetRouterClass();public function GetSessionClass();public function GetToolClass();public function GetViewClass();public function&GetRouter();public function&GetController();public function&GetRequest();public function&GetResponse();public function GetAppDir();public function GetControllersDir();public function GetViewsDir();public function GetDefaultControllerAndActionNames();public function&SetCompiled($compiled='');public function&SetConfigClass($configClass);public function&SetControllerClass($controllerClass);public function&SetDebugClass($debugClass);public function&SetRequestClass($requestClass);public function&SetResponseClass($responseClass);public function&SetRouteClass($routerClass);public function&SetRouterClass($routerClass);public function&SetSessionClass($sessionClass);public function&SetToolClass($toolClass);public function&SetViewClass($viewClass);public function&SetAppDir($appDir);public function&SetController(\MvcCore\IController$controller=NULL);public function&SetControllersDir($controllersDir);public function&SetViewsDir($viewsDir);public function&SetDefaultControllerName($defaultControllerName);public function&SetDefaultControllerDefaultActionName($defaultActionName);public function&SetDefaultControllerErrorActionName($defaultControllerErrorActionName);public function&SetDefaultControllerNotFoundActionName($defaultControllerNotFoundActionName);public function&AddPreRouteHandler(callable$handler,$priorityIndex=NULL);public function&AddPostRouteHandler(callable$handler,$priorityIndex=NULL);public function&AddPreDispatchHandler(callable$handler,$priorityIndex=NULL);public function&AddPostDispatchHandler(callable$handler,$priorityIndex=NULL);public function Run($singleFileUrl=FALSE);public function SessionStart();public function RouteRequest();public function ProcessCustomHandlers(&$handlers=[]);public function DispatchRequest();public function DispatchControllerAction($controllerClassFullName,$actionNamePc,$viewScriptFullPath,callable$exceptionCallback);public function Url($controllerActionOrRouteName='Index:Index',$params=[]);public function Terminate();public function DispatchException($exceptionOrMessage,$code=NULL);public function RenderError(\Exception$e);public function RenderNotFound($exceptionMessage='');public function RenderError500PlainText($text='');public function RenderError404PlainText();public function GetDefaultControllerIfHasAction($actionName);public function CompleteControllerName($controllerNamePascalCase);public function IsErrorDispatched();public function IsNotFoundDispatched();}}
namespace MvcCore\Debug{trait Props{public static$EmailRecepient='admin@localhost';public static$LogDirectory='/Var/Logs';public static$InitGlobalShortHands=[];protected static$development=NULL;protected static$handlers=['timer'=>'timerHandler','dump'=>'dumpHandler','barDump'=>'dumpHandler','log'=>'dumpHandler','fireLog'=>'dumpHandler','exceptionHandler'=>'exceptionHandler','shutdownHandler'=>'ShutdownHandler',];protected static$dumps=[];protected static$timers=[];protected static$originalDebugClass=TRUE;protected static$logDirectoryInitialized=FALSE;protected static$app;protected static$requestBegin;}}
namespace MvcCore\Debug{trait Initializations{public static function Init($forceDevelopmentMode=NULL){if(static::$development!==NULL)return;static::$app=&\MvcCore\Application::GetInstance();static::$requestBegin=static::$app->GetRequest()->GetMicrotime();if(gettype($forceDevelopmentMode)=='boolean'){static::$development=$forceDevelopmentMode;}else{$configClass=static::$app->GetConfigClass();static::$development=$configClass::IsDevelopment(TRUE);}static::$originalDebugClass=ltrim(static::$app->GetDebugClass(),'\\')==__CLASS__;static::initHandlers();$initGlobalShortHandsHandler=static::$InitGlobalShortHands;$initGlobalShortHandsHandler(static::$development);}protected static function initHandlers(){$className=get_called_class();foreach(static::$handlers as$key=>$value){static::$handlers[$key]=[$className,$value];}register_shutdown_function(static::$handlers['shutdownHandler']);}protected static function initLogDirectory(){if(static::$logDirectoryInitialized)return;$configClass=static::$app->GetConfigClass();$cfg=$configClass::GetSystem();$logDirRelPath=static::$LogDirectory;if($cfg!==FALSE&&isset($cfg->debug)){$cfgDebug=&$cfg->debug;if(isset($cfgDebug->emailRecepient))static::$EmailRecepient=$cfgDebug->emailRecepient;if(isset($cfgDebug->logDirectory))$logDirRelPath=$cfgDebug->logDirectory;}$scriptFilename=$_SERVER['SCRIPT_FILENAME'];$scriptPath=php_sapi_name()=='cli'?str_replace('\\','/',getcwd()).'/'.$scriptFilename:str_replace('\\','/',$scriptFilename);$lastSlashPos=strrpos($scriptPath,'/');$appRoot=substr($scriptPath,0,$lastSlashPos!==FALSE?$lastSlashPos:strlen($scriptPath));$logDirAbsPath=$appRoot.$logDirRelPath;static::$LogDirectory=$logDirAbsPath;try{if(!\Packager_Php_Wrapper::IsDir($logDirAbsPath)){if(!\Packager_Php_Wrapper::MkDir($logDirAbsPath,0777,TRUE))throw new\RuntimeException('['.__CLASS__."] It was not possible to create log directory: `".$logDirAbsPath."`.");if(!is_writable($logDirAbsPath))if(!chmod($logDirAbsPath,0777))throw new\RuntimeException('['.__CLASS__."] It was not possible to setup privileges to log directory: `".$logDirAbsPath."` to writeable mode 0777.");}}catch(\Exception$e){die('['.__CLASS__.'] '.$e->getMessage());}static::$logDirectoryInitialized=TRUE;}}}
namespace MvcCore\Debug{trait Handlers{public static function Timer($name=NULL){return static::BarDump(call_user_func(static::$handlers['timer'],$name),$name,['backtraceIndex'=>3]);}public static function Dump($value,$return=FALSE,$exit=FALSE){if(static::$originalDebugClass){$options=['store'=>FALSE,'backtraceIndex'=>1];if($exit)$options['lastDump']=TRUE;$dumpedValue=static::dumpHandler($value,NULL,$options);}else{$dumpedValue=@call_user_func(static::$handlers['dump'],$value,$return);}if($return)return$dumpedValue;if(static::$development){echo $dumpedValue;}else{static::storeLogRecord($dumpedValue,\MvcCore\IDebug::DEBUG);}return$value;}public static function BarDump($value,$title=NULL,$options=[]){if(static::$originalDebugClass){if(!isset($options['backtraceIndex']))$options['backtraceIndex']=1;$options['store']=static::$development;$dumpedValue=static::dumpHandler($value,$title,$options);}else{$dumpedValue=@call_user_func_array(static::$handlers['barDump'],func_get_args());}if(!static::$development){static::storeLogRecord($dumpedValue,\MvcCore\IDebug::DEBUG);}return$value;}public static function Log($value,$priority=\MvcCore\IDebug::INFO){if(static::$originalDebugClass){$dumpedValue=static::dumpHandler($value,NULL,['store'=>FALSE,'backtraceIndex'=>1]);return static::storeLogRecord($dumpedValue,$priority);}else{return@call_user_func_array(static::$handlers['log'],func_get_args());}}public static function FireLog($value,$priority=\MvcCore\IDebug::DEBUG){$args=func_get_args();if(static::$originalDebugClass){$args=[$value,NULL,['priority'=>$priority]];}return call_user_func_array(static::$handlers['fireLog'],$args);}public static function Exception($exception,$exit=TRUE){if(static::$originalDebugClass){$dumpedValue=static::dumpHandler($exception,NULL,['store'=>!$exit,'backtraceIndex'=>1]);if(static::$development){echo $dumpedValue;}else{static::storeLogRecord($dumpedValue,\MvcCore\IDebug::EXCEPTION);}}else{@call_user_func_array(static::$handlers['exceptionHandler'],func_get_args());}}public static function ShutdownHandler(){$error=error_get_last();if(isset($error['type']))static::Exception($error);$dumpsCount=count(self::$dumps);if(!$dumpsCount)return;$app=\MvcCore\Application::GetInstance();$appRoot=$app->GetRequest()->GetAppRoot();$response=$app->GetResponse();if($response->HasHeader('Content-Type')&&!$response->IsHtmlOutput())return;$dumps='';$lastDump=FALSE;foreach(self::$dumps as$values){$options=$values[2];$dumps.='<div class="item">';if($values[1]!==NULL){$dumps.='<pre class="title">'.$values[1].'</pre>';}$file=$options['file'];$line=$options['line'];$displayedFile=str_replace('\\','/',$file);if(strpos($displayedFile,$appRoot)===0){$displayedFile=substr($displayedFile,strlen($appRoot));}$link='<a class="editor" href="editor://open/?file='.rawurlencode($file).'&amp;line='.$line.'">'.$displayedFile.':'.$line.'</a>';$dumps.='<div class="value">'.preg_replace("#\[([^\]]*)\]=>([^\n]*)\n(\s*)#","[$1] => ",str_replace("<required>","&lt;required&gt;",$link.$values[0])).'</div></div>';if(isset($values[2]['lastDump'])&&$values[2]['lastDump'])$lastDump=TRUE;}$template=\Packager_Php_Wrapper::FileGetContents(PACKAGER_PHP_FILE_BASE.'/vendor/mvccore/mvccore/src/MvcCore/Debug'.'/debug.html');echo  str_replace(['%mvccoreDumps%','%mvccoreDumpsCount%','%mvccoreDumpsClose%'],[$dumps,count(self::$dumps),$lastDump?'q(!0);':'q();'],$template);}protected static function timerHandler($name=NULL){$now=microtime(TRUE);if($name===NULL)return$now-static::$requestBegin;$difference=round((isset(static::$timers[$name])?$now-static::$timers[$name]:0)*1000)/1000;static::$timers[$name]=$now;return$difference;}protected static function dumpHandler($value,$title=NULL,$options=[]){ob_start();var_dump($value);$content=preg_replace("#\</small\>\n#",'</small>',ob_get_clean(),1);$content=preg_replace("#\<small\>([^\>]*)\>#",'',$content,1);$backtraceIndex=isset($options['backtraceIndex'])?$options['backtraceIndex']:2;$backtrace=debug_backtrace(DEBUG_BACKTRACE_IGNORE_ARGS,$backtraceIndex+1);$originalPlace=(object)$backtrace[$backtraceIndex];$options['file']=$originalPlace->file;$options['line']=$originalPlace->line;if($options['store'])self::$dumps[]=[$content,$title,$options];return$content;}protected static function storeLogRecord($value,$priority){$content=date('[Y-m-d H-i-s]')."\n".$value;$content=preg_replace("#\n(\s)#","\n\t$1",$content)."\n";if(!static::$logDirectoryInitialized)static::initLogDirectory();$fullPath=static::$LogDirectory.'/'.$priority.'.log';file_put_contents($fullPath,$content,FILE_APPEND);return$fullPath;}}}
namespace MvcCore\Ext\Routers\Localizations\Route{trait InternalInits{public function&InitAll(){$router=&$this->router;$localization=$router->GetLocalization();$localizationStr=implode($router::LANG_AND_LOCALE_SEPARATOR,$router->GetLocalization());$routesLocalization=$router->GetRouteRecordsByLanguageAndLocale()?$localizationStr:$localization[0];$noMatch=$this->match===NULL&&!array_key_exists($routesLocalization,$this->matchLocalized);$noReverse=$this->reverse===NULL&&!array_key_exists($routesLocalization,$this->reverseLocalized);if($noMatch&&$noReverse){$this->initMatchAndReverse($routesLocalization);}else if($noReverse){$this->initReverse($routesLocalization);}return$this;}protected function initMatchAndReverse($localization=NULL){$pattern=NULL;$reverse=NULL;if($this->pattern!==NULL){$pattern=$this->pattern;}else if(isset($this->patternLocalized[$localization])){$pattern=$this->patternLocalized[$localization];}else{$this->throwExceptionIfNoPattern();}if($this->reverse!==NULL){$reverse=$this->reverse;}else if(isset($this->reverseLocalized[$localization])){$reverse=$this->reverseLocalized[$localization];}$this->lastPatternParam=NULL;$match=addcslashes($pattern,"#(){}-?!=^$.+|:*\\");$reverse=$reverse!==NULL?$reverse:$pattern;list($reverseSections,$matchSections)=$this->initSectionsInfoForMatchAndReverse($reverse,$match);$this->reverseSectionsLocalized[$localization]=&$reverseSections;$this->reverseLocalized[$localization]=&$reverse;$constraintsLocalized=&$this->GetConstraints($localization);$reverseParams=$this->initReverseParams($reverse,$reverseSections,$constraintsLocalized,$match);$this->reverseParamsLocalized[$localization]=&$reverseParams;$this->reverseParams=array_keys($reverseParams);$this->initFlagsByPatternOrReverse($reverse);$this->matchLocalized[$localization]=$this->initMatchComposeRegex($match,$matchSections,$reverseParams,$constraintsLocalized);}protected function initReverse($localization=NULL){$reverse=NULL;if($this->reverse!==NULL){$reverse=$this->reverse;}else if(isset($this->reverseLocalized[$localization])){$reverse=$this->reverseLocalized[$localization];}else if($this->pattern!==NULL){$reverse=$this->pattern;}else if(isset($this->patternLocalized[$localization])){$reverse=$this->patternLocalized[$localization];}else{if($this->redirect!==NULL){$pattern=NULL;$match=NULL;if($this->pattern!==NULL){$pattern=$this->pattern;}else if(isset($this->patternLocalized[$localization])){$pattern=$this->patternLocalized[$localization];}if($this->match!==NULL){$match=$this->match;}else if(isset($this->matchLocalized[$localization])){$match=$this->matchLocalized[$localization];}return$this->initFlagsByPatternOrReverse($pattern!==NULL?$pattern:str_replace(['\\','(?',')?','/?'],'',$match));}$this->throwExceptionIfNoPattern();}$this->lastPatternParam=NULL;$reverseSections=$this->initSectionsInfo($reverse);$this->reverseSectionsLocalized[$localization]=&$reverseSections;$this->reverseLocalized[$localization]=&$reverse;$match=NULL;$reverseParams=$this->initReverseParams($reverse,$reverseSections,$this->GetConstraints($localization),$match);$this->reverseParamsLocalized[$localization]=&$reverseParams;$this->reverseParams=array_keys($reverseParams);$this->initFlagsByPatternOrReverse($reverse);}}}
namespace MvcCore\Ext\Routers\Module{trait RouteMethods{public function&SetDomainRoutes($routes=[],$autoInitialize=TRUE){if($autoInitialize){$this->domainRoutes=[];$this->AddDomainRoutes($routes);}else{$newRoutes=[];foreach($routes as$route)$newRoutes[$route->GetModule()]=$route;$this->domainRoutes=$newRoutes;}return$this;}public function&AddDomainRoutes($routes,$prepend=FALSE,$throwExceptionForDuplication=TRUE){if($prepend)$routes=array_reverse($routes);$routeClass=static::$routeClass;foreach($routes as$key=>$route){$numericKey=is_numeric($key);if($route instanceof\MvcCore\Ext\Routers\Modules\IRoute){if($numericKey){$routeModule=$route->GetModule();if($routeModule===NULL)throw new\InvalidArgumentException("[".__CLASS__."] Domain route cannot be configured without module "."record or without alphanumeric key in given routes collection.");}$this->AddDomainRoute($route,$prepend,$throwExceptionForDuplication);}else{if($numericKey)throw new\InvalidArgumentException("[".__CLASS__."] Domain route cannot be configured without "."alphanumeric key (representing module) in given routes collection.");if(is_array($route)){if(!isset($route['module']))$route['module']=$key;$this->AddDomainRoute($this->getRouteDomainInstance($route),$prepend,$throwExceptionForDuplication);}else if(is_string($route)){$routeCfgData=['pattern'=>$route,'module'=>$key,];$this->AddDomainRoute($routeClass::CreateInstance($routeCfgData),$prepend,$throwExceptionForDuplication);}else{throw new\InvalidArgumentException("[".__CLASS__."] Route is not possible to assign "."(key: \"$key\", value: ".serialize($route).").");}}}return$this;}public function&AddDomainRoute($routeCfgOrRoute,$prepend=FALSE,$throwExceptionForDuplication=TRUE){$instance=&$this->getRouteDomainInstance($routeCfgOrRoute);$routeModule=$instance->GetModule();if(isset($this->domainRoutes[$routeModule])&&$throwExceptionForDuplication)throw new\InvalidArgumentException("[".__CLASS__."] Route with module name `.$routeModule.` "."has already been defined between router domain routes.");if($prepend){$newItem=[$routeModule=>$instance];$this->domainRoutes=$newItem+$this->routes;}else{$this->domainRoutes[$routeModule]=$instance;}return$this;}protected function&getRouteDomainInstance(&$routeCfgOrRoute){if($routeCfgOrRoute instanceof\MvcCore\Ext\Routers\Modules\IRoute)return$routeCfgOrRoute->SetRouter($this);$routeClass=self::$routeDomainClass;return$routeClass::CreateInstance($routeCfgOrRoute)->SetRouter($this);}}}
namespace MvcCore\Ext\Routers\Module{trait UrlByQuery{public function UrlByQueryString($controllerActionOrRouteName='Index:Index',array&$params=[],$givenRouteName=NULL){if($givenRouteName=='self'){$params=array_merge($this->requestedParams?:[],$params);if($controllerActionOrRouteName===static::DEFAULT_ROUTE_NAME&&isset($params[static::URL_PARAM_PATH]))unset($params[static::URL_PARAM_PATH]);}$moduleParamName=static::URL_PARAM_MODULE;$moduleParamDefined=isset($params[$moduleParamName]);$currentDomainRouteMatched=$this->currentDomainRoute!==NULL;$targetModule=NULL;$targetDomainRoute=NULL;$domainParamsDefault=[];$domainParams=[];if($moduleParamDefined){$targetModule=$params[$moduleParamName];if(!isset($this->domainRoutes[$targetModule])){throw new\InvalidArgumentException("[".__CLASS__."] No domain route defined for module: `$targetModule`.");}else{$targetDomainRoute=$this->domainRoutes[$targetModule];$routeReverseParamsKeys=$targetDomainRoute->GetReverseParams();$routeReverseParamsDefaults=array_fill_keys($routeReverseParamsKeys,NULL);$targetDomainRouteDefaults=array_intersect_key($targetDomainRoute->GetDefaults(),$routeReverseParamsDefaults);$domainParamsDefault=array_merge($routeReverseParamsDefaults,$targetDomainRouteDefaults);$domainParamsDefault[$moduleParamName]=$targetModule;}}else if($currentDomainRouteMatched){$targetModule=$this->currentDomainRoute->GetModule();$targetDomainRoute=$this->currentDomainRoute;$domainParamsDefault=$this->requestedDomainParams;}if($targetModule!==NULL){$domainParams=array_intersect_key($params,$domainParamsDefault);$params=array_diff_key($params,$domainParamsDefault);$defaultDomainParams=array_merge([],$this->GetDefaultParams()?:[]);list($domainUrlBaseSection,)=$targetDomainRoute->Url($this->request,$domainParams,$defaultDomainParams,'');list($ctrlPc,$actionPc)=$this->urlByQueryStringCompleteCtrlAction($controllerActionOrRouteName,$params);$absolute=$this->urlGetAbsoluteParam($params);$result=$this->urlByQueryStringCompleteResult($ctrlPc,$actionPc,$params);if($domainUrlBaseSection!==NULL){$result=$domainUrlBaseSection.$result;}else{$result=$this->request->GetBasePath().$result;if($absolute)$result=$this->request->GetDomainUrl().$result;}return$result;}else{return parent::UrlByQueryString($controllerActionOrRouteName,$params,$givenRouteName);}}}}
namespace MvcCore\Config{trait Reading{public static function&GetSystem(){if(self::$systemConfig===NULL){$app=&\MvcCore\Application::GetInstance();$systemConfigClass=$app->GetConfigClass();$instance=$systemConfigClass::CreateInstance();self::$systemConfig=$instance->load(str_replace('%appPath%',$app->GetAppDir(),$systemConfigClass::$SystemConfigPath),TRUE);}return self::$systemConfig;}public static function&GetConfig($appRootRelativePath){if(!isset(self::$configsCache[$appRootRelativePath])){$app=&\MvcCore\Application::GetInstance();$systemConfigClass=$app->GetConfigClass();$instance=$systemConfigClass::CreateInstance();self::$configsCache[$appRootRelativePath]=$instance->load(str_replace('%appPath%',$app->GetAppDir(),$appRootRelativePath),FALSE);}return self::$configsCache[$appRootRelativePath];}public static function&CreateInstance(){$instance=new static();return$instance;}}}
namespace MvcCore\Ext\Routers\Localizations\Route{trait Matching{public function&Matches(\MvcCore\IRequest&$request,$localization=NULL){$matchedParams=NULL;$pattern=&$this->matchesGetPattern($localization);$subject=$this->matchesGetSubject($request);preg_match_all($pattern,$subject,$matchedValues);if(isset($matchedValues[0])&&count($matchedValues[0])>0){$matchedParams=$this->matchesParseRewriteParams($matchedValues,$this->GetDefaults($localization));if(isset($matchedParams[$this->lastPatternParam]))$matchedParams[$this->lastPatternParam]=rtrim($matchedParams[$this->lastPatternParam],'/');}return$matchedParams;}protected function&matchesGetPattern($localization=NULL){if($this->match!==NULL){$match=&$this->match;$this->matchLocalized[$localization]=&$match;if(!array_key_exists($localization,$this->reverseSectionsLocalized))$this->initReverse($localization);}else{if(array_key_exists($localization,$this->matchLocalized)){$this->initReverse($localization);}else{$this->initMatchAndReverse($localization);}$match=&$this->matchLocalized[$localization];}return$match;}}}
namespace MvcCore\Ext\Routers\Modules\Route{trait UrlBuilding{public function Url(\MvcCore\IRequest&$request,array&$params=[],array&$defaultUrlParams=[],$queryStringParamsSepatator='&'){if($this->reverseParams===NULL)$this->initReverse();if(count($this->reverseParams)===0){$allParamsClone=array_merge([],$params);}else{$emptyReverseParams=array_fill_keys(array_keys($this->reverseParams),'');$allMergedParams=array_merge($this->defaults,$defaultUrlParams,$params);$allParamsClone=array_merge($emptyReverseParams,array_intersect_key($allMergedParams,$emptyReverseParams),$params);}list(,$filteredParams)=$this->Filter($allParamsClone,$defaultUrlParams,\MvcCore\IRoute::CONFIG_FILTER_OUT);$router=&$this->router;foreach($filteredParams as$paramName=>&$paramValue){if($paramName==$router::URL_PARAM_BASEPATH)continue;if(is_string($paramValue))$paramValue=mb_strtolower($paramValue);}$domainPercentageParams=$this->urlGetAndRemoveDomainPercentageParams($filteredParams);$result=$this->urlComposeByReverseSectionsAndParams($this->reverse,$this->reverseSections,$this->reverseParams,$filteredParams,$this->defaults);return$this->urlSplitResultToBaseAndPathWithQuery($request,$result,$domainPercentageParams);}}}
namespace MvcCore\Ext\Routers\Localizations\Route{trait Instancing{public function __construct($patternOrConfig=NULL,$controllerAction=NULL,$defaults=[],$constraints=[],$advancedConfiguration=[]){if(count(func_get_args())===0)return;if(is_array($patternOrConfig)){$data=(object)$patternOrConfig;$this->constructDataPatternsDefaultsConstraintsFilters($data);$this->constructDataCtrlActionName($data);$this->constructDataAdvConf($data);$this->config=&$patternOrConfig;}else{$this->constructVarsPatternDefaultsConstraintsFilters($patternOrConfig,$defaults,$constraints,$advancedConfiguration);$this->constructVarCtrlActionNameByData($controllerAction);$this->constructVarAdvConf($advancedConfiguration);$this->config=&$advancedConfiguration;}$this->constructCtrlOrActionByName();}protected function constructDataPatternsDefaultsConstraintsFilters(&$data){if(isset($data->pattern)){if(is_array($data->pattern)){$this->patternLocalized=$data->pattern;}else{$this->pattern=$data->pattern;}}if(isset($data->match)){if(is_array($data->match)){$this->matchLocalized=$data->match;}else{$this->match=$data->match;}}if(isset($data->reverse)){if(is_array($data->reverse)){$this->reverseLocalized=$data->reverse;}else{$this->reverse=$data->reverse;}}if(isset($data->defaults))$this->SetDefaults($data->defaults);if(isset($data->constraints))$this->SetConstraints($data->constraints);if(isset($data->filters)&&is_array($data->filters))$this->SetFilters($data->filters);}protected function constructVarsPatternDefaultsConstraintsFilters(&$pattern,&$defaults,&$constraints,&$advCfg){if($this->is_array($pattern)){$this->patternLocalized=$pattern;}else{$this->pattern=$pattern;}if($defaults!==NULL)$this->SetDefaults($defaults);if($constraints!==NULL)$this->SetConstraints($constraints);$filterInParam=static::CONFIG_FILTER_IN;if(isset($advCfg[$filterInParam]))$this->SetFilter($advCfg[$filterInParam],$filterInParam);$filterOutParam=static::CONFIG_FILTER_OUT;if(isset($advCfg[$filterOutParam]))$this->SetFilter($advCfg[$filterOutParam],$filterOutParam);}protected function recordIsLocalized($record){static$allowedLocalizationKeys=[];if(count($allowedLocalizationKeys)===0){$router=&$this->router;if($router===NULL){static$routerStat=NULL;if($routerStat===NULL)$routerStat=&\MvcCore\Application::GetInstance()->GetRouter();$router=$routerStat;}$allowedLocalizations=$router->GetAllowedLocalizations();if(!$router->GetRouteRecordsByLanguageAndLocale()){foreach($allowedLocalizations as$allowedLocalization){$dashPos=strpos($allowedLocalization,$router::LANG_AND_LOCALE_SEPARATOR);if($dashPos===FALSE)continue;$allowedLocalization=substr($allowedLocalization,0,$dashPos);$allowedLocalizationKeys[$allowedLocalization]=$allowedLocalization;}}}$localizationKeys=TRUE;$recordKeys=array_keys($record);foreach($recordKeys as$recordKey){if(!isset($allowedLocalizationKeys[$recordKey])){$localizationKeys=FALSE;break;}}return$localizationKeys;}}}
namespace MvcCore\Tool{trait StringCaseConversions{public static function GetDashedFromPascalCase($pascalCase=''){return strtolower(preg_replace("#([a-z])([A-Z])#","$1-$2",lcfirst(preg_replace_callback("#[A-Z]{2,}#",function($match){$str=$match[0];return substr($str,0,1).'-'.strtolower(implode('-',str_split(substr($str,1))));},$pascalCase))));}public static function GetPascalCaseFromDashed($dashed=''){$a=explode('/',$dashed);foreach($a as&$b)$b=ucfirst(str_replace('-','',ucwords($b,'-')));return ucfirst(implode('/',$a));}public static function GetUnderscoredFromPascalCase($pascalCase=''){return strtolower(preg_replace("#([a-z])([A-Z])#","$1_$2",lcfirst(preg_replace_callback("#[A-Z]{2,}#",function($match){$str=$match[0];return substr($str,0,1).'_'.strtolower(implode('_',str_split(substr($str,1))));},$pascalCase))));}public static function GetPascalCaseFromUnderscored($underscored=''){$a=explode('/',$underscored);foreach($a as&$b)$b=ucfirst(str_replace('_','',ucwords($b,'_')));return ucfirst(implode('/',$a));}}}
namespace MvcCore\Ext\Auths\Basics\Role{trait Base{protected$name=NULL;public function GetName(){return$this->name;}public function&SetName($name){$this->name=$name;return$this;}public function IsAllowed($permissionName){return$this->GetPermission($permissionName);}}}
namespace MvcCore\Ext\Auths\Basics{interface IRole{public function GetId();public function&SetId($id);public function IsActive();public function GetActive();public function&SetActive($active);public function GetPermission($permissionName);public function&SetPermission($permissionName,$allow=TRUE);public function&GetPermissions();public function&SetPermissions($permissions);public function GetName();public function&SetName($name);public function IsAllowed($permissionName);public function GetByName($roleName);}}
namespace MvcCore\Ext\Auths\Basics{interface IController{public function SignInAction();public function SignOutAction();}}
namespace MvcCore\Tool{trait OopChecking{protected static$interfacesStaticMethodsCache=[];public static function Invoke($internalFuncName,array$args,callable$onError){$prevErrorHandler=set_error_handler(function($errLevel,$errMessage,$errFile,$errLine,$errContext)use($onError,&$prevErrorHandler,$internalFuncName){if($errFile===''&&defined('HHVM_VERSION'))$errFile=func_get_arg(5)[1]['file'];if($errFile===PACKAGER_PHP_FILE_BASE.'/vendor/mvccore/mvccore/src/MvcCore/Tool/OopChecking.php'){$errMessage=preg_replace("#^$internalFuncName\(.*?\): #",'',$errMessage);if($onError($errMessage,$errLevel,$errFile,$errLine,$errContext)!==FALSE)return;}return$prevErrorHandler?call_user_func_array($prevErrorHandler,func_get_args()):FALSE;});try{return call_user_func_array($internalFuncName,$args);}catch(\Exception$e){}restore_error_handler();}public static function CheckClassInterface($testClassName,$interfaceName,$checkStaticMethods=FALSE,$throwException=TRUE){$result=FALSE;$errorMsg='';$interfaceName=trim($interfaceName,'\\');$testClassType=new\ReflectionClass($testClassName);if(in_array($interfaceName,$testClassType->getInterfaceNames(),TRUE)){$result=TRUE;}else{$errorMsg="Class `$testClassName` doesn't implement interface `$interfaceName`.";}if($result&&$checkStaticMethods){$allStaticsImplemented=TRUE;$interfaceMethods=static::checkClassInterfaceGetPublicStaticMethods($interfaceName);foreach($interfaceMethods as$methodName){if(!$testClassType->hasMethod($methodName)){$allStaticsImplemented=FALSE;$errorMsg="Class `$testClassName` doesn't implement static method `$methodName` from interface `$interfaceName`.";break;}$testClassStaticMethod=$testClassType->getMethod($methodName);if(!$testClassStaticMethod->isStatic()){$allStaticsImplemented=FALSE;$errorMsg="Class `$testClassName` doesn't implement static method `$methodName` from interface `$interfaceName`, method is not static.";break;}}if(!$allStaticsImplemented)$result=FALSE;}if($result)return TRUE;if(!$throwException)return FALSE;throw new\InvalidArgumentException("[".__CLASS__."] ".$errorMsg);}public static function CheckClassTrait($testClassName,$traitName,$checkParentClasses=FALSE,$throwException=TRUE){$result=FALSE;$errorMsg='';$testClassType=new\ReflectionClass($testClassName);if(in_array($traitName,$testClassType->getTraitNames(),TRUE)){$result=TRUE;}else if($checkParentClasses){$currentClassType=$testClassType;while(TRUE){$parentClass=$currentClassType->getParentClass();if($parentClass===FALSE)break;$parentClassType=new\ReflectionClass($parentClass->getName());if(in_array($traitName,$parentClassType->getTraitNames(),TRUE)){$result=TRUE;break;}else{$currentClassType=$parentClassType;}}}if(!$result)$errorMsg="Class `$testClassName` doesn't implement trait `$traitName`.";if($result)return TRUE;if(!$throwException)return FALSE;throw new\InvalidArgumentException("[".__CLASS__."] ".$errorMsg);}protected static function&checkClassInterfaceGetPublicStaticMethods($interfaceName){if(!isset(static::$interfacesStaticMethodsCache[$interfaceName])){$methods=[];$interfaceType=new\ReflectionClass($interfaceName);$publicOrStaticMethods=$interfaceType->getMethods(\ReflectionMethod::IS_PUBLIC|\ReflectionMethod::IS_STATIC);foreach($publicOrStaticMethods as$publicOrStaticMethod){if($publicOrStaticMethod->isStatic()&&$publicOrStaticMethod->isPublic()){$methods[]=$publicOrStaticMethod->getName();}}static::$interfacesStaticMethodsCache[$interfaceName]=$methods;}return static::$interfacesStaticMethodsCache[$interfaceName];}}}
namespace MvcCore\Ext\Auths\Basics\Form{trait SignOut{public function Init(){parent::Init();$this->initAuthFormPropsAndHiddenControls()->AddField(new\MvcCore\Ext\Forms\Fields\SubmitButton(['name'=>'send','value'=>'Log Out','cssClasses'=>['button'],]));$this->user=$this->auth->GetUser();return$this;}public function Submit(array&$rawRequestParams=[]){parent::Submit($rawRequestParams);$data=&$this->values;if($this->result===\MvcCore\Ext\Form::RESULT_SUCCESS){$userClass=$this->auth->GetUserClass();$userClass::LogOut();}$this->SetSuccessUrl(isset($data['successUrl'])?$data['successUrl']:'')->SetErrorUrl(isset($data['errorUrl'])?$data['errorUrl']:'');return[$this->result,$this->values,$this->errors];}public function Render($controllerDashedName='',$actionDashedName=''){$this->PreDispatch();$result=$this->RenderBegin();if($this->user)$result.='<span>'.$this->user->GetFullName().'</span>';foreach($this->fields as&$field)$result.=$field->Render();$result.=$this->RenderEnd();return$result;}}}
namespace MvcCore\Session{trait Closing{public static function Close(){register_shutdown_function(function(){foreach(static::$instances as&$instance)if(count((array)$_SESSION[$instance->__name])===0)$instance->Destroy();$metaKey=static::SESSION_METADATA_KEY;$_SESSION[$metaKey]=serialize(static::$meta);@session_write_close();});}public static function SendCookie(){if(static::$sessionStartTime===0)return;$maxExpiration=static::GetSessionMaxTime();$response=&\MvcCore\Application::GetInstance()->GetResponse();if(!$response->IsSent()){$params=(object)session_get_cookie_params();$response->SetCookie(session_name(),session_id(),($maxExpiration>static::$sessionStartTime?(static::$sessionMaxTime-static::$sessionStartTime):(isset($params->lifetime)?$params->lifetime:0)),$params->path,$params->domain,$params->secure,TRUE);}}public static function GetSessionMaxTime(){static::$sessionMaxTime=static::$sessionStartTime;if(static::$meta->expirations){foreach(static::$meta->expirations as$expiration){if($expiration>static::$sessionMaxTime)static::$sessionMaxTime=$expiration;}}return static::$sessionMaxTime;}}}
namespace MvcCore\Session{trait Instancing{public function __construct($name=\MvcCore\ISession::DEFAULT_NAMESPACE_NAME){if(!static::$started)static::Start();$this->__name=$name;static::$meta->names[$name]=1;if(!isset($_SESSION[$name]))$_SESSION[$name]=[];static::$instances[$name]=$this;}}}
namespace MvcCore\Ext\Auths\Basics\Form{trait SignIn{public function Init(){parent::Init();$this->initAuthFormPropsAndHiddenControls()->AddField(new\MvcCore\Ext\Forms\Fields\Text(['name'=>'username','placeHolder'=>'User','validators'=>['SafeString'],]))->AddField(new\MvcCore\Ext\Forms\Fields\Password(['name'=>'password','placeHolder'=>'Password','validators'=>['SafeString'],]))->AddField(new\MvcCore\Ext\Forms\Fields\SubmitButton(['name'=>'send','value'=>'Sign In','cssClasses'=>['button'],]));return$this;}public function Submit(array&$rawRequestParams=[]){parent::Submit($rawRequestParams);$data=&$this->values;if($this->result){$userClass=$this->auth->GetUserClass();$user=$userClass::LogIn(isset($data['username'])?$data['username']:'',isset($data['password'])?$data['password']:'');if($user!==NULL){$user->SetPasswordHash(NULL);}else{$this->AddError('User name or password is incorrect.',['username','password']);}}$successUrl=(isset($data['sourceUrl'])?$data['sourceUrl']:(isset($data['successUrl'])?$data['successUrl']:''));if($successUrl)$this->SetSuccessUrl($successUrl);if(isset($data['errorUrl'])&&$data['errorUrl'])$this->SetErrorUrl($data['errorUrl']);if(!$this->result)sleep($this->auth->GetInvalidCredentialsTimeout());return[$this->result,$this->values,$this->errors];}}}
namespace MvcCore\Session{trait MagicMethods{public function __isset($key){return isset($_SESSION[$this->__name][$key]);}public function __unset($key){$name=$this->__name;if(isset($_SESSION[$name][$key]))unset($_SESSION[$name][$key]);}public function __get($key){$name=$this->__name;if(isset($_SESSION[$name][$key]))return$_SESSION[$name][$key];return NULL;}public function __set($key,$value){$_SESSION[$this->__name][$key]=$value;}public function __debugInfo(){$hoops=isset(static::$meta->hoops[$this->__name])?static::$meta->hoops[$this->__name]:NULL;$expiration=isset(static::$meta->expirations[$this->__name])?static::$meta->expirations[$this->__name]:NULL;return['name'=>$this->__name,'expirationSeconds'=>date('D, d M Y H:i:s',$expiration),'expirationHoops'=>$hoops,'values'=>$_SESSION[$this->__name],];}public function count(){return count((array)$_SESSION[$this->__name]);}}}
namespace MvcCore\Session{trait MetaData{protected static function setUpMeta(){$metaKey=static::SESSION_METADATA_KEY;$meta=[];if(isset($_SESSION[$metaKey]))$meta=@unserialize($_SESSION[$metaKey]);if(!$meta)$meta=['names'=>[],'hoops'=>[],'expirations'=>[],];$meta=(object)$meta;static::$meta=&$meta;}protected static function setUpData(){$hoops=&static::$meta->hoops;$names=&static::$meta->names;$expirations=&static::$meta->expirations;foreach($hoops as$name=>$hoop){$hoops[$name]-=1;}foreach($names as$name=>$one){$unset=[];if(isset($hoops[$name])){if($hoops[$name]<0)$unset[]='hoops';}if(isset($expirations[$name])){$expiration=$expirations[$name];if($expiration<static::$sessionStartTime){$unset[]='expirations';}else if($expiration>static::$sessionMaxTime){static::$sessionMaxTime=$expiration;}}if($unset){$currentErrRepLevels=error_reporting();error_reporting(0);foreach($unset as$unsetKey){if(isset(static::$meta->{$unsetKey})&&isset(static::$meta->{$unsetKey}[$name])){unset(static::$meta->{$unsetKey}[$name]);}}error_reporting($currentErrRepLevels);unset($names[$name]);unset($_SESSION[$name]);}}}public static function GetSessionMetadata(){return static::$meta;}}}
namespace MvcCore\Session{trait NamespaceMethods{public static function&GetNamespace($name=\MvcCore\ISession::DEFAULT_NAMESPACE_NAME){if(!static::$started)static::Start();if(!isset(static::$instances[$name])){static::$instances[$name]=new static($name);}return static::$instances[$name];}public function&SetExpirationHoops($hoops){static::$meta->hoops[$this->__name]=$hoops;return$this;}public function&SetExpirationSeconds($seconds=0){if($seconds>0)static::$meta->expirations[$this->__name]=static::$sessionStartTime+$seconds;return$this;}public function Destroy(){$name=$this->__name;$names=&static::$meta->names;$hoops=&static::$meta->hoops;$expirations=&static::$meta->expirations;$instances=&static::$instances;if(isset($names[$name]))unset($names[$name]);if(isset($hoops[$name]))unset($hoops[$name]);if(isset($expirations[$name]))unset($expirations[$name]);if(isset($_SESSION[$name]))unset($_SESSION[$name]);if(isset($instances[$name]))unset($instances[$name]);}public static function DestroyAll(){session_destroy();$_SESSION=NULL;static::$started=false;$response=&\MvcCore\Application::GetInstance()->GetResponse();if(!$response->IsSent()){$params=(object)session_get_cookie_params();$response->DeleteCookie(session_name(),$params->path,$params->domain,$params->secure);}}}}
namespace MvcCore\Session{trait Props{protected$__name=\MvcCore\ISession::DEFAULT_NAMESPACE_NAME;protected static$started=FALSE;protected static$meta=['names'=>[],'hoops'=>[],'expirations'=>[],];protected static$instances=[];protected static$sessionStartTime=0;protected static$sessionMaxTime=0;}}
namespace MvcCore\Ext\Forms\Field\Props{trait WidthHeight{protected$width=NULL;protected$height=NULL;public function GetWidth(){return$this->width;}public function&SetWidth($width){$this->width=$width;return$this;}public function GetHeight(){return$this->height;}public function&SetHeight($height){$this->height=$height;return$this;}}}
namespace MvcCore\Ext\Forms\Field\Props{trait RowsColsWrap{protected$rows=NULL;protected$cols=NULL;protected$wrap=NULL;public function GetRows(){return$this->rows;}public function&SetRows($rows){$this->rows=$rows;return$this;}public function GetCols(){return$this->cols;}public function&SetCols($columns=20){$this->cols=$columns;return$this;}public function GetWrap(){return$this->wrap;}public function&SetWrap($wrap='soft'){$this->wrap=$wrap;return$this;}}}
namespace MvcCore\Session{trait Starting{public static function Start(&$session=[]){if(static::$started)return;if(\MvcCore\Application::GetInstance()->GetRequest()->IsInternalRequest()===TRUE)return;$sessionNotStarted=function_exists('session_status')?session_status()==PHP_SESSION_NONE:session_id()=='';if($sessionNotStarted){session_start();static::$sessionStartTime=time();static::$sessionMaxTime=static::$sessionStartTime;static::setUpMeta();static::setUpData();}static::$started=TRUE;}public static function GetSessionStartTime(){return static::$sessionStartTime;}}}
namespace{class Mobile_Detect{const DETECTION_TYPE_MOBILE='mobile';const DETECTION_TYPE_EXTENDED='extended';const VER='([\w._\+]+)';const MOBILE_GRADE_A='A';const MOBILE_GRADE_B='B';const MOBILE_GRADE_C='C';const VERSION='2.8.31';const VERSION_TYPE_STRING='text';const VERSION_TYPE_FLOAT='float';protected$cache=array();protected$userAgent=null;protected$httpHeaders=array();protected$cloudfrontHeaders=array();protected$matchingRegex=null;protected$matchesArray=null;protected$detectionType=self::DETECTION_TYPE_MOBILE;protected static$mobileHeaders=array('HTTP_ACCEPT'=>array('matches'=>array('application/x-obml2d','application/vnd.rim.html','text/vnd.wap.wml','application/vnd.wap.xhtml+xml')),'HTTP_X_WAP_PROFILE'=>null,'HTTP_X_WAP_CLIENTID'=>null,'HTTP_WAP_CONNECTION'=>null,'HTTP_PROFILE'=>null,'HTTP_X_OPERAMINI_PHONE_UA'=>null,'HTTP_X_NOKIA_GATEWAY_ID'=>null,'HTTP_X_ORANGE_ID'=>null,'HTTP_X_VODAFONE_3GPDPCONTEXT'=>null,'HTTP_X_HUAWEI_USERID'=>null,'HTTP_UA_OS'=>null,'HTTP_X_MOBILE_GATEWAY'=>null,'HTTP_X_ATT_DEVICEID'=>null,'HTTP_UA_CPU'=>array('matches'=>array('ARM')),);protected static$phoneDevices=array('iPhone'=>'\biPhone\b|\biPod\b','BlackBerry'=>'BlackBerry|\bBB10\b|rim[0-9]+','HTC'=>'HTC|HTC.*(Sensation|Evo|Vision|Explorer|6800|8100|8900|A7272|S510e|C110e|Legend|Desire|T8282)|APX515CKT|Qtek9090|APA9292KT|HD_mini|Sensation.*Z710e|PG86100|Z715e|Desire.*(A8181|HD)|ADR6200|ADR6400L|ADR6425|001HT|Inspire 4G|Android.*\bEVO\b|T-Mobile G1|Z520m|Android [0-9.]+; Pixel','Nexus'=>'Nexus One|Nexus S|Galaxy.*Nexus|Android.*Nexus.*Mobile|Nexus 4|Nexus 5|Nexus 6','Dell'=>'Dell[;]? (Streak|Aero|Venue|Venue Pro|Flash|Smoke|Mini 3iX)|XCD28|XCD35|\b001DL\b|\b101DL\b|\bGS01\b','Motorola'=>'Motorola|DROIDX|DROID BIONIC|\bDroid\b.*Build|Android.*Xoom|HRI39|MOT-|A1260|A1680|A555|A853|A855|A953|A955|A956|Motorola.*ELECTRIFY|Motorola.*i1|i867|i940|MB200|MB300|MB501|MB502|MB508|MB511|MB520|MB525|MB526|MB611|MB612|MB632|MB810|MB855|MB860|MB861|MB865|MB870|ME501|ME502|ME511|ME525|ME600|ME632|ME722|ME811|ME860|ME863|ME865|MT620|MT710|MT716|MT720|MT810|MT870|MT917|Motorola.*TITANIUM|WX435|WX445|XT300|XT301|XT311|XT316|XT317|XT319|XT320|XT390|XT502|XT530|XT531|XT532|XT535|XT603|XT610|XT611|XT615|XT681|XT701|XT702|XT711|XT720|XT800|XT806|XT860|XT862|XT875|XT882|XT883|XT894|XT901|XT907|XT909|XT910|XT912|XT928|XT926|XT915|XT919|XT925|XT1021|\bMoto E\b|XT1068|XT1092','Samsung'=>'\bSamsung\b|SM-G950F|SM-G955F|SM-G9250|GT-19300|SGH-I337|BGT-S5230|GT-B2100|GT-B2700|GT-B2710|GT-B3210|GT-B3310|GT-B3410|GT-B3730|GT-B3740|GT-B5510|GT-B5512|GT-B5722|GT-B6520|GT-B7300|GT-B7320|GT-B7330|GT-B7350|GT-B7510|GT-B7722|GT-B7800|GT-C3010|GT-C3011|GT-C3060|GT-C3200|GT-C3212|GT-C3212I|GT-C3262|GT-C3222|GT-C3300|GT-C3300K|GT-C3303|GT-C3303K|GT-C3310|GT-C3322|GT-C3330|GT-C3350|GT-C3500|GT-C3510|GT-C3530|GT-C3630|GT-C3780|GT-C5010|GT-C5212|GT-C6620|GT-C6625|GT-C6712|GT-E1050|GT-E1070|GT-E1075|GT-E1080|GT-E1081|GT-E1085|GT-E1087|GT-E1100|GT-E1107|GT-E1110|GT-E1120|GT-E1125|GT-E1130|GT-E1160|GT-E1170|GT-E1175|GT-E1180|GT-E1182|GT-E1200|GT-E1210|GT-E1225|GT-E1230|GT-E1390|GT-E2100|GT-E2120|GT-E2121|GT-E2152|GT-E2220|GT-E2222|GT-E2230|GT-E2232|GT-E2250|GT-E2370|GT-E2550|GT-E2652|GT-E3210|GT-E3213|GT-I5500|GT-I5503|GT-I5700|GT-I5800|GT-I5801|GT-I6410|GT-I6420|GT-I7110|GT-I7410|GT-I7500|GT-I8000|GT-I8150|GT-I8160|GT-I8190|GT-I8320|GT-I8330|GT-I8350|GT-I8530|GT-I8700|GT-I8703|GT-I8910|GT-I9000|GT-I9001|GT-I9003|GT-I9010|GT-I9020|GT-I9023|GT-I9070|GT-I9082|GT-I9100|GT-I9103|GT-I9220|GT-I9250|GT-I9300|GT-I9305|GT-I9500|GT-I9505|GT-M3510|GT-M5650|GT-M7500|GT-M7600|GT-M7603|GT-M8800|GT-M8910|GT-N7000|GT-S3110|GT-S3310|GT-S3350|GT-S3353|GT-S3370|GT-S3650|GT-S3653|GT-S3770|GT-S3850|GT-S5210|GT-S5220|GT-S5229|GT-S5230|GT-S5233|GT-S5250|GT-S5253|GT-S5260|GT-S5263|GT-S5270|GT-S5300|GT-S5330|GT-S5350|GT-S5360|GT-S5363|GT-S5369|GT-S5380|GT-S5380D|GT-S5560|GT-S5570|GT-S5600|GT-S5603|GT-S5610|GT-S5620|GT-S5660|GT-S5670|GT-S5690|GT-S5750|GT-S5780|GT-S5830|GT-S5839|GT-S6102|GT-S6500|GT-S7070|GT-S7200|GT-S7220|GT-S7230|GT-S7233|GT-S7250|GT-S7500|GT-S7530|GT-S7550|GT-S7562|GT-S7710|GT-S8000|GT-S8003|GT-S8500|GT-S8530|GT-S8600|SCH-A310|SCH-A530|SCH-A570|SCH-A610|SCH-A630|SCH-A650|SCH-A790|SCH-A795|SCH-A850|SCH-A870|SCH-A890|SCH-A930|SCH-A950|SCH-A970|SCH-A990|SCH-I100|SCH-I110|SCH-I400|SCH-I405|SCH-I500|SCH-I510|SCH-I515|SCH-I600|SCH-I730|SCH-I760|SCH-I770|SCH-I830|SCH-I910|SCH-I920|SCH-I959|SCH-LC11|SCH-N150|SCH-N300|SCH-R100|SCH-R300|SCH-R351|SCH-R400|SCH-R410|SCH-T300|SCH-U310|SCH-U320|SCH-U350|SCH-U360|SCH-U365|SCH-U370|SCH-U380|SCH-U410|SCH-U430|SCH-U450|SCH-U460|SCH-U470|SCH-U490|SCH-U540|SCH-U550|SCH-U620|SCH-U640|SCH-U650|SCH-U660|SCH-U700|SCH-U740|SCH-U750|SCH-U810|SCH-U820|SCH-U900|SCH-U940|SCH-U960|SCS-26UC|SGH-A107|SGH-A117|SGH-A127|SGH-A137|SGH-A157|SGH-A167|SGH-A177|SGH-A187|SGH-A197|SGH-A227|SGH-A237|SGH-A257|SGH-A437|SGH-A517|SGH-A597|SGH-A637|SGH-A657|SGH-A667|SGH-A687|SGH-A697|SGH-A707|SGH-A717|SGH-A727|SGH-A737|SGH-A747|SGH-A767|SGH-A777|SGH-A797|SGH-A817|SGH-A827|SGH-A837|SGH-A847|SGH-A867|SGH-A877|SGH-A887|SGH-A897|SGH-A927|SGH-B100|SGH-B130|SGH-B200|SGH-B220|SGH-C100|SGH-C110|SGH-C120|SGH-C130|SGH-C140|SGH-C160|SGH-C170|SGH-C180|SGH-C200|SGH-C207|SGH-C210|SGH-C225|SGH-C230|SGH-C417|SGH-C450|SGH-D307|SGH-D347|SGH-D357|SGH-D407|SGH-D415|SGH-D780|SGH-D807|SGH-D980|SGH-E105|SGH-E200|SGH-E315|SGH-E316|SGH-E317|SGH-E335|SGH-E590|SGH-E635|SGH-E715|SGH-E890|SGH-F300|SGH-F480|SGH-I200|SGH-I300|SGH-I320|SGH-I550|SGH-I577|SGH-I600|SGH-I607|SGH-I617|SGH-I627|SGH-I637|SGH-I677|SGH-I700|SGH-I717|SGH-I727|SGH-i747M|SGH-I777|SGH-I780|SGH-I827|SGH-I847|SGH-I857|SGH-I896|SGH-I897|SGH-I900|SGH-I907|SGH-I917|SGH-I927|SGH-I937|SGH-I997|SGH-J150|SGH-J200|SGH-L170|SGH-L700|SGH-M110|SGH-M150|SGH-M200|SGH-N105|SGH-N500|SGH-N600|SGH-N620|SGH-N625|SGH-N700|SGH-N710|SGH-P107|SGH-P207|SGH-P300|SGH-P310|SGH-P520|SGH-P735|SGH-P777|SGH-Q105|SGH-R210|SGH-R220|SGH-R225|SGH-S105|SGH-S307|SGH-T109|SGH-T119|SGH-T139|SGH-T209|SGH-T219|SGH-T229|SGH-T239|SGH-T249|SGH-T259|SGH-T309|SGH-T319|SGH-T329|SGH-T339|SGH-T349|SGH-T359|SGH-T369|SGH-T379|SGH-T409|SGH-T429|SGH-T439|SGH-T459|SGH-T469|SGH-T479|SGH-T499|SGH-T509|SGH-T519|SGH-T539|SGH-T559|SGH-T589|SGH-T609|SGH-T619|SGH-T629|SGH-T639|SGH-T659|SGH-T669|SGH-T679|SGH-T709|SGH-T719|SGH-T729|SGH-T739|SGH-T746|SGH-T749|SGH-T759|SGH-T769|SGH-T809|SGH-T819|SGH-T839|SGH-T919|SGH-T929|SGH-T939|SGH-T959|SGH-T989|SGH-U100|SGH-U200|SGH-U800|SGH-V205|SGH-V206|SGH-X100|SGH-X105|SGH-X120|SGH-X140|SGH-X426|SGH-X427|SGH-X475|SGH-X495|SGH-X497|SGH-X507|SGH-X600|SGH-X610|SGH-X620|SGH-X630|SGH-X700|SGH-X820|SGH-X890|SGH-Z130|SGH-Z150|SGH-Z170|SGH-ZX10|SGH-ZX20|SHW-M110|SPH-A120|SPH-A400|SPH-A420|SPH-A460|SPH-A500|SPH-A560|SPH-A600|SPH-A620|SPH-A660|SPH-A700|SPH-A740|SPH-A760|SPH-A790|SPH-A800|SPH-A820|SPH-A840|SPH-A880|SPH-A900|SPH-A940|SPH-A960|SPH-D600|SPH-D700|SPH-D710|SPH-D720|SPH-I300|SPH-I325|SPH-I330|SPH-I350|SPH-I500|SPH-I600|SPH-I700|SPH-L700|SPH-M100|SPH-M220|SPH-M240|SPH-M300|SPH-M305|SPH-M320|SPH-M330|SPH-M350|SPH-M360|SPH-M370|SPH-M380|SPH-M510|SPH-M540|SPH-M550|SPH-M560|SPH-M570|SPH-M580|SPH-M610|SPH-M620|SPH-M630|SPH-M800|SPH-M810|SPH-M850|SPH-M900|SPH-M910|SPH-M920|SPH-M930|SPH-N100|SPH-N200|SPH-N240|SPH-N300|SPH-N400|SPH-Z400|SWC-E100|SCH-i909|GT-N7100|GT-N7105|SCH-I535|SM-N900A|SGH-I317|SGH-T999L|GT-S5360B|GT-I8262|GT-S6802|GT-S6312|GT-S6310|GT-S5312|GT-S5310|GT-I9105|GT-I8510|GT-S6790N|SM-G7105|SM-N9005|GT-S5301|GT-I9295|GT-I9195|SM-C101|GT-S7392|GT-S7560|GT-B7610|GT-I5510|GT-S7582|GT-S7530E|GT-I8750|SM-G9006V|SM-G9008V|SM-G9009D|SM-G900A|SM-G900D|SM-G900F|SM-G900H|SM-G900I|SM-G900J|SM-G900K|SM-G900L|SM-G900M|SM-G900P|SM-G900R4|SM-G900S|SM-G900T|SM-G900V|SM-G900W8|SHV-E160K|SCH-P709|SCH-P729|SM-T2558|GT-I9205|SM-G9350|SM-J120F|SM-G920F|SM-G920V|SM-G930F|SM-N910C|SM-A310F|GT-I9190|SM-J500FN|SM-G903F','LG'=>'\bLG\b;|LG[- ]?(C800|C900|E400|E610|E900|E-900|F160|F180K|F180L|F180S|730|855|L160|LS740|LS840|LS970|LU6200|MS690|MS695|MS770|MS840|MS870|MS910|P500|P700|P705|VM696|AS680|AS695|AX840|C729|E970|GS505|272|C395|E739BK|E960|L55C|L75C|LS696|LS860|P769BK|P350|P500|P509|P870|UN272|US730|VS840|VS950|LN272|LN510|LS670|LS855|LW690|MN270|MN510|P509|P769|P930|UN200|UN270|UN510|UN610|US670|US740|US760|UX265|UX840|VN271|VN530|VS660|VS700|VS740|VS750|VS910|VS920|VS930|VX9200|VX11000|AX840A|LW770|P506|P925|P999|E612|D955|D802|MS323)','Sony'=>'SonyST|SonyLT|SonyEricsson|SonyEricssonLT15iv|LT18i|E10i|LT28h|LT26w|SonyEricssonMT27i|C5303|C6902|C6903|C6906|C6943|D2533','Asus'=>'Asus.*Galaxy|PadFone.*Mobile','NokiaLumia'=>'Lumia [0-9]{3,4}','Micromax'=>'Micromax.*\b(A210|A92|A88|A72|A111|A110Q|A115|A116|A110|A90S|A26|A51|A35|A54|A25|A27|A89|A68|A65|A57|A90)\b','Palm'=>'PalmSource|Palm','Vertu'=>'Vertu|Vertu.*Ltd|Vertu.*Ascent|Vertu.*Ayxta|Vertu.*Constellation(F|Quest)?|Vertu.*Monika|Vertu.*Signature','Pantech'=>'PANTECH|IM-A850S|IM-A840S|IM-A830L|IM-A830K|IM-A830S|IM-A820L|IM-A810K|IM-A810S|IM-A800S|IM-T100K|IM-A725L|IM-A780L|IM-A775C|IM-A770K|IM-A760S|IM-A750K|IM-A740S|IM-A730S|IM-A720L|IM-A710K|IM-A690L|IM-A690S|IM-A650S|IM-A630K|IM-A600S|VEGA PTL21|PT003|P8010|ADR910L|P6030|P6020|P9070|P4100|P9060|P5000|CDM8992|TXT8045|ADR8995|IS11PT|P2030|P6010|P8000|PT002|IS06|CDM8999|P9050|PT001|TXT8040|P2020|P9020|P2000|P7040|P7000|C790','Fly'=>'IQ230|IQ444|IQ450|IQ440|IQ442|IQ441|IQ245|IQ256|IQ236|IQ255|IQ235|IQ245|IQ275|IQ240|IQ285|IQ280|IQ270|IQ260|IQ250','Wiko'=>'KITE 4G|HIGHWAY|GETAWAY|STAIRWAY|DARKSIDE|DARKFULL|DARKNIGHT|DARKMOON|SLIDE|WAX 4G|RAINBOW|BLOOM|SUNSET|GOA(?!nna)|LENNY|BARRY|IGGY|OZZY|CINK FIVE|CINK PEAX|CINK PEAX 2|CINK SLIM|CINK SLIM 2|CINK +|CINK KING|CINK PEAX|CINK SLIM|SUBLIM','iMobile'=>'i-mobile (IQ|i-STYLE|idea|ZAA|Hitz)','SimValley'=>'\b(SP-80|XT-930|SX-340|XT-930|SX-310|SP-360|SP60|SPT-800|SP-120|SPT-800|SP-140|SPX-5|SPX-8|SP-100|SPX-8|SPX-12)\b','Wolfgang'=>'AT-B24D|AT-AS50HD|AT-AS40W|AT-AS55HD|AT-AS45q2|AT-B26D|AT-AS50Q','Alcatel'=>'Alcatel','Nintendo'=>'Nintendo 3DS','Amoi'=>'Amoi','INQ'=>'INQ','GenericPhone'=>'Tapatalk|PDA;|SAGEM|\bmmp\b|pocket|\bpsp\b|symbian|Smartphone|smartfon|treo|up.browser|up.link|vodafone|\bwap\b|nokia|Series40|Series60|S60|SonyEricsson|N900|MAUI.*WAP.*Browser',);protected static$tabletDevices=array('iPad'=>'iPad|iPad.*Mobile','NexusTablet'=>'Android.*Nexus[\s]+(7|9|10)','SamsungTablet'=>'SAMSUNG.*Tablet|Galaxy.*Tab|SC-01C|GT-P1000|GT-P1003|GT-P1010|GT-P3105|GT-P6210|GT-P6800|GT-P6810|GT-P7100|GT-P7300|GT-P7310|GT-P7500|GT-P7510|SCH-I800|SCH-I815|SCH-I905|SGH-I957|SGH-I987|SGH-T849|SGH-T859|SGH-T869|SPH-P100|GT-P3100|GT-P3108|GT-P3110|GT-P5100|GT-P5110|GT-P6200|GT-P7320|GT-P7511|GT-N8000|GT-P8510|SGH-I497|SPH-P500|SGH-T779|SCH-I705|SCH-I915|GT-N8013|GT-P3113|GT-P5113|GT-P8110|GT-N8010|GT-N8005|GT-N8020|GT-P1013|GT-P6201|GT-P7501|GT-N5100|GT-N5105|GT-N5110|SHV-E140K|SHV-E140L|SHV-E140S|SHV-E150S|SHV-E230K|SHV-E230L|SHV-E230S|SHW-M180K|SHW-M180L|SHW-M180S|SHW-M180W|SHW-M300W|SHW-M305W|SHW-M380K|SHW-M380S|SHW-M380W|SHW-M430W|SHW-M480K|SHW-M480S|SHW-M480W|SHW-M485W|SHW-M486W|SHW-M500W|GT-I9228|SCH-P739|SCH-I925|GT-I9200|GT-P5200|GT-P5210|GT-P5210X|SM-T311|SM-T310|SM-T310X|SM-T210|SM-T210R|SM-T211|SM-P600|SM-P601|SM-P605|SM-P900|SM-P901|SM-T217|SM-T217A|SM-T217S|SM-P6000|SM-T3100|SGH-I467|XE500|SM-T110|GT-P5220|GT-I9200X|GT-N5110X|GT-N5120|SM-P905|SM-T111|SM-T2105|SM-T315|SM-T320|SM-T320X|SM-T321|SM-T520|SM-T525|SM-T530NU|SM-T230NU|SM-T330NU|SM-T900|XE500T1C|SM-P605V|SM-P905V|SM-T337V|SM-T537V|SM-T707V|SM-T807V|SM-P600X|SM-P900X|SM-T210X|SM-T230|SM-T230X|SM-T325|GT-P7503|SM-T531|SM-T330|SM-T530|SM-T705|SM-T705C|SM-T535|SM-T331|SM-T800|SM-T700|SM-T537|SM-T807|SM-P907A|SM-T337A|SM-T537A|SM-T707A|SM-T807A|SM-T237|SM-T807P|SM-P607T|SM-T217T|SM-T337T|SM-T807T|SM-T116NQ|SM-T116BU|SM-P550|SM-T350|SM-T550|SM-T9000|SM-P9000|SM-T705Y|SM-T805|GT-P3113|SM-T710|SM-T810|SM-T815|SM-T360|SM-T533|SM-T113|SM-T335|SM-T715|SM-T560|SM-T670|SM-T677|SM-T377|SM-T567|SM-T357T|SM-T555|SM-T561|SM-T713|SM-T719|SM-T813|SM-T819|SM-T580|SM-T355Y?|SM-T280|SM-T817A|SM-T820|SM-W700|SM-P580|SM-T587|SM-P350|SM-P555M|SM-P355M|SM-T113NU|SM-T815Y|SM-T585|SM-T285','Kindle'=>'Kindle|Silk.*Accelerated|Android.*\b(KFOT|KFTT|KFJWI|KFJWA|KFOTE|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|WFJWAE|KFSAWA|KFSAWI|KFASWI|KFARWI|KFFOWI|KFGIWI|KFMEWI)\b|Android.*Silk/[0-9.]+ like Chrome/[0-9.]+ (?!Mobile)','SurfaceTablet'=>'Windows NT [0-9.]+; ARM;.*(Tablet|ARMBJS)','HPTablet'=>'HP Slate (7|8|10)|HP ElitePad 900|hp-tablet|EliteBook.*Touch|HP 8|Slate 21|HP SlateBook 10','AsusTablet'=>'^.*PadFone((?!Mobile).)*$|Transformer|TF101|TF101G|TF300T|TF300TG|TF300TL|TF700T|TF700KL|TF701T|TF810C|ME171|ME301T|ME302C|ME371MG|ME370T|ME372MG|ME172V|ME173X|ME400C|Slider SL101|\bK00F\b|\bK00C\b|\bK00E\b|\bK00L\b|TX201LA|ME176C|ME102A|\bM80TA\b|ME372CL|ME560CG|ME372CG|ME302KL| K010 | K011 | K017 | K01E |ME572C|ME103K|ME170C|ME171C|\bME70C\b|ME581C|ME581CL|ME8510C|ME181C|P01Y|PO1MA|P01Z|\bP027\b|\bP024\b','BlackBerryTablet'=>'PlayBook|RIM Tablet','HTCtablet'=>'HTC_Flyer_P512|HTC Flyer|HTC Jetstream|HTC-P715a|HTC EVO View 4G|PG41200|PG09410','MotorolaTablet'=>'xoom|sholest|MZ615|MZ605|MZ505|MZ601|MZ602|MZ603|MZ604|MZ606|MZ607|MZ608|MZ609|MZ615|MZ616|MZ617','NookTablet'=>'Android.*Nook|NookColor|nook browser|BNRV200|BNRV200A|BNTV250|BNTV250A|BNTV400|BNTV600|LogicPD Zoom2','AcerTablet'=>'Android.*; \b(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700|A701|W500|W500P|W501|W501P|W510|W511|W700|G100|G100W|B1-A71|B1-710|B1-711|A1-810|A1-811|A1-830)\b|W3-810|\bA3-A10\b|\bA3-A11\b|\bA3-A20\b|\bA3-A30','ToshibaTablet'=>'Android.*(AT100|AT105|AT200|AT205|AT270|AT275|AT300|AT305|AT1S5|AT500|AT570|AT700|AT830)|TOSHIBA.*FOLIO','LGTablet'=>'\bL-06C|LG-V909|LG-V900|LG-V700|LG-V510|LG-V500|LG-V410|LG-V400|LG-VK810\b','FujitsuTablet'=>'Android.*\b(F-01D|F-02F|F-05E|F-10D|M532|Q572)\b','PrestigioTablet'=>'PMP3170B|PMP3270B|PMP3470B|PMP7170B|PMP3370B|PMP3570C|PMP5870C|PMP3670B|PMP5570C|PMP5770D|PMP3970B|PMP3870C|PMP5580C|PMP5880D|PMP5780D|PMP5588C|PMP7280C|PMP7280C3G|PMP7280|PMP7880D|PMP5597D|PMP5597|PMP7100D|PER3464|PER3274|PER3574|PER3884|PER5274|PER5474|PMP5097CPRO|PMP5097|PMP7380D|PMP5297C|PMP5297C_QUAD|PMP812E|PMP812E3G|PMP812F|PMP810E|PMP880TD|PMT3017|PMT3037|PMT3047|PMT3057|PMT7008|PMT5887|PMT5001|PMT5002','LenovoTablet'=>'Lenovo TAB|Idea(Tab|Pad)( A1|A10| K1|)|ThinkPad([ ]+)?Tablet|YT3-850M|YT3-X90L|YT3-X90F|YT3-X90X|Lenovo.*(S2109|S2110|S5000|S6000|K3011|A3000|A3500|A1000|A2107|A2109|A1107|A5500|A7600|B6000|B8000|B8080)(-|)(FL|F|HV|H|)|TB-X103F|TB-X304F|TB-X304L|TB-8703F','DellTablet'=>'Venue 11|Venue 8|Venue 7|Dell Streak 10|Dell Streak 7','YarvikTablet'=>'Android.*\b(TAB210|TAB211|TAB224|TAB250|TAB260|TAB264|TAB310|TAB360|TAB364|TAB410|TAB411|TAB420|TAB424|TAB450|TAB460|TAB461|TAB464|TAB465|TAB467|TAB468|TAB07-100|TAB07-101|TAB07-150|TAB07-151|TAB07-152|TAB07-200|TAB07-201-3G|TAB07-210|TAB07-211|TAB07-212|TAB07-214|TAB07-220|TAB07-400|TAB07-485|TAB08-150|TAB08-200|TAB08-201-3G|TAB08-201-30|TAB09-100|TAB09-211|TAB09-410|TAB10-150|TAB10-201|TAB10-211|TAB10-400|TAB10-410|TAB13-201|TAB274EUK|TAB275EUK|TAB374EUK|TAB462EUK|TAB474EUK|TAB9-200)\b','MedionTablet'=>'Android.*\bOYO\b|LIFE.*(P9212|P9514|P9516|S9512)|LIFETAB','ArnovaTablet'=>'97G4|AN10G2|AN7bG3|AN7fG3|AN8G3|AN8cG3|AN7G3|AN9G3|AN7dG3|AN7dG3ST|AN7dG3ChildPad|AN10bG3|AN10bG3DT|AN9G2','IntensoTablet'=>'INM8002KP|INM1010FP|INM805ND|Intenso Tab|TAB1004','IRUTablet'=>'M702pro','MegafonTablet'=>'MegaFon V9|\bZTE V9\b|Android.*\bMT7A\b','EbodaTablet'=>'E-Boda (Supreme|Impresspeed|Izzycomm|Essential)','AllViewTablet'=>'Allview.*(Viva|Alldro|City|Speed|All TV|Frenzy|Quasar|Shine|TX1|AX1|AX2)','ArchosTablet'=>'\b(101G9|80G9|A101IT)\b|Qilive 97R|Archos5|\bARCHOS (70|79|80|90|97|101|FAMILYPAD|)(b|c|)(G10| Cobalt| TITANIUM(HD|)| Xenon| Neon|XSK| 2| XS 2| PLATINUM| CARBON|GAMEPAD)\b','AinolTablet'=>'NOVO7|NOVO8|NOVO10|Novo7Aurora|Novo7Basic|NOVO7PALADIN|novo9-Spark','NokiaLumiaTablet'=>'Lumia 2520','SonyTablet'=>'Sony.*Tablet|Xperia Tablet|Sony Tablet S|SO-03E|SGPT12|SGPT13|SGPT114|SGPT121|SGPT122|SGPT123|SGPT111|SGPT112|SGPT113|SGPT131|SGPT132|SGPT133|SGPT211|SGPT212|SGPT213|SGP311|SGP312|SGP321|EBRD1101|EBRD1102|EBRD1201|SGP351|SGP341|SGP511|SGP512|SGP521|SGP541|SGP551|SGP621|SGP612|SOT31','PhilipsTablet'=>'\b(PI2010|PI3000|PI3100|PI3105|PI3110|PI3205|PI3210|PI3900|PI4010|PI7000|PI7100)\b','CubeTablet'=>'Android.*(K8GT|U9GT|U10GT|U16GT|U17GT|U18GT|U19GT|U20GT|U23GT|U30GT)|CUBE U8GT','CobyTablet'=>'MID1042|MID1045|MID1125|MID1126|MID7012|MID7014|MID7015|MID7034|MID7035|MID7036|MID7042|MID7048|MID7127|MID8042|MID8048|MID8127|MID9042|MID9740|MID9742|MID7022|MID7010','MIDTablet'=>'M9701|M9000|M9100|M806|M1052|M806|T703|MID701|MID713|MID710|MID727|MID760|MID830|MID728|MID933|MID125|MID810|MID732|MID120|MID930|MID800|MID731|MID900|MID100|MID820|MID735|MID980|MID130|MID833|MID737|MID960|MID135|MID860|MID736|MID140|MID930|MID835|MID733|MID4X10','MSITablet'=>'MSI \b(Primo 73K|Primo 73L|Primo 81L|Primo 77|Primo 93|Primo 75|Primo 76|Primo 73|Primo 81|Primo 91|Primo 90|Enjoy 71|Enjoy 7|Enjoy 10)\b','SMiTTablet'=>'Android.*(\bMID\b|MID-560|MTV-T1200|MTV-PND531|MTV-P1101|MTV-PND530)','RockChipTablet'=>'Android.*(RK2818|RK2808A|RK2918|RK3066)|RK2738|RK2808A','FlyTablet'=>'IQ310|Fly Vision','bqTablet'=>'Android.*(bq)?.*(Elcano|Curie|Edison|Maxwell|Kepler|Pascal|Tesla|Hypatia|Platon|Newton|Livingstone|Cervantes|Avant|Aquaris ([E|M]10|M8))|Maxwell.*Lite|Maxwell.*Plus','HuaweiTablet'=>'MediaPad|MediaPad 7 Youth|IDEOS S7|S7-201c|S7-202u|S7-101|S7-103|S7-104|S7-105|S7-106|S7-201|S7-Slim|M2-A01L','NecTablet'=>'\bN-06D|\bN-08D','PantechTablet'=>'Pantech.*P4100','BronchoTablet'=>'Broncho.*(N701|N708|N802|a710)','VersusTablet'=>'TOUCHPAD.*[78910]|\bTOUCHTAB\b','ZyncTablet'=>'z1000|Z99 2G|z99|z930|z999|z990|z909|Z919|z900','PositivoTablet'=>'TB07STA|TB10STA|TB07FTA|TB10FTA','NabiTablet'=>'Android.*\bNabi','KoboTablet'=>'Kobo Touch|\bK080\b|\bVox\b Build|\bArc\b Build','DanewTablet'=>'DSlide.*\b(700|701R|702|703R|704|802|970|971|972|973|974|1010|1012)\b','TexetTablet'=>'NaviPad|TB-772A|TM-7045|TM-7055|TM-9750|TM-7016|TM-7024|TM-7026|TM-7041|TM-7043|TM-7047|TM-8041|TM-9741|TM-9747|TM-9748|TM-9751|TM-7022|TM-7021|TM-7020|TM-7011|TM-7010|TM-7023|TM-7025|TM-7037W|TM-7038W|TM-7027W|TM-9720|TM-9725|TM-9737W|TM-1020|TM-9738W|TM-9740|TM-9743W|TB-807A|TB-771A|TB-727A|TB-725A|TB-719A|TB-823A|TB-805A|TB-723A|TB-715A|TB-707A|TB-705A|TB-709A|TB-711A|TB-890HD|TB-880HD|TB-790HD|TB-780HD|TB-770HD|TB-721HD|TB-710HD|TB-434HD|TB-860HD|TB-840HD|TB-760HD|TB-750HD|TB-740HD|TB-730HD|TB-722HD|TB-720HD|TB-700HD|TB-500HD|TB-470HD|TB-431HD|TB-430HD|TB-506|TB-504|TB-446|TB-436|TB-416|TB-146SE|TB-126SE','PlaystationTablet'=>'Playstation.*(Portable|Vita)','TrekstorTablet'=>'ST10416-1|VT10416-1|ST70408-1|ST702xx-1|ST702xx-2|ST80208|ST97216|ST70104-2|VT10416-2|ST10216-2A|SurfTab','PyleAudioTablet'=>'\b(PTBL10CEU|PTBL10C|PTBL72BC|PTBL72BCEU|PTBL7CEU|PTBL7C|PTBL92BC|PTBL92BCEU|PTBL9CEU|PTBL9CUK|PTBL9C)\b','AdvanTablet'=>'Android.* \b(E3A|T3X|T5C|T5B|T3E|T3C|T3B|T1J|T1F|T2A|T1H|T1i|E1C|T1-E|T5-A|T4|E1-B|T2Ci|T1-B|T1-D|O1-A|E1-A|T1-A|T3A|T4i)\b ','DanyTechTablet'=>'Genius Tab G3|Genius Tab S2|Genius Tab Q3|Genius Tab G4|Genius Tab Q4|Genius Tab G-II|Genius TAB GII|Genius TAB GIII|Genius Tab S1','GalapadTablet'=>'Android.*\bG1\b','MicromaxTablet'=>'Funbook|Micromax.*\b(P250|P560|P360|P362|P600|P300|P350|P500|P275)\b','KarbonnTablet'=>'Android.*\b(A39|A37|A34|ST8|ST10|ST7|Smart Tab3|Smart Tab2)\b','AllFineTablet'=>'Fine7 Genius|Fine7 Shine|Fine7 Air|Fine8 Style|Fine9 More|Fine10 Joy|Fine11 Wide','PROSCANTablet'=>'\b(PEM63|PLT1023G|PLT1041|PLT1044|PLT1044G|PLT1091|PLT4311|PLT4311PL|PLT4315|PLT7030|PLT7033|PLT7033D|PLT7035|PLT7035D|PLT7044K|PLT7045K|PLT7045KB|PLT7071KG|PLT7072|PLT7223G|PLT7225G|PLT7777G|PLT7810K|PLT7849G|PLT7851G|PLT7852G|PLT8015|PLT8031|PLT8034|PLT8036|PLT8080K|PLT8082|PLT8088|PLT8223G|PLT8234G|PLT8235G|PLT8816K|PLT9011|PLT9045K|PLT9233G|PLT9735|PLT9760G|PLT9770G)\b','YONESTablet'=>'BQ1078|BC1003|BC1077|RK9702|BC9730|BC9001|IT9001|BC7008|BC7010|BC708|BC728|BC7012|BC7030|BC7027|BC7026','ChangJiaTablet'=>'TPC7102|TPC7103|TPC7105|TPC7106|TPC7107|TPC7201|TPC7203|TPC7205|TPC7210|TPC7708|TPC7709|TPC7712|TPC7110|TPC8101|TPC8103|TPC8105|TPC8106|TPC8203|TPC8205|TPC8503|TPC9106|TPC9701|TPC97101|TPC97103|TPC97105|TPC97106|TPC97111|TPC97113|TPC97203|TPC97603|TPC97809|TPC97205|TPC10101|TPC10103|TPC10106|TPC10111|TPC10203|TPC10205|TPC10503','GUTablet'=>'TX-A1301|TX-M9002|Q702|kf026','PointOfViewTablet'=>'TAB-P506|TAB-navi-7-3G-M|TAB-P517|TAB-P-527|TAB-P701|TAB-P703|TAB-P721|TAB-P731N|TAB-P741|TAB-P825|TAB-P905|TAB-P925|TAB-PR945|TAB-PL1015|TAB-P1025|TAB-PI1045|TAB-P1325|TAB-PROTAB[0-9]+|TAB-PROTAB25|TAB-PROTAB26|TAB-PROTAB27|TAB-PROTAB26XL|TAB-PROTAB2-IPS9|TAB-PROTAB30-IPS9|TAB-PROTAB25XXL|TAB-PROTAB26-IPS10|TAB-PROTAB30-IPS10','OvermaxTablet'=>'OV-(SteelCore|NewBase|Basecore|Baseone|Exellen|Quattor|EduTab|Solution|ACTION|BasicTab|TeddyTab|MagicTab|Stream|TB-08|TB-09)|Qualcore 1027','HCLTablet'=>'HCL.*Tablet|Connect-3G-2.0|Connect-2G-2.0|ME Tablet U1|ME Tablet U2|ME Tablet G1|ME Tablet X1|ME Tablet Y2|ME Tablet Sync','DPSTablet'=>'DPS Dream 9|DPS Dual 7','VistureTablet'=>'V97 HD|i75 3G|Visture V4( HD)?|Visture V5( HD)?|Visture V10','CrestaTablet'=>'CTP(-)?810|CTP(-)?818|CTP(-)?828|CTP(-)?838|CTP(-)?888|CTP(-)?978|CTP(-)?980|CTP(-)?987|CTP(-)?988|CTP(-)?989','MediatekTablet'=>'\bMT8125|MT8389|MT8135|MT8377\b','ConcordeTablet'=>'Concorde([ ]+)?Tab|ConCorde ReadMan','GoCleverTablet'=>'GOCLEVER TAB|A7GOCLEVER|M1042|M7841|M742|R1042BK|R1041|TAB A975|TAB A7842|TAB A741|TAB A741L|TAB M723G|TAB M721|TAB A1021|TAB I921|TAB R721|TAB I720|TAB T76|TAB R70|TAB R76.2|TAB R106|TAB R83.2|TAB M813G|TAB I721|GCTA722|TAB I70|TAB I71|TAB S73|TAB R73|TAB R74|TAB R93|TAB R75|TAB R76.1|TAB A73|TAB A93|TAB A93.2|TAB T72|TAB R83|TAB R974|TAB R973|TAB A101|TAB A103|TAB A104|TAB A104.2|R105BK|M713G|A972BK|TAB A971|TAB R974.2|TAB R104|TAB R83.3|TAB A1042','ModecomTablet'=>'FreeTAB 9000|FreeTAB 7.4|FreeTAB 7004|FreeTAB 7800|FreeTAB 2096|FreeTAB 7.5|FreeTAB 1014|FreeTAB 1001 |FreeTAB 8001|FreeTAB 9706|FreeTAB 9702|FreeTAB 7003|FreeTAB 7002|FreeTAB 1002|FreeTAB 7801|FreeTAB 1331|FreeTAB 1004|FreeTAB 8002|FreeTAB 8014|FreeTAB 9704|FreeTAB 1003','VoninoTablet'=>'\b(Argus[ _]?S|Diamond[ _]?79HD|Emerald[ _]?78E|Luna[ _]?70C|Onyx[ _]?S|Onyx[ _]?Z|Orin[ _]?HD|Orin[ _]?S|Otis[ _]?S|SpeedStar[ _]?S|Magnet[ _]?M9|Primus[ _]?94[ _]?3G|Primus[ _]?94HD|Primus[ _]?QS|Android.*\bQ8\b|Sirius[ _]?EVO[ _]?QS|Sirius[ _]?QS|Spirit[ _]?S)\b','ECSTablet'=>'V07OT2|TM105A|S10OT1|TR10CS1','StorexTablet'=>'eZee[_\']?(Tab|Go)[0-9]+|TabLC7|Looney Tunes Tab','VodafoneTablet'=>'SmartTab([ ]+)?[0-9]+|SmartTabII10|SmartTabII7|VF-1497','EssentielBTablet'=>'Smart[ \']?TAB[ ]+?[0-9]+|Family[ \']?TAB2','RossMoorTablet'=>'RM-790|RM-997|RMD-878G|RMD-974R|RMT-705A|RMT-701|RME-601|RMT-501|RMT-711','iMobileTablet'=>'i-mobile i-note','TolinoTablet'=>'tolino tab [0-9.]+|tolino shine','AudioSonicTablet'=>'\bC-22Q|T7-QC|T-17B|T-17P\b','AMPETablet'=>'Android.* A78 ','SkkTablet'=>'Android.* (SKYPAD|PHOENIX|CYCLOPS)','TecnoTablet'=>'TECNO P9','JXDTablet'=>'Android.* \b(F3000|A3300|JXD5000|JXD3000|JXD2000|JXD300B|JXD300|S5800|S7800|S602b|S5110b|S7300|S5300|S602|S603|S5100|S5110|S601|S7100a|P3000F|P3000s|P101|P200s|P1000m|P200m|P9100|P1000s|S6600b|S908|P1000|P300|S18|S6600|S9100)\b','iJoyTablet'=>'Tablet (Spirit 7|Essentia|Galatea|Fusion|Onix 7|Landa|Titan|Scooby|Deox|Stella|Themis|Argon|Unique 7|Sygnus|Hexen|Finity 7|Cream|Cream X2|Jade|Neon 7|Neron 7|Kandy|Scape|Saphyr 7|Rebel|Biox|Rebel|Rebel 8GB|Myst|Draco 7|Myst|Tab7-004|Myst|Tadeo Jones|Tablet Boing|Arrow|Draco Dual Cam|Aurix|Mint|Amity|Revolution|Finity 9|Neon 9|T9w|Amity 4GB Dual Cam|Stone 4GB|Stone 8GB|Andromeda|Silken|X2|Andromeda II|Halley|Flame|Saphyr 9,7|Touch 8|Planet|Triton|Unique 10|Hexen 10|Memphis 4GB|Memphis 8GB|Onix 10)','FX2Tablet'=>'FX2 PAD7|FX2 PAD10','XoroTablet'=>'KidsPAD 701|PAD[ ]?712|PAD[ ]?714|PAD[ ]?716|PAD[ ]?717|PAD[ ]?718|PAD[ ]?720|PAD[ ]?721|PAD[ ]?722|PAD[ ]?790|PAD[ ]?792|PAD[ ]?900|PAD[ ]?9715D|PAD[ ]?9716DR|PAD[ ]?9718DR|PAD[ ]?9719QR|PAD[ ]?9720QR|TelePAD1030|Telepad1032|TelePAD730|TelePAD731|TelePAD732|TelePAD735Q|TelePAD830|TelePAD9730|TelePAD795|MegaPAD 1331|MegaPAD 1851|MegaPAD 2151','ViewsonicTablet'=>'ViewPad 10pi|ViewPad 10e|ViewPad 10s|ViewPad E72|ViewPad7|ViewPad E100|ViewPad 7e|ViewSonic VB733|VB100a','VerizonTablet'=>'QTAQZ3|QTAIR7|QTAQTZ3|QTASUN1|QTASUN2|QTAXIA1','OdysTablet'=>'LOOX|XENO10|ODYS[ -](Space|EVO|Xpress|NOON)|\bXELIO\b|Xelio10Pro|XELIO7PHONETAB|XELIO10EXTREME|XELIOPT2|NEO_QUAD10','CaptivaTablet'=>'CAPTIVA PAD','IconbitTablet'=>'NetTAB|NT-3702|NT-3702S|NT-3702S|NT-3603P|NT-3603P|NT-0704S|NT-0704S|NT-3805C|NT-3805C|NT-0806C|NT-0806C|NT-0909T|NT-0909T|NT-0907S|NT-0907S|NT-0902S|NT-0902S','TeclastTablet'=>'T98 4G|\bP80\b|\bX90HD\b|X98 Air|X98 Air 3G|\bX89\b|P80 3G|\bX80h\b|P98 Air|\bX89HD\b|P98 3G|\bP90HD\b|P89 3G|X98 3G|\bP70h\b|P79HD 3G|G18d 3G|\bP79HD\b|\bP89s\b|\bA88\b|\bP10HD\b|\bP19HD\b|G18 3G|\bP78HD\b|\bA78\b|\bP75\b|G17s 3G|G17h 3G|\bP85t\b|\bP90\b|\bP11\b|\bP98t\b|\bP98HD\b|\bG18d\b|\bP85s\b|\bP11HD\b|\bP88s\b|\bA80HD\b|\bA80se\b|\bA10h\b|\bP89\b|\bP78s\b|\bG18\b|\bP85\b|\bA70h\b|\bA70\b|\bG17\b|\bP18\b|\bA80s\b|\bA11s\b|\bP88HD\b|\bA80h\b|\bP76s\b|\bP76h\b|\bP98\b|\bA10HD\b|\bP78\b|\bP88\b|\bA11\b|\bA10t\b|\bP76a\b|\bP76t\b|\bP76e\b|\bP85HD\b|\bP85a\b|\bP86\b|\bP75HD\b|\bP76v\b|\bA12\b|\bP75a\b|\bA15\b|\bP76Ti\b|\bP81HD\b|\bA10\b|\bT760VE\b|\bT720HD\b|\bP76\b|\bP73\b|\bP71\b|\bP72\b|\bT720SE\b|\bC520Ti\b|\bT760\b|\bT720VE\b|T720-3GE|T720-WiFi','OndaTablet'=>'\b(V975i|Vi30|VX530|V701|Vi60|V701s|Vi50|V801s|V719|Vx610w|VX610W|V819i|Vi10|VX580W|Vi10|V711s|V813|V811|V820w|V820|Vi20|V711|VI30W|V712|V891w|V972|V819w|V820w|Vi60|V820w|V711|V813s|V801|V819|V975s|V801|V819|V819|V818|V811|V712|V975m|V101w|V961w|V812|V818|V971|V971s|V919|V989|V116w|V102w|V973|Vi40)\b[\s]+','JaytechTablet'=>'TPC-PA762','BlaupunktTablet'=>'Endeavour 800NG|Endeavour 1010','DigmaTablet'=>'\b(iDx10|iDx9|iDx8|iDx7|iDxD7|iDxD8|iDsQ8|iDsQ7|iDsQ8|iDsD10|iDnD7|3TS804H|iDsQ11|iDj7|iDs10)\b','EvolioTablet'=>'ARIA_Mini_wifi|Aria[ _]Mini|Evolio X10|Evolio X7|Evolio X8|\bEvotab\b|\bNeura\b','LavaTablet'=>'QPAD E704|\bIvoryS\b|E-TAB IVORY|\bE-TAB\b','AocTablet'=>'MW0811|MW0812|MW0922|MTK8382|MW1031|MW0831|MW0821|MW0931|MW0712','MpmanTablet'=>'MP11 OCTA|MP10 OCTA|MPQC1114|MPQC1004|MPQC994|MPQC974|MPQC973|MPQC804|MPQC784|MPQC780|\bMPG7\b|MPDCG75|MPDCG71|MPDC1006|MP101DC|MPDC9000|MPDC905|MPDC706HD|MPDC706|MPDC705|MPDC110|MPDC100|MPDC99|MPDC97|MPDC88|MPDC8|MPDC77|MP709|MID701|MID711|MID170|MPDC703|MPQC1010','CelkonTablet'=>'CT695|CT888|CT[\s]?910|CT7 Tab|CT9 Tab|CT3 Tab|CT2 Tab|CT1 Tab|C820|C720|\bCT-1\b','WolderTablet'=>'miTab \b(DIAMOND|SPACE|BROOKLYN|NEO|FLY|MANHATTAN|FUNK|EVOLUTION|SKY|GOCAR|IRON|GENIUS|POP|MINT|EPSILON|BROADWAY|JUMP|HOP|LEGEND|NEW AGE|LINE|ADVANCE|FEEL|FOLLOW|LIKE|LINK|LIVE|THINK|FREEDOM|CHICAGO|CLEVELAND|BALTIMORE-GH|IOWA|BOSTON|SEATTLE|PHOENIX|DALLAS|IN 101|MasterChef)\b','MiTablet'=>'\bMI PAD\b|\bHM NOTE 1W\b','NibiruTablet'=>'Nibiru M1|Nibiru Jupiter One','NexoTablet'=>'NEXO NOVA|NEXO 10|NEXO AVIO|NEXO FREE|NEXO GO|NEXO EVO|NEXO 3G|NEXO SMART|NEXO KIDDO|NEXO MOBI','LeaderTablet'=>'TBLT10Q|TBLT10I|TBL-10WDKB|TBL-10WDKBO2013|TBL-W230V2|TBL-W450|TBL-W500|SV572|TBLT7I|TBA-AC7-8G|TBLT79|TBL-8W16|TBL-10W32|TBL-10WKB|TBL-W100','UbislateTablet'=>'UbiSlate[\s]?7C','PocketBookTablet'=>'Pocketbook','KocasoTablet'=>'\b(TB-1207)\b','HisenseTablet'=>'\b(F5281|E2371)\b','Hudl'=>'Hudl HT7S3|Hudl 2','TelstraTablet'=>'T-Hub2','GenericTablet'=>'Android.*\b97D\b|Tablet(?!.*PC)|BNTV250A|MID-WCDMA|LogicPD Zoom2|\bA7EB\b|CatNova8|A1_07|CT704|CT1002|\bM721\b|rk30sdk|\bEVOTAB\b|M758A|ET904|ALUMIUM10|Smartfren Tab|Endeavour 1010|Tablet-PC-4|Tagi Tab|\bM6pro\b|CT1020W|arc 10HD|\bTP750\b|\bQTAQZ3\b');protected static$operatingSystems=array('AndroidOS'=>'Android','BlackBerryOS'=>'blackberry|\bBB10\b|rim tablet os','PalmOS'=>'PalmOS|avantgo|blazer|elaine|hiptop|palm|plucker|xiino','SymbianOS'=>'Symbian|SymbOS|Series60|Series40|SYB-[0-9]+|\bS60\b','WindowsMobileOS'=>'Windows CE.*(PPC|Smartphone|Mobile|[0-9]{3}x[0-9]{3})|Window Mobile|Windows Phone [0-9.]+|WCE;','WindowsPhoneOS'=>'Windows Phone 10.0|Windows Phone 8.1|Windows Phone 8.0|Windows Phone OS|XBLWP7|ZuneWP7|Windows NT 6.[23]; ARM;','iOS'=>'\biPhone.*Mobile|\biPod|\biPad|AppleCoreMedia','MeeGoOS'=>'MeeGo','MaemoOS'=>'Maemo','JavaOS'=>'J2ME/|\bMIDP\b|\bCLDC\b','webOS'=>'webOS|hpwOS','badaOS'=>'\bBada\b','BREWOS'=>'BREW',);protected static$browsers=array('Chrome'=>'\bCrMo\b|CriOS|Android.*Chrome/[.0-9]* (Mobile)?','Dolfin'=>'\bDolfin\b','Opera'=>'Opera.*Mini|Opera.*Mobi|Android.*Opera|Mobile.*OPR/[0-9.]+|Coast/[0-9.]+','Skyfire'=>'Skyfire','Edge'=>'Mobile Safari/[.0-9]* Edge','IE'=>'IEMobile|MSIEMobile','Firefox'=>'fennec|firefox.*maemo|(Mobile|Tablet).*Firefox|Firefox.*Mobile|FxiOS','Bolt'=>'bolt','TeaShark'=>'teashark','Blazer'=>'Blazer','Safari'=>'Version.*Mobile.*Safari|Safari.*Mobile|MobileSafari','UCBrowser'=>'UC.*Browser|UCWEB','baiduboxapp'=>'baiduboxapp','baidubrowser'=>'baidubrowser','DiigoBrowser'=>'DiigoBrowser','Puffin'=>'Puffin','Mercury'=>'\bMercury\b','ObigoBrowser'=>'Obigo','NetFront'=>'NF-Browser','GenericBrowser'=>'NokiaBrowser|OviBrowser|OneBrowser|TwonkyBeamBrowser|SEMC.*Browser|FlyFlow|Minimo|NetFront|Novarra-Vision|MQQBrowser|MicroMessenger','PaleMoon'=>'Android.*PaleMoon|Mobile.*PaleMoon',);protected static$utilities=array('Bot'=>'Googlebot|facebookexternalhit|AdsBot-Google|Google Keyword Suggestion|Facebot|YandexBot|YandexMobileBot|bingbot|ia_archiver|AhrefsBot|Ezooms|GSLFbot|WBSearchBot|Twitterbot|TweetmemeBot|Twikle|PaperLiBot|Wotbox|UnwindFetchor|Exabot|MJ12bot|YandexImages|TurnitinBot|Pingdom','MobileBot'=>'Googlebot-Mobile|AdsBot-Google-Mobile|YahooSeeker/M1A1-R2D2','DesktopMode'=>'WPDesktop','TV'=>'SonyDTV|HbbTV','WebKit'=>'(webkit)[ /]([\w.]+)','Console'=>'\b(Nintendo|Nintendo WiiU|Nintendo 3DS|PLAYSTATION|Xbox)\b','Watch'=>'SM-V700',);protected static$uaHttpHeaders=array('HTTP_USER_AGENT','HTTP_X_OPERAMINI_PHONE_UA','HTTP_X_DEVICE_USER_AGENT','HTTP_X_ORIGINAL_USER_AGENT','HTTP_X_SKYFIRE_PHONE','HTTP_X_BOLT_PHONE_UA','HTTP_DEVICE_STOCK_UA','HTTP_X_UCBROWSER_DEVICE_UA');protected static$properties=array('Mobile'=>'Mobile/[VER]','Build'=>'Build/[VER]','Version'=>'Version/[VER]','VendorID'=>'VendorID/[VER]','iPad'=>'iPad.*CPU[a-z ]+[VER]','iPhone'=>'iPhone.*CPU[a-z ]+[VER]','iPod'=>'iPod.*CPU[a-z ]+[VER]','Kindle'=>'Kindle/[VER]','Chrome'=>array('Chrome/[VER]','CriOS/[VER]','CrMo/[VER]'),'Coast'=>array('Coast/[VER]'),'Dolfin'=>'Dolfin/[VER]','Firefox'=>array('Firefox/[VER]','FxiOS/[VER]'),'Fennec'=>'Fennec/[VER]','Edge'=>'Edge/[VER]','IE'=>array('IEMobile/[VER];','IEMobile [VER]','MSIE [VER];','Trident/[0-9.]+;.*rv:[VER]'),'NetFront'=>'NetFront/[VER]','NokiaBrowser'=>'NokiaBrowser/[VER]','Opera'=>array(' OPR/[VER]','Opera Mini/[VER]','Version/[VER]'),'Opera Mini'=>'Opera Mini/[VER]','Opera Mobi'=>'Version/[VER]','UCBrowser'=>array('UCWEB[VER]','UC.*Browser/[VER]'),'MQQBrowser'=>'MQQBrowser/[VER]','MicroMessenger'=>'MicroMessenger/[VER]','baiduboxapp'=>'baiduboxapp/[VER]','baidubrowser'=>'baidubrowser/[VER]','SamsungBrowser'=>'SamsungBrowser/[VER]','Iron'=>'Iron/[VER]','Safari'=>array('Version/[VER]','Safari/[VER]'),'Skyfire'=>'Skyfire/[VER]','Tizen'=>'Tizen/[VER]','Webkit'=>'webkit[ /][VER]','PaleMoon'=>'PaleMoon/[VER]','Gecko'=>'Gecko/[VER]','Trident'=>'Trident/[VER]','Presto'=>'Presto/[VER]','Goanna'=>'Goanna/[VER]','iOS'=>' \bi?OS\b [VER][ ;]{1}','Android'=>'Android [VER]','BlackBerry'=>array('BlackBerry[\w]+/[VER]','BlackBerry.*Version/[VER]','Version/[VER]'),'BREW'=>'BREW [VER]','Java'=>'Java/[VER]','Windows Phone OS'=>array('Windows Phone OS [VER]','Windows Phone [VER]'),'Windows Phone'=>'Windows Phone [VER]','Windows CE'=>'Windows CE/[VER]','Windows NT'=>'Windows NT [VER]','Symbian'=>array('SymbianOS/[VER]','Symbian/[VER]'),'webOS'=>array('webOS/[VER]','hpwOS/[VER];'),);public function __construct(array$headers=null,$userAgent=null){$this->setHttpHeaders($headers);$this->setUserAgent($userAgent);}public static function getScriptVersion(){return self::VERSION;}public function setHttpHeaders($httpHeaders=null){if(!is_array($httpHeaders)||!count($httpHeaders)){$httpHeaders=$_SERVER;}$this->httpHeaders=array();foreach($httpHeaders as$key=>$value){if(substr($key,0,5)==='HTTP_'){$this->httpHeaders[$key]=$value;}}$this->setCfHeaders($httpHeaders);}public function getHttpHeaders(){return$this->httpHeaders;}public function getHttpHeader($header){if(strpos($header,'_')===false){$header=str_replace('-','_',$header);$header=strtoupper($header);}$altHeader='HTTP_'.$header;if(isset($this->httpHeaders[$header])){return$this->httpHeaders[$header];}elseif(isset($this->httpHeaders[$altHeader])){return$this->httpHeaders[$altHeader];}return null;}public function getMobileHeaders(){return self::$mobileHeaders;}public function getUaHttpHeaders(){return self::$uaHttpHeaders;}public function setCfHeaders($cfHeaders=null){if(!is_array($cfHeaders)||!count($cfHeaders)){$cfHeaders=$_SERVER;}$this->cloudfrontHeaders=array();$response=false;foreach($cfHeaders as$key=>$value){if(substr(strtolower($key),0,16)==='http_cloudfront_'){$this->cloudfrontHeaders[strtoupper($key)]=$value;$response=true;}}return$response;}public function getCfHeaders(){return$this->cloudfrontHeaders;}private function prepareUserAgent($userAgent){$userAgent=trim($userAgent);$userAgent=substr($userAgent,0,500);return$userAgent;}public function setUserAgent($userAgent=null){$this->cache=array();if(false===empty($userAgent)){return$this->userAgent=$this->prepareUserAgent($userAgent);}else{$this->userAgent=null;foreach($this->getUaHttpHeaders()as$altHeader){if(false===empty($this->httpHeaders[$altHeader])){$this->userAgent.=$this->httpHeaders[$altHeader]." ";}}if(!empty($this->userAgent)){return$this->userAgent=$this->prepareUserAgent($this->userAgent);}}if(count($this->getCfHeaders())>0){return$this->userAgent='Amazon CloudFront';}return$this->userAgent=null;}public function getUserAgent(){return$this->userAgent;}public function setDetectionType($type=null){if($type===null){$type=self::DETECTION_TYPE_MOBILE;}if($type!==self::DETECTION_TYPE_MOBILE&&$type!==self::DETECTION_TYPE_EXTENDED){return;}$this->detectionType=$type;}public function getMatchingRegex(){return$this->matchingRegex;}public function getMatchesArray(){return$this->matchesArray;}public static function getPhoneDevices(){return self::$phoneDevices;}public static function getTabletDevices(){return self::$tabletDevices;}public static function getUserAgents(){return self::getBrowsers();}public static function getBrowsers(){return self::$browsers;}public static function getUtilities(){return self::$utilities;}public static function getMobileDetectionRules(){static$rules;if(!$rules){$rules=array_merge(self::$phoneDevices,self::$tabletDevices,self::$operatingSystems,self::$browsers);}return$rules;}public function getMobileDetectionRulesExtended(){static$rules;if(!$rules){$rules=array_merge(self::$phoneDevices,self::$tabletDevices,self::$operatingSystems,self::$browsers,self::$utilities);}return$rules;}public function getRules(){if($this->detectionType==self::DETECTION_TYPE_EXTENDED){return self::getMobileDetectionRulesExtended();}else{return self::getMobileDetectionRules();}}public static function getOperatingSystems(){return self::$operatingSystems;}public function checkHttpHeadersForMobile(){foreach($this->getMobileHeaders()as$mobileHeader=>$matchType){if(isset($this->httpHeaders[$mobileHeader])){if(is_array($matchType['matches'])){foreach($matchType['matches']as$_match){if(strpos($this->httpHeaders[$mobileHeader],$_match)!==false){return true;}}return false;}else{return true;}}}return false;}public function __call($name,$arguments){if(substr($name,0,2)!=='is'){throw new BadMethodCallException("No such method exists: $name");}$this->setDetectionType(self::DETECTION_TYPE_MOBILE);$key=substr($name,2);return$this->matchUAAgainstKey($key);}protected function matchDetectionRulesAgainstUA($userAgent=null){foreach($this->getRules()as$_regex){if(empty($_regex)){continue;}if($this->match($_regex,$userAgent)){return true;}}return false;}protected function matchUAAgainstKey($key){$key=strtolower($key);if(false===isset($this->cache[$key])){$_rules=array_change_key_case($this->getRules());if(false===empty($_rules[$key])){$this->cache[$key]=$this->match($_rules[$key]);}if(false===isset($this->cache[$key])){$this->cache[$key]=false;}}return$this->cache[$key];}public function isMobile($userAgent=null,$httpHeaders=null){if($httpHeaders){$this->setHttpHeaders($httpHeaders);}if($userAgent){$this->setUserAgent($userAgent);}if($this->getUserAgent()==='Amazon CloudFront'){$cfHeaders=$this->getCfHeaders();if(array_key_exists('HTTP_CLOUDFRONT_IS_MOBILE_VIEWER',$cfHeaders)&&$cfHeaders['HTTP_CLOUDFRONT_IS_MOBILE_VIEWER']==='true'){return true;}}$this->setDetectionType(self::DETECTION_TYPE_MOBILE);if($this->checkHttpHeadersForMobile()){return true;}else{return$this->matchDetectionRulesAgainstUA();}}public function isTablet($userAgent=null,$httpHeaders=null){if($this->getUserAgent()==='Amazon CloudFront'){$cfHeaders=$this->getCfHeaders();if(array_key_exists('HTTP_CLOUDFRONT_IS_TABLET_VIEWER',$cfHeaders)&&$cfHeaders['HTTP_CLOUDFRONT_IS_TABLET_VIEWER']==='true'){return true;}}$this->setDetectionType(self::DETECTION_TYPE_MOBILE);foreach(self::$tabletDevices as$_regex){if($this->match($_regex,$userAgent)){return true;}}return false;}public function is($key,$userAgent=null,$httpHeaders=null){if($httpHeaders){$this->setHttpHeaders($httpHeaders);}if($userAgent){$this->setUserAgent($userAgent);}$this->setDetectionType(self::DETECTION_TYPE_EXTENDED);return$this->matchUAAgainstKey($key);}public function match($regex,$userAgent=null){$match=(bool)preg_match(sprintf('#%s#is',$regex),(false===empty($userAgent)?$userAgent:$this->userAgent),$matches);if($match){$this->matchingRegex=$regex;$this->matchesArray=$matches;}return$match;}public static function getProperties(){return self::$properties;}public function prepareVersionNo($ver){$ver=str_replace(array('_',' ','/'),'.',$ver);$arrVer=explode('.',$ver,2);if(isset($arrVer[1])){$arrVer[1]=@str_replace('.','',$arrVer[1]);}return(float)implode('.',$arrVer);}public function version($propertyName,$type=self::VERSION_TYPE_STRING){if(empty($propertyName)){return false;}if($type!==self::VERSION_TYPE_STRING&&$type!==self::VERSION_TYPE_FLOAT){$type=self::VERSION_TYPE_STRING;}$properties=self::getProperties();if(true===isset($properties[$propertyName])){$properties[$propertyName]=(array)$properties[$propertyName];foreach($properties[$propertyName]as$propertyMatchString){$propertyPattern=str_replace('[VER]',self::VER,$propertyMatchString);preg_match(sprintf('#%s#is',$propertyPattern),$this->userAgent,$match);if(false===empty($match[1])){$version=($type==self::VERSION_TYPE_FLOAT?$this->prepareVersionNo($match[1]):$match[1]);return$version;}}}return false;}public function mobileGrade(){$isMobile=$this->isMobile();if($this->is('iOS')&&$this->version('iPad',self::VERSION_TYPE_FLOAT)>=4.3||$this->is('iOS')&&$this->version('iPhone',self::VERSION_TYPE_FLOAT)>=4.3||$this->is('iOS')&&$this->version('iPod',self::VERSION_TYPE_FLOAT)>=4.3||($this->version('Android',self::VERSION_TYPE_FLOAT)>2.1&&$this->is('Webkit'))||$this->version('Windows Phone OS',self::VERSION_TYPE_FLOAT)>=7.5||$this->is('BlackBerry')&&$this->version('BlackBerry',self::VERSION_TYPE_FLOAT)>=6.0||$this->match('Playbook.*Tablet')||($this->version('webOS',self::VERSION_TYPE_FLOAT)>=1.4&&$this->match('Palm|Pre|Pixi'))||$this->match('hp.*TouchPad')||($this->is('Firefox')&&$this->version('Firefox',self::VERSION_TYPE_FLOAT)>=18)||($this->is('Chrome')&&$this->is('AndroidOS')&&$this->version('Android',self::VERSION_TYPE_FLOAT)>=4.0)||($this->is('Skyfire')&&$this->version('Skyfire',self::VERSION_TYPE_FLOAT)>=4.1&&$this->is('AndroidOS')&&$this->version('Android',self::VERSION_TYPE_FLOAT)>=2.3)||($this->is('Opera')&&$this->version('Opera Mobi',self::VERSION_TYPE_FLOAT)>=11.5&&$this->is('AndroidOS'))||$this->is('MeeGoOS')||$this->is('Tizen')||$this->is('Dolfin')&&$this->version('Bada',self::VERSION_TYPE_FLOAT)>=2.0||(($this->is('UC Browser')||$this->is('Dolfin'))&&$this->version('Android',self::VERSION_TYPE_FLOAT)>=2.3)||($this->match('Kindle Fire')||$this->is('Kindle')&&$this->version('Kindle',self::VERSION_TYPE_FLOAT)>=3.0)||$this->is('AndroidOS')&&$this->is('NookTablet')||$this->version('Chrome',self::VERSION_TYPE_FLOAT)>=16&&!$isMobile||$this->version('Safari',self::VERSION_TYPE_FLOAT)>=5.0&&!$isMobile||$this->version('Firefox',self::VERSION_TYPE_FLOAT)>=10.0&&!$isMobile||$this->version('IE',self::VERSION_TYPE_FLOAT)>=7.0&&!$isMobile||$this->version('Opera',self::VERSION_TYPE_FLOAT)>=10&&!$isMobile){return self::MOBILE_GRADE_A;}if($this->is('iOS')&&$this->version('iPad',self::VERSION_TYPE_FLOAT)<4.3||$this->is('iOS')&&$this->version('iPhone',self::VERSION_TYPE_FLOAT)<4.3||$this->is('iOS')&&$this->version('iPod',self::VERSION_TYPE_FLOAT)<4.3||$this->is('Blackberry')&&$this->version('BlackBerry',self::VERSION_TYPE_FLOAT)>=5&&$this->version('BlackBerry',self::VERSION_TYPE_FLOAT)<6||($this->version('Opera Mini',self::VERSION_TYPE_FLOAT)>=5.0&&$this->version('Opera Mini',self::VERSION_TYPE_FLOAT)<=7.0&&($this->version('Android',self::VERSION_TYPE_FLOAT)>=2.3||$this->is('iOS')))||$this->match('NokiaN8|NokiaC7|N97.*Series60|Symbian/3')||$this->version('Opera Mobi',self::VERSION_TYPE_FLOAT)>=11&&$this->is('SymbianOS')){return self::MOBILE_GRADE_B;}if($this->version('BlackBerry',self::VERSION_TYPE_FLOAT)<=5.0||$this->match('MSIEMobile|Windows CE.*Mobile')||$this->version('Windows Mobile',self::VERSION_TYPE_FLOAT)<=5.2||$this->is('iOS')&&$this->version('iPad',self::VERSION_TYPE_FLOAT)<=3.2||$this->is('iOS')&&$this->version('iPhone',self::VERSION_TYPE_FLOAT)<=3.2||$this->is('iOS')&&$this->version('iPod',self::VERSION_TYPE_FLOAT)<=3.2||$this->version('IE',self::VERSION_TYPE_FLOAT)<=7.0&&!$isMobile){return self::MOBILE_GRADE_C;}return self::MOBILE_GRADE_C;}}
}namespace MvcCore\Ext\Routers\Localization{trait UrlByRouteSections{protected function urlByRouteSections(\MvcCore\IRoute&$route,array&$params=[],$urlParamRouteName=NULL){$defaultParams=array_merge([],$this->GetDefaultParams()?:[]);if($urlParamRouteName=='self')$params=array_merge($this->requestedParams,$params);$localizationParamName=static::URL_PARAM_LOCALIZATION;$localizedRoute=$route instanceof\MvcCore\Ext\Routers\Localizations\Route;if(isset($params[$localizationParamName])){$localizationStr=$params[$localizationParamName];}else{$localizationStr=implode(static::LANG_AND_LOCALE_SEPARATOR,$this->localization);if($localizedRoute)$params[$localizationParamName]=$localizationStr;}$routeMethod=$route->GetMethod();if($this->routeGetRequestsOnly&&$routeMethod!==NULL&&$routeMethod!==\MvcCore\IRequest::METHOD_GET){$localizationStr=NULL;}else if(!isset($this->allowedLocalizations[$localizationStr])){if(isset($this->localizationEquivalents[$localizationStr]))$localizationStr=$this->localizationEquivalents[$localizationStr];if(!isset($this->allowedLocalizations[$localizationStr])){$localizationStr=NULL;trigger_error('['.__CLASS__.'] Not allowed localization used to generate url: `'.$localizationStr.'`. Allowed values: `'.implode('`, `',array_keys($this->allowedLocalizations)).'`.',E_USER_ERROR);}}if($this->stricModeBySession&&$localizationStr!==NULL&&$localizationStr!==implode(static::LANG_AND_LOCALE_SEPARATOR,$this->localization))$params[static::URL_PARAM_SWITCH_LOCALIZATION]=$localizationStr;list($urlBaseSection,$urlPathWithQuerySection)=$route->Url($this->request,$params,$defaultParams,$this->getQueryStringParamsSepatator());$systemParams=[];if($localizationStr!==NULL)$systemParams[$localizationParamName]=$localizationStr;return[$urlBaseSection,$urlPathWithQuerySection,$systemParams];}}}
namespace MvcCore\Ext\Routers\Localization{trait UrlByRoute{public function UrlByRoute(\MvcCore\IRoute&$route,array&$params=[],$urlParamRouteName=NULL){list($urlBaseSection,$urlPathWithQuerySection,$systemParams)=$this->urlByRouteSections($route,$params,$urlParamRouteName);$localizedRoute=$route instanceof\MvcCore\Ext\Routers\Localizations\Route;$localizationParamName=static::URL_PARAM_LOCALIZATION;$urlPathWithQueryIsHome=NULL;if(isset($systemParams[$localizationParamName])){if(!$localizedRoute){unset($systemParams[$localizationParamName]);}else if($systemParams[$localizationParamName]===$this->defaultLocalizationStr){$urlPathWithQueryIsHome=$this->urlIsHomePath($urlPathWithQuerySection);if($urlPathWithQueryIsHome)unset($systemParams[$localizationParamName]);}}return$this->urlByRoutePrefixSystemParams($urlBaseSection,$urlPathWithQuerySection,$systemParams,$urlPathWithQueryIsHome);}}}
namespace MvcCore\Ext\Routers\Localization{trait Routing{public function Route(){$this->internalRequest=$this->request->IsInternalRequest();list($requestCtrlName,$requestActionName)=$this->routeDetectStrategy();if(!$this->internalRequest){if(!$this->redirectToProperTrailingSlashIfNecessary())return FALSE;$this->prepare();$this->prepareLocalization();if(!$this->preRouteLocalization())return FALSE;}if($this->routeByQueryString){$this->queryStringRouting($requestCtrlName,$requestActionName);}else{$this->rewriteRouting($requestCtrlName,$requestActionName);if($this->currentRoute===NULL&&!$this->requestLocalization){$this->allowNonLocalizedRoutes=FALSE;if(!$this->checkLocalizationWithUrlAndRedirectIfNecessary())return FALSE;}}if(!$this->routeProcessRouteRedirectionIfAny())return FALSE;return$this->routeSetUpDefaultForHomeIfNoMatch()->routeSetUpSelfRouteNameIfAny()->canonicalRedirectIfAny();}}}
namespace MvcCore\Ext\Routers\Localization{trait RedirectSections{protected function redirectToVersionSections($systemParams){$request=&$this->request;$urlBaseSection=$request->GetBaseUrl();$urlPathWithQuerySection=$request->GetPath(TRUE);$localizationParamName=static::URL_PARAM_LOCALIZATION;$targetLocalizationUrlValue=$this->redirectLocalizationGetUrlValueAndUnsetGet($systemParams[$localizationParamName]);$urlPathWithQueryIsHome=NULL;if($this->anyRoutesConfigured){if($targetLocalizationUrlValue===NULL){unset($systemParams[$localizationParamName]);}else{$systemParams[$localizationParamName]=$targetLocalizationUrlValue;if($targetLocalizationUrlValue===$this->defaultLocalizationStr){$urlPathWithQueryIsHome=$this->urlIsHomePath($urlPathWithQuerySection);if($urlPathWithQueryIsHome)unset($systemParams[$localizationParamName]);}}$this->redirectAddAllRemainingInGlobalGet($urlPathWithQuerySection);}else{$this->removeDefaultCtrlActionFromGlobalGet();if($this->requestGlobalGet)$urlPathWithQuerySection.=$request->GetScriptName();$this->redirectAddAllRemainingInGlobalGet($urlPathWithQuerySection);}$this->redirectStatusCode=\MvcCore\IResponse::MOVED_PERMANENTLY;return[$urlBaseSection,$urlPathWithQuerySection,$systemParams,$urlPathWithQueryIsHome];}}}
namespace MvcCore\Ext\Forms\Field\Props{trait GroupLabelAttrs{protected$groupLabelAttrs=[];public function&GetGroupLabelAttrs(){return$this->groupLabelAttrs;}public function&SetGroupLabelAttrs($groupLabelAttrs=[]){$this->groupLabelAttrs=$groupLabelAttrs;return$this;}public function AddGroupLabelAttr($groupLabelAttrs=[]){$this->groupLabelAttrs=array_merge($this->groupLabelAttrs,$groupLabelAttrs);return$this;}}}
namespace MvcCore\Ext\Forms\Field\Props{trait GroupLabelCssClasses{protected$groupLabelCssClasses=[];public function&GetGroupLabelCssClasses(){return$this->groupLabelCssClasses;}public function&SetGroupLabelCssClasses($groupLabelCssClasses){if(gettype($groupLabelCssClasses)=='array'){$this->groupLabelCssClasses=$groupLabelCssClasses;}else{$this->groupLabelCssClasses=explode(' ',(string)$groupLabelCssClasses);}return$this;}public function AddGroupLabelCssClasses($groupLabelCssClasses){if(gettype($groupLabelCssClasses)=='array'){$groupCssClasses=$groupLabelCssClasses;}else{$groupCssClasses=explode(' ',(string)$groupLabelCssClasses);}$this->groupLabelCssClasses=array_merge($this->groupLabelCssClasses,$groupCssClasses);return$this;}}}
namespace MvcCore\Tool{trait Json{public static function EncodeJson(&$data){$flags=JSON_HEX_TAG|JSON_HEX_APOS|JSON_HEX_QUOT|JSON_HEX_AMP|(defined('JSON_UNESCAPED_SLASHES')?JSON_UNESCAPED_SLASHES:0)|(defined('JSON_UNESCAPED_UNICODE')?JSON_UNESCAPED_UNICODE:0)|(defined('JSON_PRESERVE_ZERO_FRACTION')?JSON_PRESERVE_ZERO_FRACTION:0);$json=json_encode($data,$flags);if($errorCode=json_last_error()){throw new\RuntimeException("[".__CLASS__."] ".json_last_error_msg(),$errorCode);}if(PHP_VERSION_ID<70100){$json=strtr($json,["\xe2\x80\xa8"=>'\u2028',"\xe2\x80\xa9"=>'\u2029',]);}return$json;}public static function DecodeJson(&$jsonStr){$result=(object)['success'=>TRUE,'data'=>null,'errorData'=>[],];$jsonData=@json_decode($jsonStr);$errorCode=json_last_error();if($errorCode==JSON_ERROR_NONE){$result->data=$jsonData;}else{$result->success=FALSE;$result->errorData=[json_last_error_msg(),$errorCode];}return$result;}}}
namespace MvcCore\Ext\Auths\Basics\Controller{trait Base{public function SignInAction(){$form=\MvcCore\Ext\Auths\Basic::GetInstance()->GetSignInForm();list($result,)=$form->Submit();if($result!==\MvcCore\Ext\Form::RESULT_SUCCESS){}if($result)$form->ClearSession();$form->SubmittedRedirect();}public function SignOutAction(){$form=\MvcCore\Ext\Auths\Basic::GetInstance()->GetSignOutForm();list($result,)=$form->Submit();if($result)$form->ClearSession();$form->SubmittedRedirect();}}}
namespace MvcCore\Ext\Forms{interface IFieldsGroup{public function&GetGroupLabelCssClasses();public function&SetGroupLabelCssClasses($groupLabelCssClasses);public function AddGroupLabelCssClasses($groupLabelCssClasses);public function&GetGroupLabelAttrs();public function&SetGroupLabelAttrs($groupLabelAttrs=[]);public function AddGroupLabelAttr($groupLabelAttrs=[]);public function GetValue();public function&SetValue($value);public function GetMultiple();public function&SetMultiple($multiple=TRUE);public function&SetForm(\MvcCore\Ext\Forms\IForm&$form);public function PreDispatch();public function RenderNaturally();public function RenderControlInsideLabel();public function RenderControl();public function RenderLabel();public function RenderControlItem($key,$option);}}
namespace App\Views\Helpers{class JsonAttrHelper{public function JsonAttr($object=NULL){return rawurlencode(\MvcCore\Tool::EncodeJson($object));}}}
namespace MvcCore\Router{trait UrlByRoutes{public function UrlByRoute(\MvcCore\IRoute&$route,array&$params=[],$urlParamRouteName=NULL){if($urlParamRouteName=='self')$params=array_merge($this->requestedParams?:[],$params);$defaultParams=$this->GetDefaultParams()?:[];return implode('',$route->Url($this->request,$params,$defaultParams,$this->getQueryStringParamsSepatator()));}protected function getQueryStringParamsSepatator(){if($this->queryParamsSepatator===NULL){$response=\MvcCore\Application::GetInstance()->GetResponse();if($response->HasHeader('Content-Type')){$this->queryParamsSepatator=$response->IsXmlOutput()?'&amp;':'&';}else{$viewDocType=\MvcCore\View::GetDoctype();$this->queryParamsSepatator=(strpos($viewDocType,\MvcCore\View::DOCTYPE_XML)!==FALSE||strpos($viewDocType,\MvcCore\View::DOCTYPE_XHTML)!==FALSE)?'&amp;':'&';}}return$this->queryParamsSepatator;}}}
namespace MvcCore\Ext\Forms{interface IError{const REQUIRED=0,EMPTY_CONTENT=1,MAX_POST_SIZE=2,CSRF=3;}}
namespace MvcCore\Router{trait UrlByQuery{public function UrlByQueryString($controllerActionOrRouteName='Index:Index',array&$params=[],$givenRouteName=NULL){if($givenRouteName=='self'){$params=array_merge($this->requestedParams?:[],$params);if($controllerActionOrRouteName===static::DEFAULT_ROUTE_NAME&&isset($params[static::URL_PARAM_PATH]))unset($params[static::URL_PARAM_PATH]);}list($ctrlPc,$actionPc)=$this->urlByQueryStringCompleteCtrlAction($controllerActionOrRouteName,$params);$absolute=$this->urlGetAbsoluteParam($params);$result=$this->urlByQueryStringCompleteResult($ctrlPc,$actionPc,$params);$result=$this->request->GetBasePath().$result;if($absolute)$result=$this->request->GetDomainUrl().$result;return$result;}protected function urlByQueryStringCompleteCtrlAction($controllerActionOrRouteName,array&$params){list($ctrlPc,$actionPc)=strpos($controllerActionOrRouteName,':')!==FALSE?explode(':',$controllerActionOrRouteName):[NULL,NULL];if(isset($params['controller'])){$ctrlPc=$params['controller'];unset($params['controller']);}if(isset($params['action'])){$actionPc=$params['action'];unset($params['action']);}$ctrlPc=str_replace('\\','/',$ctrlPc);return[$ctrlPc,$actionPc];}protected function urlByQueryStringCompleteResult($ctrlPc,$actionPc,array&$params){$result='';$toolClass=self::$toolClass;$amp=$this->getQueryStringParamsSepatator();list($dfltCtrlPc,$dftlActionPc)=$this->application->GetDefaultControllerAndActionNames();$ctrlIsNotDefault=$ctrlPc!==$dfltCtrlPc;$actionIsNotDefault=$actionPc!==$dftlActionPc;$sep='?';if($params||$ctrlIsNotDefault||$actionIsNotDefault){$result.=$this->request->GetScriptName();}if($ctrlIsNotDefault){$result.=$sep.'controller='.$toolClass::GetDashedFromPascalCase($ctrlPc);$sep=$amp;}if($actionIsNotDefault){$result.=$sep.'action='.$toolClass::GetDashedFromPascalCase($actionPc);$sep=$amp;}if($params){$result.=$sep.str_replace('%2F','/',http_build_query($params,'',$amp,PHP_QUERY_RFC3986));}if($result=='')$result='/';return$result;}protected function urlGetAbsoluteParam(array&$params=[]){$absolute=FALSE;$absoluteParamName=static::URL_PARAM_ABSOLUTE;if($params&&isset($params[$absoluteParamName])){$absolute=(bool)$params[$absoluteParamName];unset($params[$absoluteParamName]);}return$absolute;}}}
namespace MvcCore\Ext\Forms{interface IView{public static function GetFormsDir();public static function SetFormsDir($formsDir='Forms');public static function GetFieldsDir();public static function SetFieldsDir($fieldsDir='Forms/Fields');public function&GetView();public function&SetView(\MvcCore\IView&$view);public function&GetForm();public function&SetForm(\MvcCore\Ext\Forms\IForm&$form);public function&GetField();public function&SetField(\MvcCore\Ext\Forms\IField&$field);public function __get($name);public function __isset($name);public function __call($method,$arguments);public function RenderTemplate();public function RenderNaturally();public function RenderBegin();public function RenderCsrf();public function GetCsrf();public function RenderErrors();public function RenderContent();public function RenderEnd();public static function Format($str='',array$args=[]);public static function RenderAttrs(array$atrributes=[]);}}
namespace App{class Bootstrap{public static function Init(){$app=\MvcCore\Application::GetInstance();if(FALSE){$app->SetDebugClass('MvcCore\Ext\Debugs\Tracy');\MvcCore\Ext\Debugs\Tracy::$Editor='MSVS2017';}\MvcCore\Ext\Auth::GetInstance()->SetPasswordHashSalt('s9E56/QH6!a69sJML9aS$6s+')->SetUserClass('MvcCore\Ext\Auths\Users\Database');$app->SetRouterClass('\MvcCore\Ext\Routers\Module');$router=&\MvcCore\Router::GetInstance();$router->SetDomainRoutes(['blog'=>['pattern'=>'//[<localization>.]example-03.devx','defaults'=>['localization'=>'en-us',],'constraints'=>['localization'=>'[-a-zA-Z0-9]+',],'namespace'=>'Blog','filters'=>[\MvcCore\IRoute::CONFIG_FILTER_IN=>function(&$reqParams,&$defaultParams,&$request){return$reqParams;},\MvcCore\IRoute::CONFIG_FILTER_OUT=>function(&$urlParams,&$defaultParams,&$request){return$urlParams;}],'allowedLocalizations'=>['en-US','cs-CZ','hu-HU']],'main'=>['pattern'=>'//<subject>.%sld%.<top>','defaults'=>['subject'=>'example','top'=>'comx','localization'=>NULL,],'constraints'=>['subject'=>'[a-zA-Z0-9]+','top'=>'[a-zA-Z0-9]+',],'filters'=>[\MvcCore\IRoute::CONFIG_FILTER_IN=>function(&$reqParams,&$defaultParams,&$request){return$reqParams;},\MvcCore\IRoute::CONFIG_FILTER_OUT=>function(&$urlParams,&$defaultParams,&$request){return$urlParams;}]]]);$router->SetDefaultLocalization('en-US')->SetAllowedLocalizations('en-US','cs-CZ')->SetLocalizationEquivalents(['en-US'=>['en-GB','en-CA','en-AU'],'cs-CZ'=>['sk-SK'],])->SetSessionExpirationSeconds(\MvcCore\Session::EXPIRATION_SECONDS_DAY)->SetRouteGetRequestsOnly(FALSE);$router->SetRoutes(['\Index:Index'=>'/','\CdCollection:Index'=>['pattern'=>['en'=>'/albums','cs'=>'/alba'],'modules'=>['blog',NULL]],'\CdCollection:Create'=>['pattern'=>['en'=>'/create','cs'=>'/vytvorit']],'\CdCollection:Submit'=>['pattern'=>['en'=>'/save','cs'=>'/ulozit'],'method'=>'POST'],new\MvcCore\Ext\Routers\Localizations\Route(['match'=>['en'=>'#^/edit-neco(/(?<id>\d+))?/?$#','cs'=>'#^/upravit-neco(/(?<id>\d+))?/?$#',],'defaults'=>['id'=>1,],'constraints'=>['id'=>'\d+'],'redirect'=>'CdCollection:Edit']),'\CdCollection:Edit'=>['match'=>['en'=>'#^/edit(/(?<id>\d+))?/?$#','cs'=>'#^/upravit(/(?<id>\d+))?/?$#',],'reverse'=>['en'=>'/edit[/<id>]','cs'=>'/upravit[/<id>]'],'defaults'=>['id'=>1,],'constraints'=>['id'=>'\d+'],],'CdCollection:Test'=>['pattern'=>['en'=>'https://<module>.%sld%.%tld%/edit-something[/<id>][/<color*>]','cs'=>'/upravit-neco[/<id>][/<color*>]'],'defaults'=>['id'=>1,'color'=>'red',],'constraints'=>['id'=>'\d+','color'=>'[a-z]+',],],])->AddRoutes(['Eshop\Front:List'=>['pattern'=>['en'=>'/goods[/<page>]','cs'=>'/zbozi[/<page>]'],'defaults'=>['page'=>1],'constraints'=>['page'=>'\d+'],],'Eshop\Front:Detail'=>['pattern'=>['en'=>'/product-detail[/<name>]','cs'=>'/detail-produktu[/<name>]'],'constraints'=>['name'=>'[-a-zA-Z0-9_]+'],],],['en'=>'eshop','cs'=>'obchod']);}}}
namespace MvcCore\Ext\Tools\Locales{class FloatParser{protected$lang='en';protected$locale='US';protected$preferIntlParsing=FALSE;public static function CreateInstance($lang='en',$locale='US',$preferIntlParsing=FALSE){return new static($lang,$locale,$preferIntlParsing);}public function __construct($lang='en',$locale='US',$preferIntlParsing=FALSE){$this->lang=$lang;$this->locale=$locale;$this->preferIntlParsing=$preferIntlParsing;}public function&SetLang($lang){$this->lang=$lang;return$this;}public function GetLang(){return$this->lang;}public function&SetLocale($locale){$this->locale=$locale;return$this;}public function GetLocale(){return$this->locale;}public function&SetPreferIntlParsing($preferIntlParsing=FALSE){$this->preferIntlParsing=$preferIntlParsing;return$this;}public function GetPreferIntlParsing(){return$this->preferIntlParsing;}public function Parse($rawInput){if(!(is_scalar($rawInput)&&!is_bool($rawInput)))return NULL;if(is_float($rawInput)||is_int($rawInput))return floatval($rawInput);$intlExtLoaded=extension_loaded('intl');$result=NULL;if($this->preferIntlParsing&&$intlExtLoaded){$result=$this->parseByIntl($rawInput);if($result!==NULL)return$result;return$this->parseByFloatVal($rawInput);}else{$result=$this->parseByFloatVal($rawInput);if($result!==NULL)return$result;if($intlExtLoaded)$result=$this->parseByIntl($rawInput);return$result;}}protected function parseByIntl($rawInput){$langAndLocale=$this->lang&&$this->locale?$this->lang.'_'.$this->locale:'en_US';$intVal=$this->parseIntegerByIntl($rawInput,$langAndLocale);if($intVal!==NULL)return floatval($intVal);$floatVal=$this->parseFloatByIntl($rawInput,$langAndLocale);if($floatVal!==NULL)return$floatVal;return NULL;}protected function parseIntegerByIntl($rawInput,$langAndLocale){$formatter=NULL;try{$formatter=new\NumberFormatter($langAndLocale,\NumberFormatter::DECIMAL);if(intl_is_failure($formatter->getErrorCode()))return NULL;}catch(\IntlException$intlException){return NULL;}try{$parsedInt=$formatter->parse($rawInput,\NumberFormatter::TYPE_INT64);if(intl_is_failure($formatter->getErrorCode()))return NULL;}catch(\IntlException$intlException){return NULL;}$decimalSep=$formatter->getSymbol(\NumberFormatter::DECIMAL_SEPARATOR_SYMBOL);$groupingSep=$formatter->getSymbol(\NumberFormatter::GROUPING_SEPARATOR_SYMBOL);$valueFiltered=str_replace($groupingSep,'',$rawInput);$valueFiltered=str_replace($decimalSep,'.',$valueFiltered);if(strval($parsedInt)!==$valueFiltered)return NULL;return$parsedInt;}protected function parseFloatByIntl($rawInput,$langAndLocale){$formatter=new\NumberFormatter($langAndLocale,\NumberFormatter::SCIENTIFIC);try{$parsedScient=$formatter->parse($rawInput,\NumberFormatter::TYPE_DOUBLE);if(intl_is_failure($formatter->getErrorCode()))$parsedScient=NULL;}catch(\IntlException$intlException){$parsedScient=NULL;}$decimalSep=$formatter->getSymbol(\NumberFormatter::DECIMAL_SEPARATOR_SYMBOL);$groupingSep=$formatter->getSymbol(\NumberFormatter::GROUPING_SEPARATOR_SYMBOL);$valueFiltered=str_replace($groupingSep,'',$rawInput);$valueFiltered=str_replace($decimalSep,'.',$valueFiltered);if($parsedScient!==NULL&&$valueFiltered==strval($parsedScient))return$parsedScient;$formatter=new\NumberFormatter($langAndLocale,\NumberFormatter::DECIMAL);try{$parsedDecimal=$formatter->parse($rawInput,\NumberFormatter::TYPE_DOUBLE);if(intl_is_failure($formatter->getErrorCode()))$parsedDecimal=NULL;}catch(\IntlException$intlException){$parsedDecimal=NULL;}return$parsedDecimal;}protected function parseByFloatVal($rawInput){$result=NULL;$rawInput=trim((string)$rawInput);$valueToParse=preg_replace("#[^Ee0-9,\.\-]#",'',$rawInput);if(strlen($valueToParse)===0)return NULL;$dot=strpos($valueToParse,'.')!==FALSE;$comma=strpos($valueToParse,',')!==FALSE;if($dot&&!$comma){$cnt=substr_count($valueToParse,'.');if($cnt==1){$result=floatval($valueToParse);}else{$result=floatval(str_replace('.','',$valueToParse));}}else if(!$dot&&$comma){$cnt=substr_count($valueToParse,',');if($cnt==1){$result=floatval(str_replace(',','.',$valueToParse));}else{$result=floatval(str_replace(',','',$valueToParse));}}else if($dot&&$comma){$dotLastPos=mb_strrpos($valueToParse,'.');$commaLastPos=mb_strrpos($valueToParse,',');$dotCount=substr_count($valueToParse,'.');$commaCount=substr_count($valueToParse,',');if($dotLastPos>$commaLastPos&&$dotCount==1){$result=floatval(str_replace(',','',$valueToParse));}else if($commaLastPos>$dotLastPos&&$commaCount==1){$result=floatval(str_replace(['.',','],['','.'],$valueToParse));}}else if(!$dot&&!$comma){$result=floatval($valueToParse);}return$result;}}}
namespace MvcCore\Ext\Forms{abstract class Validator implements\MvcCore\Ext\Forms\IValidator{protected$form=NULL;protected$field=NULL;protected static$errorMessages=[];protected static$fieldSpecificProperties=[];protected static$toolClass='';public static function&CreateInstance(array$constructorConfig=[]){$validator=new static($constructorConfig);$validator::$toolClass=\MvcCore\Application::GetInstance()->GetToolClass();return$validator;}public function __construct(array$cfg=[]){foreach($cfg as$propertyName=>$propertyValue){if($propertyName=='field'||$propertyName=='form'||!property_exists($this,$propertyName)){$this->throwNewInvalidArgumentException('Property `'.$propertyName.'` is not possible '.'to configure by constructor `$cfg` param.');}else{$this->{$propertyName}=$propertyValue;}}}public function&SetForm(\MvcCore\Ext\Forms\IForm&$form){$this->form=&$form;return$this;}public function&SetField(\MvcCore\Ext\Forms\IField&$field){$this->field=&$field;if(static::$fieldSpecificProperties)$this->setUpFieldProps(static::$fieldSpecificProperties);return$this;}public static function GetErrorMessage($errorMsgIndex){return static::$errorMessages[$errorMsgIndex];;}public abstract function Validate($rawSubmittedValue);protected function throwNewInvalidArgumentException($errorMsg){$msgs=[];if($this->field)$msgs[]='Field name: `'.$this->field->GetName().'`, Field type: `'.get_class($this->field).'`';if($this->form)$msgs[]='Form id: `'.$this->form->GetId().'`, Form type: `'.get_class($this->form).'`';throw new\InvalidArgumentException('['.__CLASS__.'] '.$errorMsg.($msgs?' '.implode(', ',$msgs):''));}protected function setUpFieldProps($fieldPropsDefaultValidValues=[]){$fieldValues=$this->field->GetValidatorData($fieldPropsDefaultValidValues);foreach($fieldPropsDefaultValidValues as$propName=>$defaultValidatorValue){$fieldValue=array_key_exists($propName,$fieldValues)?$fieldValues[$propName]:NULL;if($fieldValue!==NULL){$this->{$propName}=$fieldValue;}else if($fieldValue===NULL&&$this->{$propName}!==NULL){$setter='Set'.ucfirst($propName);if(method_exists($this->field,$setter))$this->field->{$setter}($this->{$propName});}else{$this->{$propName}=$defaultValidatorValue;}}}}}
namespace MvcCore\Ext\Views\Helpers{abstract class AbstractHelper implements\MvcCore\Ext\Views\Helpers\IHelper{const VERSION='5.0.0-alpha';protected static$instance=NULL;protected$view=NULL;protected$controller=NULL;protected$request=NULL;protected$response=NULL;public static function&GetInstance(){if(!static::$instance)static::$instance=new static();return static::$instance;}public function&SetView(\MvcCore\IView&$view){$this->view=&$view;$this->controller=&$view->GetController();$this->request=&$this->controller->GetRequest();$this->response=&$this->controller->GetResponse();return$this;}}}
namespace Detection{class MobileDetect extends\Mobile_Detect{}}
namespace MvcCore\Ext\Views\Helpers{class Assets extends\MvcCore\Ext\Views\Helpers\AbstractHelper{const VERSION='5.0.0-alpha';const GROUP_NAME_DEFAULT='default';const FILE_MODIFICATION_DATE_FORMAT='Y-m-d_H-i-s';protected$view;protected$actualGroupName='';protected$streamWrapper='';protected static$globalOptions=['jsJoin'=>0,'jsMinify'=>0,'cssJoin'=>0,'cssMinify'=>0,'tmpDir'=>'/Var/Tmp','fileChecking'=>'filemtime','assetsUrl'=>NULL,];protected static$appRoot=NULL;protected static$tmpDir=NULL;protected static$basePath=NULL;protected static$scriptName=NULL;protected static$logingAndExceptions=TRUE;protected static$fileChecking=FALSE;protected static$fileRendering=FALSE;protected static$assetsUrlCompletion=NULL;protected static$systemConfigHash='';protected static$ctrlActionKey='';public function&SetView(\MvcCore\IView&$view){parent::SetView($view);if(self::$appRoot===NULL)self::$appRoot=$this->request->GetAppRoot();if(self::$basePath===NULL)self::$basePath=$this->request->GetBasePath();if(self::$scriptName===NULL)self::$scriptName=ltrim($this->request->GetScriptName(),'/.');$app=$view->GetController()->GetApplication();$configClass=$app->GetConfigClass();self::$logingAndExceptions=$configClass::IsDevelopment(TRUE);$mvcCoreCompiledMode=$app->GetCompiled();self::$ctrlActionKey=$this->request->GetControllerName().'/'.$this->request->GetActionName();if(!$mvcCoreCompiledMode)self::$fileChecking=TRUE;if(!$mvcCoreCompiledMode||$mvcCoreCompiledMode=='SFU'){self::$fileRendering=TRUE;}if(is_null(self::$assetsUrlCompletion)){if($mvcCoreCompiledMode&&$mvcCoreCompiledMode!='PHP_STRICT_HDD'){self::$assetsUrlCompletion=TRUE;}else{self::$assetsUrlCompletion=FALSE;}}self::$systemConfigHash=md5(json_encode(self::$globalOptions));return$this;}public static function SetGlobalOptions($options=[]){self::$globalOptions=array_merge(self::$globalOptions,(array)$options);if(isset($options['assetsUrl'])&&!is_null($options['assetsUrl'])){self::$assetsUrlCompletion=(bool)$options['assetsUrl'];}}public static function SetAssetUrlCompletion($enable=TRUE){self::$assetsUrlCompletion=$enable;}public static function SetBasePath($basePath){self::$basePath=$basePath;}protected static function getFileImprint($fullPath){$fileChecking=self::$globalOptions['fileChecking'];if($fileChecking=='filemtime'){return\Packager_Php_Wrapper::Filemtime($fullPath);}else{return(string)call_user_func($fileChecking,$fullPath);}}public function __toString(){return$this->Render();}public function AssetUrl($path=''){$result='';if(self::$assetsUrlCompletion){$result=self::$scriptName.'?controller=controller&action=asset&path='.$path;}else{$result='__RELATIVE_BASE_PATH__'.$path;}return$result;}public function CssJsFileUrl($path=''){$result='';if(self::$assetsUrlCompletion){$result=$this->view->AssetUrl($path);}else{$result=self::$basePath.$path;}return$result;}protected function getCtrlActionKey(){return self::$ctrlActionKey;}protected function filterItemsForNotPossibleMinifiedAndPossibleMinifiedItems($items){$itemsToRenderMinimized=[];$itemsToRenderSeparately=[];foreach($items as&$item){$itemArr=array_merge((array)$item,[]);unset($itemArr['path']);if(isset($itemArr['render']))unset($itemArr['render']);if(isset($itemArr['external']))unset($itemArr['external']);$renderArrayKey=md5(json_encode($itemArr));if($itemArr['doNotMinify']){if(isset($itemsToRenderSeparately[$renderArrayKey])){$itemsToRenderSeparately[$renderArrayKey][]=$item;}else{$itemsToRenderSeparately[$renderArrayKey]=[$item];}}else{if(isset($itemsToRenderMinimized[$renderArrayKey])){$itemsToRenderMinimized[$renderArrayKey][]=$item;}else{$itemsToRenderMinimized[$renderArrayKey]=[$item];}}}return[$itemsToRenderMinimized,$itemsToRenderSeparately,];}protected function addFileModificationImprintToHrefUrl($url,$path){$questionMarkPos=strpos($url,'?');$separator=($questionMarkPos===FALSE)?'?':'&';$strippedUrl=$questionMarkPos!==FALSE?substr($url,$questionMarkPos):$url;$srcPath=$this->getAppRoot().substr($strippedUrl,strlen(self::$basePath));if(self::$globalOptions['fileChecking']=='filemtime'){$fileMTime=self::getFileImprint($srcPath);$url.=$separator.'_fmt='.date(self::FILE_MODIFICATION_DATE_FORMAT,(int)$fileMTime);}else{$url.=$separator.'_md5='.self::getFileImprint($srcPath);}return$url;}protected function getIndentString($indent=0){$indentStr='';if(is_numeric($indent)){$indInt=intval($indent);if($indInt>0){$i=0;while($i<$indInt){$indentStr.="\t";$i+=1;}}}else if(is_string($indent)){$indentStr=$indent;}return$indentStr;}protected function getAppRoot(){return self::$appRoot;}protected function getTmpDir(){if(!self::$tmpDir){$tmpDir=$this->getAppRoot().self::$globalOptions['tmpDir'];if(!\MvcCore\Application::GetInstance()->GetCompiled()){if(!\Packager_Php_Wrapper::IsDir($tmpDir))\Packager_Php_Wrapper::MkDir($tmpDir,0777,TRUE);if(!is_writable($tmpDir)){try{@chmod($tmpDir,0777);}catch(\Exception$e){throw new\Exception('['.__CLASS__.'] '.$e->getMessage());}}}self::$tmpDir=$tmpDir;}return self::$tmpDir;}protected function saveFileContent($fullPath='',&$fileContent=''){$streamWrapper='';$netteSafeStreamClass='\Nette\Utils\SafeStream';$netteSafeStreamProtocol='';$netteSafeStreamExists=class_exists($netteSafeStreamClass);if(self::$fileRendering){if($netteSafeStreamExists){$netteSafeStreamProtocol=constant($netteSafeStreamClass.'::PROTOCOL');(new\ReflectionMethod($netteSafeStreamClass,'register'))->invoke(NULL);$streamWrapper=$netteSafeStreamProtocol.'://';}}$fw=fopen($streamWrapper.$fullPath,'w');$index=0;$bufferLength=1048576;$buffer='';while($buffer=mb_substr($fileContent,$index,$bufferLength)){fwrite($fw,$buffer);$index+=$bufferLength;}fclose($fw);@chmod($fullPath,0766);if(self::$fileRendering){if($netteSafeStreamExists)stream_wrapper_unregister($netteSafeStreamProtocol);}}protected function log($msg='',$logType='debug'){if(self::$logingAndExceptions){\MvcCore\Debug::Log($msg,$logType);}}protected function exception($msg){if(self::$logingAndExceptions){throw new\Exception('['.get_class($this).'] '.$msg);}}protected function warning($msg){if(self::$logingAndExceptions){\MvcCore\Debug::BarDump('['.get_class($this).'] '.$msg,\MvcCore\IDebug::DEBUG);}}protected function exceptionHandler(\Exception$e){if(self::$logingAndExceptions){\MvcCore\Debug::Exception($e);}}protected function getTmpFileFullPathByPartFilesInfo($filesGroupInfo=[],$minify=FALSE,$extension=''){return implode('',[$this->getTmpDir(),'/'.($minify?'minified':'rendered').'_'.$extension.'_',md5(implode(',',$filesGroupInfo).'_'.$minify),'.'.$extension]);}}}
namespace MvcCore\Ext\Forms\Validators{class Url extends\MvcCore\Ext\Forms\Validator{const ERROR_URL=0;protected static$errorMessages=[self::ERROR_URL=>"Field '{0}' requires a valid URL.",];public function Validate($rawSubmittedValue){$result=NULL;$rawSubmittedValue=trim((string)$rawSubmittedValue);if($rawSubmittedValue==='')return NULL;while(mb_strpos($rawSubmittedValue,'%')!==FALSE)$rawSubmittedValue=rawurldecode($rawSubmittedValue);$safeValue=filter_var($rawSubmittedValue,FILTER_VALIDATE_URL);if($safeValue!==FALSE){$result=$safeValue;}else{$this->field->AddValidationError(static::GetErrorMessage(self::ERROR_URL));}return$result;}}}
namespace MvcCore\Ext\Forms\Validators{class Password extends\MvcCore\Ext\Forms\Validator{const MIN_LENGTH=12;const MAX_LENGTH=255;const SPECIAL_CHARS='!"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~';const MIN_LOWERCASE_CHARS_COUNT=1;const MIN_UPPERCASE_CHARS_COUNT=1;const MIN_DIGIT_CHARS_COUNT=1;const MIN_SPECIAL_CHARS_COUNT=1;const ERROR_MIN_LENGTH=0;const ERROR_MAX_LENGTH=1;const ERROR_LOWERCASE_CHARS=2;const ERROR_LOWERCASE_CHARS_MIN=3;const ERROR_UPPERCASE_CHARS=4;const ERROR_UPPERCASE_CHARS_MIN=5;const ERROR_DIGIT_CHARS=6;const ERROR_DIGIT_CHARS_MIN=7;const ERROR_SPECIAL_CHARS=8;const ERROR_SPECIAL_CHARS_MIN=9;protected$mustHaveMinLength=self::MIN_LENGTH;protected$mustHaveMaxLength=self::MAX_LENGTH;protected$mustHaveLowerCaseChars=TRUE;protected$mustHaveLowerCaseCharsCount=self::MIN_LOWERCASE_CHARS_COUNT;protected$mustHaveUpperCaseChars=TRUE;protected$mustHaveUpperCaseCharsCount=self::MIN_UPPERCASE_CHARS_COUNT;protected$mustHaveDigits=TRUE;protected$mustHaveDigitsCount=self::MIN_DIGIT_CHARS_COUNT;protected$mustHaveSpecialChars=TRUE;protected$mustHaveSpecialCharsCount=self::MIN_SPECIAL_CHARS_COUNT;protected$specialChars=self::SPECIAL_CHARS;protected static$errorMessages=[self::ERROR_MIN_LENGTH=>"Password must have a minimum length of {1} characters.",self::ERROR_MAX_LENGTH=>"Password must have a maximum length of {1} characters.",self::ERROR_LOWERCASE_CHARS=>"Password must contain lowercase characters ({1}).",self::ERROR_LOWERCASE_CHARS_MIN=>"Password must contain at minimum {1} lowercase characters ({2}).",self::ERROR_UPPERCASE_CHARS=>"Password must contain uppercase characters ({1}).",self::ERROR_UPPERCASE_CHARS_MIN=>"Password must contain at minimum {1} uppercase characters ({2}).",self::ERROR_DIGIT_CHARS=>"Password must contain digits ({1}).",self::ERROR_DIGIT_CHARS_MIN=>"Password must contain at minimum {1} digits ({2}).",self::ERROR_SPECIAL_CHARS=>"Password must contain special characters ( {1} ).",self::ERROR_SPECIAL_CHARS_MIN=>"Password must contain at minimum {1} special characters ( {2} ).",];public function GetMustHaveMinLength(){return$this->mustHaveMinLength;}public function&SetMustHaveMinLength($mustHaveMinLength=self::MIN_LENGTH){$this->mustHaveMinLength=$mustHaveMinLength;return$this;}public function GetMustHaveMaxLength(){return$this->mustHaveMaxLength;}public function&SetMustHaveMaxLength($mustHaveMaxLength=self::MAX_LENGTH){$this->mustHaveMaxLength=$mustHaveMaxLength;return$this;}public function GetMustHaveLowerCaseChars($getWithMinCount=TRUE){if($getWithMinCount)return[$this->mustHaveLowerCaseChars,$this->mustHaveLowerCaseCharsCount];return$this->mustHaveLowerCaseChars?[TRUE]:[];}public function&SetMustHaveLowerCaseChars($mustHaveLowerCaseChars=TRUE,$minCount=self::MIN_LOWERCASE_CHARS_COUNT){$this->mustHaveLowerCaseChars=$mustHaveLowerCaseChars;$this->mustHaveLowerCaseCharsCount=$minCount;return$this;}public function GetMustHaveUpperCaseChars($getWithMinCount=TRUE){if($getWithMinCount)return[$this->mustHaveUpperCaseChars,$this->mustHaveUpperCaseCharsCount];return$this->mustHaveUpperCaseChars?[TRUE]:[];}public function&SetMustHaveUpperCaseChars($mustHaveUpperCaseChars=TRUE,$minCount=self::MIN_UPPERCASE_CHARS_COUNT){$this->mustHaveUpperCaseChars=$mustHaveUpperCaseChars;$this->mustHaveUpperCaseCharsCount=$minCount;return$this;}public function GetMustHaveDigits($getWithMinCount=TRUE){if($getWithMinCount)return[$this->mustHaveDigits,$this->mustHaveDigitsCount];return$this->mustHaveDigits?[TRUE]:[];}public function&SetMustHaveDigits($mustHaveDigits=TRUE,$minCount=self::MIN_DIGIT_CHARS_COUNT){$this->mustHaveDigits=$mustHaveDigits;$this->mustHaveDigitsCount=$minCount;return$this;}public function GetMustHaveSpecialChars($getWithMinCount=TRUE){if($getWithMinCount)return[$this->mustHaveSpecialChars,$this->mustHaveSpecialCharsCount];return$this->mustHaveSpecialChars;}public function&SetMustHaveSpecialChars($mustHaveSpecialChars=TRUE,$minCount=self::MIN_SPECIAL_CHARS_COUNT){$this->mustHaveSpecialChars=$mustHaveSpecialChars;$this->mustHaveSpecialCharsCount=$minCount;return$this;}public function GetSpecialChars(){return$this->specialChars;}public function&SetSpecialChars($specialChars=self::SPECIAL_CHARS){$this->specialChars=$specialChars;return$this;}public function __construct(array$cfg=[]){foreach($cfg as$propertyName=>$propertyValue){if(!property_exists($this,$propertyName)){$this->throwNewInvalidArgumentException('Property `'.$propertyName.'` is not possible '.'to configure by constructor `$cfg` param. '.'There is only possible to configure properties: `'.implode('`, `',['mustHaveMinLength:int','mustHaveMaxLength:int','mustHaveLowerCaseChars:bool','mustHaveLowerCaseCharsCount:int','mustHaveUpperCaseChars:bool','mustHaveUpperCaseCharsCount:int','mustHaveDigits:bool','mustHaveDigitsCount:int','mustHaveSpecialChars:bool','mustHaveSpecialCharsCount:int','specialChars:string',]).'`.');}else{settype($propertyValue,gettype($this->{$propertyName}));$this->{$propertyName}=$propertyValue;}}}public function Validate($rawSubmittedValue){$password=trim((string)$rawSubmittedValue);$passwordLength=mb_strlen($password);if($passwordLength<$this->mustHaveMinLength)$this->field->AddValidationError(static::GetErrorMessage(static::ERROR_MIN_LENGTH),[static::ERROR_MIN_LENGTH]);if($passwordLength>$this->mustHaveMaxLength){$password=mb_substr($password,0,static::ERROR_MAX_LENGTH);$this->field->AddValidationError(static::GetErrorMessage(static::ERROR_MAX_LENGTH),[static::ERROR_MAX_LENGTH]);}if($this->mustHaveLowerCaseChars){$lowerCaseChars=preg_replace('#[^a-z]#','',$password);$lowerCaseCharsCount=strlen($lowerCaseChars);if($this->mustHaveLowerCaseCharsCount>1&&$lowerCaseCharsCount<$this->mustHaveLowerCaseCharsCount){$this->field->AddValidationError(static::GetErrorMessage(static::ERROR_LOWERCASE_CHARS_MIN),[$this->mustHaveLowerCaseCharsCount,'[a-z]']);}else if($lowerCaseCharsCount===0){$this->field->AddValidationError(static::GetErrorMessage(static::ERROR_LOWERCASE_CHARS),['[a-z]']);}}if($this->mustHaveUpperCaseChars){$upperCaseChars=preg_replace('#[^A-Z]#','',$password);$upperCaseCharsCount=strlen($upperCaseChars);if($this->mustHaveUpperCaseCharsCount>1&&$upperCaseCharsCount<$this->mustHaveUpperCaseCharsCount){$this->field->AddValidationError(static::GetErrorMessage(static::ERROR_UPPERCASE_CHARS_MIN),[$this->mustHaveUpperCaseCharsCount,'[A-Z]']);}else if($upperCaseCharsCount===0){$this->field->AddValidationError(static::GetErrorMessage(static::ERROR_UPPERCASE_CHARS),['[A-Z]']);}}if($this->mustHaveDigits){$digitChars=preg_replace('#[^0-9]#','',$password);$digitCharsCount=strlen($digitChars);if($this->mustHaveDigitsCount>1&&$digitCharsCount<$this->mustHaveDigitsCount){$this->field->AddValidationError(static::GetErrorMessage(static::ERROR_DIGIT_CHARS_MIN),[$this->mustHaveDigitsCount,'[0-9]']);}else if($digitCharsCount===0){$this->field->AddValidationError(static::GetErrorMessage(static::ERROR_DIGIT_CHARS),['[0-9]']);}}if($this->mustHaveSpecialChars){$specialCharsArr=str_split($this->specialChars);$passwordCharsArr=str_split($password);$specialChars=array_intersect($passwordCharsArr,$specialCharsArr);$specialCharsCount=count($specialChars);if($this->mustHaveSpecialCharsCount>1&&$specialCharsCount<$this->mustHaveSpecialCharsCount){$this->field->AddValidationError(static::GetErrorMessage(static::ERROR_SPECIAL_CHARS_MIN),[$this->mustHaveSpecialCharsCount,htmlspecialchars($this->specialChars,ENT_QUOTES)]);}else if($specialCharsCount===0){$this->field->AddValidationError(static::GetErrorMessage(static::ERROR_SPECIAL_CHARS),[htmlspecialchars($this->specialChars,ENT_QUOTES)]);}}return$password;}}}
namespace MvcCore\Ext\Forms\Validators{class SafeString extends\MvcCore\Ext\Forms\Validator{protected static$baseAsciiChars=["\x00"=>'',"\x08"=>'',"\x10"=>'',"\x18"=>'',"\x01"=>'',"\x09"=>'',"\x11"=>'',"\x19"=>'',"\x02"=>'',"\x0A"=>'',"\x12"=>'',"\x1A"=>'',"\x03"=>'',"\x0B"=>'',"\x13"=>'',"\x1B"=>'',"\x04"=>'',"\x0C"=>'',"\x14"=>'',"\x1C"=>'',"\x05"=>'',"\x0D"=>'',"\x15"=>'',"\x1D"=>'',"\x06"=>'',"\x0E"=>'',"\x16"=>'',"\x1E"=>'',"\x07"=>'',"\x0F"=>'',"\x17"=>'',"\x1F"=>'',];protected static$specialMeaningChars=['|'=>"&#124;",'='=>"&#61;",'\\'=>"&#92;",'%'=>"&#37;",];public function Validate($rawSubmittedValue){$result=NULL;$rawSubmittedValue=trim($rawSubmittedValue);$cleanedValue=strtr($rawSubmittedValue,static::$baseAsciiChars);$cleanedValue=htmlspecialchars($cleanedValue,ENT_QUOTES);$cleanedValue=strtr($cleanedValue,static::$specialMeaningChars);return$cleanedValue;}}}
namespace MvcCore\Ext\Forms\Validators{class Tel extends\MvcCore\Ext\Forms\Validator{const ERROR_PHONE=0;protected static$errorMessages=[self::ERROR_PHONE=>"Field '{0}' requires a valid phone number.",];public function Validate($rawSubmittedValue){$rawSubmittedValue=str_replace(' ','',(string)$rawSubmittedValue);$result=preg_replace("#[^0-9\+]#",'',$rawSubmittedValue);$resultLength=mb_strlen($result);if(!$resultLength)$result=NULL;if(!$resultLength||($resultLength&&$resultLength!==mb_strlen($rawSubmittedValue))){$this->field->AddValidationError(static::GetErrorMessage(self::ERROR_PHONE));}return$result;}}}
namespace MvcCore\Ext\Auths{class Basic implements\MvcCore\Ext\Auths\Basics\IAuth{use\MvcCore\Ext\Auths\Basic\PropsGettersSetters;use\MvcCore\Ext\Auths\Basic\Handling;}}
namespace MvcCore\Ext\Views\Helpers{class JsHelper extends Assets{protected static$instance=null;const EXTERNAL_MIN_CACHE_TIME=86400;public static$MinifyCallable=['\JSMin','minify'];protected static$scriptsGroupContainer=[];public function Js($groupName=self::GROUP_NAME_DEFAULT){$this->actualGroupName=$groupName;$this->_getScriptsGroupContainer($groupName);return$this;}public function Contains($path='',$async=FALSE,$defer=FALSE,$doNotMinify=FALSE){$result=FALSE;$scriptsGroup=&$this->_getScriptsGroupContainer($this->actualGroupName);foreach($scriptsGroup as&$item){if($item->path==$path){if($item->async==$async&&$item->defer==$defer&&$item->doNotMinify==$doNotMinify){$result=TRUE;break;}}}return$result;}public function AppendExternal($path='',$async=FALSE,$defer=FALSE,$doNotMinify=FALSE){return$this->Append($path,$async,$defer,$doNotMinify,TRUE);}public function PrependExternal($path='',$async=FALSE,$defer=FALSE,$doNotMinify=FALSE){return$this->Prepend($path,$async,$defer,$doNotMinify,TRUE);}public function OffsetExternal($index=0,$path='',$async=FALSE,$defer=FALSE,$doNotMinify=FALSE){return$this->Offset($index,$path,$async,$defer,$doNotMinify,TRUE);}public function Append($path='',$async=FALSE,$defer=FALSE,$doNotMinify=FALSE,$external=FALSE){$item=$this->_completeItem($path,$async,$defer,$doNotMinify,$external);$actialGroupItems=&$this->_getScriptsGroupContainer($this->actualGroupName);array_push($actialGroupItems,$item);return$this;}public function Prepend($path='',$async=FALSE,$defer=FALSE,$doNotMinify=FALSE,$external=FALSE){$item=$this->_completeItem($path,$async,$defer,$doNotMinify,$external);$actualGroupItems=&$this->_getScriptsGroupContainer($this->actualGroupName);array_unshift($actualGroupItems,$item);return$this;}public function Offset($index=0,$path='',$async=FALSE,$defer=FALSE,$doNotMinify=FALSE,$external=FALSE){$item=$this->_completeItem($path,$async,$defer,$doNotMinify,$external);$actialGroupItems=&$this->_getScriptsGroupContainer($this->actualGroupName);$newItems=[];$added=FALSE;foreach($actialGroupItems as$key=>&$groupItem){if($key==$index){$newItems[]=$item;$added=TRUE;}$newItems[]=$groupItem;}if(!$added)$newItems[]=$item;self::$scriptsGroupContainer[$this->getCtrlActionKey()][$this->actualGroupName]=$newItems;return$this;}private function&_getScriptsGroupContainer($name=''){$ctrlActionKey=$this->getCtrlActionKey();if(!isset(self::$scriptsGroupContainer[$ctrlActionKey])){self::$scriptsGroupContainer[$ctrlActionKey]=[];}if(!isset(self::$scriptsGroupContainer[$ctrlActionKey][$name])){self::$scriptsGroupContainer[$ctrlActionKey][$name]=[];}return self::$scriptsGroupContainer[$ctrlActionKey][$name];}private function _completeItem($path,$async,$defer,$doNotMinify,$external){if(self::$logingAndExceptions){if(!$path)$this->exception('Path to *.js can\'t be an empty string.');$duplication=$this->_isDuplicateScript($path);if($duplication)$this->warning("Script '$path' is already added in js group: '$duplication'.");}return(object)['path'=>$path,'async'=>$async,'defer'=>$defer,'doNotMinify'=>$doNotMinify,'external'=>$external,];}private function _isDuplicateScript($path){$result='';$allGroupItems=&self::$scriptsGroupContainer[$this->getCtrlActionKey()];foreach($allGroupItems as$groupName=>$groupItems){foreach($groupItems as$item){if($item->path==$path){$result=$groupName;break;}}}return$result;}public function Render($indent=0){$actualGroupItems=&$this->_getScriptsGroupContainer($this->actualGroupName);if(count($actualGroupItems)===0)return'';$minify=(bool)self::$globalOptions['jsMinify'];$joinTogether=(bool)self::$globalOptions['jsJoin'];if($joinTogether){$result=$this->_renderItemsTogether($this->actualGroupName,$actualGroupItems,$indent,$minify);}else{$result=$this->_renderItemsSeparated($this->actualGroupName,$actualGroupItems,$indent,$minify);}return$result;}private function _renderItemsSeparated($actualGroupName='',$items=[],$indent=0,$minify=FALSE){$indentStr=$this->getIndentString($indent);$resultItems=[];if(self::$fileRendering)$resultItems[]='<!-- js group begin: '.$actualGroupName.' -->';$appCompilation=\MvcCore\Application::GetInstance()->GetCompiled();foreach($items as$item){if($item->external){$item->src=$this->CssJsFileUrl($this->_downloadFileToTmpAndGetNewHref($item,$minify));}else if($minify&&!$item->doNotMinify){$item->src=$this->CssJsFileUrl($this->_renderFileToTmpAndGetNewHref($item,$minify));}else{$item->src=$this->CssJsFileUrl($item->path);}if(!$appCompilation){$item->src=$this->addFileModificationImprintToHrefUrl($item->src,$item->path);}$resultItems[]=$this->_renderItemSeparated($item);}if(self::$fileRendering)$resultItems[]='<!-- js group end: '.$actualGroupName.' -->';return$indentStr.implode(PHP_EOL.$indentStr,$resultItems);}private function _renderFileToTmpAndGetNewHref($item,$minify=FALSE){$path=$item->path;$tmpFileName='/rendered_js_'.self::$systemConfigHash.'_'.trim(str_replace('/','_',$path),"_");$srcFileFullPath=$this->getAppRoot().$path;$tmpFileFullPath=$this->getTmpDir().$tmpFileName;if(self::$fileRendering){if(\Packager_Php_Wrapper::FileExists($srcFileFullPath)){$srcFileModDate=\Packager_Php_Wrapper::Filemtime($srcFileFullPath);}else{$srcFileModDate=1;}if(\Packager_Php_Wrapper::FileExists($tmpFileFullPath)){$tmpFileModDate=\Packager_Php_Wrapper::Filemtime($tmpFileFullPath);}else{$tmpFileModDate=0;}if($srcFileModDate!==FALSE&&$tmpFileModDate!==FALSE){if($srcFileModDate>$tmpFileModDate){$fileContent=\Packager_Php_Wrapper::FileGetContents($srcFileFullPath);if($minify){$fileContent=$this->_minify($fileContent,$path);}$this->saveFileContent($tmpFileFullPath,$fileContent);$this->log("Js file rendered ('$tmpFileFullPath').",'debug');}}}$tmpPath=substr($tmpFileFullPath,strlen($this->getAppRoot()));return$tmpPath;}private function _downloadFileToTmpAndGetNewHref($item,$minify=FALSE){$path=$item->path;$tmpFileFullPath=$this->getTmpDir().'/external_js_'.md5($path).'.js';if(self::$fileRendering){if(\Packager_Php_Wrapper::FileExists($tmpFileFullPath)){$cacheFileTime=\Packager_Php_Wrapper::Filemtime($tmpFileFullPath);}else{$cacheFileTime=0;}if(time()>$cacheFileTime+self::EXTERNAL_MIN_CACHE_TIME){while(TRUE){$newPath=$this->_getPossiblyRedirectedPath($path);if($newPath===$path){break;}else{$path=$newPath;}}$fr=fopen($path,'r');$fileContent='';$bufferLength=102400;$buffer='';while($buffer=fread($fr,$bufferLength)){$fileContent.=$buffer;}fclose($fr);if($minify){$fileContent=$this->_minify($fileContent,$path);}$this->saveFileContent($tmpFileFullPath,$fileContent);$this->log("External js file downloaded ('$tmpFileFullPath').",'debug');}}$tmpPath=substr($tmpFileFullPath,strlen($this->getAppRoot()));return$tmpPath;}private function _getPossiblyRedirectedPath($path=''){$fp=fopen($path,'r');$metaData=stream_get_meta_data($fp);foreach($metaData['wrapper_data']as$response){if(strtolower(substr($response,0,10))=='location: '){$path=substr($response,10);}}return$path;}private function _renderItemSeparated(\stdClass$item){$result='<script type="text/javascript"';if($item->async)$result.=' async="async"';if($item->async)$result.=' defer="defer"';if(!$item->external&&self::$fileChecking){$fullPath=$this->getAppRoot().$item->path;if(!\Packager_Php_Wrapper::FileExists($fullPath)){$this->log("File not found in CSS view rendering process ('$fullPath').",'error');}}$result.=' src="'.$item->src.'"></script>';return$result;}private function _minify(&$js,$path){$result='';if(!is_callable(static::$MinifyCallable)){$this->exception("Configured callable object for JS minification doesn't exist. "."Use: https://github.com/mrclay/minify -> /min/lib/JSMin.php");}try{$result=call_user_func(static::$MinifyCallable,$js);}catch(\Exception$e){$this->exception("Unable to minify javascript ('$path').");}return$result;}private function _renderItemsTogether($actualGroupName='',$items=[],$indent,$minify=FALSE){list($itemsToRenderMinimized,$itemsToRenderSeparately)=$this->filterItemsForNotPossibleMinifiedAndPossibleMinifiedItems($items);$indentStr=$this->getIndentString($indent);$resultItems=[];if(self::$fileRendering)$resultItems[]='<!-- js group begin: '.$actualGroupName.' -->';foreach($itemsToRenderSeparately as&$itemsToRender){$resultItems[]=$this->_renderItemsTogetherAsGroup($itemsToRender,FALSE);}foreach($itemsToRenderMinimized as&$itemsToRender){$resultItems[]=$this->_renderItemsTogetherAsGroup($itemsToRender,$minify);}if(self::$fileRendering)$resultItems[]=$indentStr.'<!-- js group end: '.$actualGroupName.' -->';return$indentStr.implode(PHP_EOL,$resultItems);}private function _renderItemsTogetherAsGroup($itemsToRender=[],$minify=FALSE){$filesGroupInfo=[];foreach($itemsToRender as$item){if($item->external){$srcFileFullPath=$this->_downloadFileToTmpAndGetNewHref($item,$minify);$filesGroupInfo[]=$item->path.'?_'.self::getFileImprint($this->getAppRoot().$srcFileFullPath);}else{if(self::$fileChecking){$fullPath=$this->getAppRoot().$item->path;if(!\Packager_Php_Wrapper::FileExists($fullPath)){$this->exception("File not found in JS view rendering process ('$fullPath').");}$filesGroupInfo[]=$item->path.'?_'.self::getFileImprint($fullPath);}else{$filesGroupInfo[]=$item->path;}}}$tmpFileFullPath=$this->getTmpFileFullPathByPartFilesInfo($filesGroupInfo,$minify,'js');if(self::$fileRendering){if(!\Packager_Php_Wrapper::FileExists($tmpFileFullPath)){$resultContent='';foreach($itemsToRender as&$item){$srcFileFullPath=$this->getAppRoot().$item->path;if($item->external){$srcFileFullPath=$this->_downloadFileToTmpAndGetNewHref($item,$minify);$fileContent=\Packager_Php_Wrapper::FileGetContents($this->getAppRoot().$srcFileFullPath);}else if($minify){$fileContent=\Packager_Php_Wrapper::FileGetContents($srcFileFullPath);if($minify)$fileContent=$this->_minify($fileContent,$item->path);}else{$fileContent=\Packager_Php_Wrapper::FileGetContents($srcFileFullPath);}$resultContent.=PHP_EOL."/* ".$item->path." */".PHP_EOL.$fileContent.PHP_EOL;}$this->saveFileContent($tmpFileFullPath,$resultContent);$this->log("Js files group rendered ('$tmpFileFullPath').",'debug');}}$firstItem=array_merge((array)$itemsToRender[0],[]);$pathToTmp=substr($tmpFileFullPath,strlen($this->getAppRoot()));$firstItem['src']=$this->CssJsFileUrl($pathToTmp);return$this->_renderItemSeparated((object)$firstItem);}}}
namespace MvcCore\Ext\Views\Helpers{class CssHelper extends Assets{protected static$instance=null;public static$MinifyCallable=['\Minify_CSS','minify'];private static$_allowedMediaTypes=['all','aural','braille','handheld','projection','print','screen','tty','tv',];protected static$linksGroupContainer=[];public function Css($groupName=self::GROUP_NAME_DEFAULT){$this->actualGroupName=$groupName;$this->_getLinksGroupContainer($groupName);return$this;}public function Contains($path='',$media='all',$doNotMinify=FALSE){$result=FALSE;$linksGroup=&$this->_getLinksGroupContainer($this->actualGroupName);foreach($linksGroup as&$item){if($item->path==$path){if($item->media==$media&&$item->doNotMinify==$doNotMinify){$result=TRUE;break;}}}return$result;}public function AppendRendered($path='',$media='all',$doNotMinify=FALSE){return$this->Append($path,$media,TRUE,$doNotMinify);}public function PrependRendered($path='',$media='all',$doNotMinify=FALSE){return$this->Prepend($path,$media,TRUE,$doNotMinify);}public function OffsetSetRendered($index=0,$path='',$media='all',$doNotMinify=FALSE){return$this->OffsetSet($index,$path,$media,TRUE,$doNotMinify);}public function Append($path='',$media='all',$renderPhpTags=FALSE,$doNotMinify=FALSE){$item=$this->_completeItem($path,$media,$renderPhpTags,$doNotMinify);$currentGroupRecords=&$this->_getLinksGroupContainer($this->actualGroupName);array_push($currentGroupRecords,$item);return$this;}public function Prepend($path='',$media='all',$renderPhpTags=FALSE,$doNotMinify=FALSE){$item=$this->_completeItem($path,$media,$renderPhpTags,$doNotMinify);$currentGroupRecords=&$this->_getLinksGroupContainer($this->actualGroupName);array_unshift($currentGroupRecords,$item);return$this;}public function OffsetSet($index=0,$path='',$media='all',$renderPhpTags=FALSE,$doNotMinify=FALSE){$item=$this->_completeItem($path,$media,$renderPhpTags,$doNotMinify);$currentGroupRecords=&$this->_getLinksGroupContainer($this->actualGroupName);$newItems=[];$added=FALSE;foreach($currentGroupRecords as$key=>$groupItem){if($key==$index){$newItems[]=$item;$added=TRUE;}$newItems[]=$groupItem;}if(!$added)$newItems[]=$item;self::$linksGroupContainer[$this->getCtrlActionKey()][$this->actualGroupName]=$newItems;return$this;}private function _completeItem($path,$media,$render,$doNotMinify){if(self::$fileChecking){if(!$path)$this->exception('Path to *.css can\'t be an empty string.');if(!in_array($media,self::$_allowedMediaTypes,TRUE))$this->exception('Media could be only values: '.implode(', ',self::$_allowedMediaTypes).'.');$duplication=$this->_isDuplicateStylesheet($path);if($duplication)$this->warning("Stylesheet '$path' is already added in css group: '$duplication'.");}return(object)['path'=>$path,'media'=>$media,'render'=>$render,'doNotMinify'=>$doNotMinify,];}private function _isDuplicateStylesheet($path){$result='';$currentRecords=self::$linksGroupContainer[$this->getCtrlActionKey()];foreach($currentRecords as$groupName=>$groupItems){foreach($groupItems as$item){if($item->path==$path){$result=$groupName;break;}}}return$result;}public function Render($indent=0){$currentGroupRecords=&$this->_getLinksGroupContainer($this->actualGroupName);if(count($currentGroupRecords)===0)return'';$minify=(bool)self::$globalOptions['cssMinify'];$joinTogether=(bool)self::$globalOptions['cssJoin'];if($joinTogether){$result=$this->_renderItemsTogether($this->actualGroupName,$currentGroupRecords,$indent,$minify);}else{$result=$this->_renderItemsSeparated($this->actualGroupName,$currentGroupRecords,$indent,$minify);}return$result;}private function&_getLinksGroupContainer($name=''){$ctrlActionKey=$this->getCtrlActionKey();if(!isset(self::$linksGroupContainer[$ctrlActionKey])){self::$linksGroupContainer[$ctrlActionKey]=[];}if(!isset(self::$linksGroupContainer[$ctrlActionKey][$name])){self::$linksGroupContainer[$ctrlActionKey][$name]=[];}return self::$linksGroupContainer[$ctrlActionKey][$name];}private function _minify(&$css,$path){$result='';if(!is_callable(static::$MinifyCallable)){$this->exception("Configured callable object for CSS minification doesn't exist. ".'Use: https://github.com/mrclay/minify -> /min/lib/Minify/CSS.php');}try{$result=call_user_func(static::$MinifyCallable,$css);}catch(\Exception$e){$this->exception("Unable to minify stylesheet ('$path').");}return$result;}private function _renderItemsTogether($actualGroupName='',$items=[],$indent=0,$minify=FALSE){list($itemsToRenderMinimized,$itemsToRenderSeparately)=$this->filterItemsForNotPossibleMinifiedAndPossibleMinifiedItems($items);$indentStr=$this->getIndentString($indent);$resultItems=[];if(self::$fileRendering)$resultItems[]='<!-- css group begin: '.$actualGroupName.' -->';foreach($itemsToRenderSeparately as&$itemsToRender){$resultItems[]=$this->_renderItemsTogetherAsGroup($itemsToRender,$minify);}foreach($itemsToRenderMinimized as&$itemsToRender){$resultItems[]=$this->_renderItemsTogetherAsGroup($itemsToRender,$minify);}if(self::$fileRendering)$resultItems[]='<!-- css group end: '.$actualGroupName.' -->';return$indentStr.implode(PHP_EOL.$indentStr,$resultItems);}private function _renderItemsTogetherAsGroup($itemsToRender=[],$minify=FALSE){$filesGroupInfo=[];foreach($itemsToRender as$item){if(self::$fileChecking){$fullPath=$this->getAppRoot().$item->path;if(!\Packager_Php_Wrapper::FileExists($fullPath)){$this->exception("File not found in CSS view rendering process ('$fullPath').");}$filesGroupInfo[]=$item->path.'?_'.self::getFileImprint($fullPath);}else{$filesGroupInfo[]=$item->path;}}$tmpFileFullPath=$this->getTmpFileFullPathByPartFilesInfo($filesGroupInfo,$minify,'css');if(self::$fileRendering){if(!\Packager_Php_Wrapper::FileExists($tmpFileFullPath)){$resultContent='';foreach($itemsToRender as&$item){$srcFileFullPath=$this->getAppRoot().$item->path;if($item->render){$fileContent=$this->_renderFile($srcFileFullPath);}else if($minify){$fileContent=\Packager_Php_Wrapper::FileGetContents($srcFileFullPath);}$fileContent=$this->_convertStylesheetPathsFromRelatives2TmpAbsolutes($fileContent,$item->path);if($minify)$fileContent=$this->_minify($fileContent,$item->path);$resultContent.=PHP_EOL."/* ".$item->path." */".PHP_EOL.$fileContent.PHP_EOL;}$this->saveFileContent($tmpFileFullPath,$resultContent);$this->log("Css files group rendered ('$tmpFileFullPath').",'debug');}}$firstItem=array_merge((array)$itemsToRender[0],[]);$pathToTmp=substr($tmpFileFullPath,strlen($this->getAppRoot()));$firstItem['href']=$this->CssJsFileUrl($pathToTmp);return$this->_renderItemSeparated((object)$firstItem);}private function _renderFile($absolutePath){ob_start();try{\Packager_Php_Wrapper::IncludeStandard(($absolutePath),$this);}catch(\Exception$e){$this->exceptionHandler($e);}return ob_get_clean();}private function _convertStylesheetPathsFromRelatives2TmpAbsolutes(&$fullPathContent,$href){$lastHrefSlashPos=mb_strrpos($href,'/');if($lastHrefSlashPos===FALSE)return$fullPathContent;$stylesheetDirectoryRelative=mb_substr($href,0,$lastHrefSlashPos+1);$position=0;while($position<mb_strlen($fullPathContent)){$doubleDotsPos=mb_strpos($fullPathContent,'../',$position);if($doubleDotsPos===FALSE)break;$lastUrlBeginStrPos=mb_strrpos(mb_substr($fullPathContent,0,$doubleDotsPos),'url(');if($lastUrlBeginStrPos===FALSE){$position=$doubleDotsPos+3;continue;}$beginOfUrlBlockChars=mb_substr($fullPathContent,$lastUrlBeginStrPos+4,$doubleDotsPos-($lastUrlBeginStrPos+4));$beginOfUrlBlockChars=preg_replace("#[\./ \"'_\-]#","",$beginOfUrlBlockChars);if(mb_strlen($beginOfUrlBlockChars)>0){$position=$lastUrlBeginStrPos+4;continue;}$firstUrlEndStrPos=mb_strpos($fullPathContent,')',$doubleDotsPos);if($firstUrlEndStrPos===FALSE){$position=$doubleDotsPos+3;continue;}$endOfUrlBlockChars=mb_substr($fullPathContent,$doubleDotsPos+3,$firstUrlEndStrPos-($doubleDotsPos+3));$endOfUrlBlockChars=preg_replace("#[a-zA-Z\./ \"'_\-\?\&\#]#","",$endOfUrlBlockChars);if(mb_strlen($endOfUrlBlockChars)>0){$position=$firstUrlEndStrPos+1;continue;}$lastUrlBeginStrPos+=4;$urlSubStr=mb_substr($fullPathContent,$lastUrlBeginStrPos,$firstUrlEndStrPos-$lastUrlBeginStrPos);$firstStr=mb_substr($urlSubStr,0,1);$lastStr=mb_substr($urlSubStr,mb_strlen($urlSubStr)-1,1);if($firstStr==='"'&&$lastStr==='"'){$urlSubStr=mb_substr($urlSubStr,1,mb_strlen($urlSubStr)-2);$quote='"';}else if($firstStr==="'"&&$lastStr==="'"){$urlSubStr=mb_substr($urlSubStr,1,mb_strlen($urlSubStr)-2);$quote="'";}else{$quote='"';}$trimmedUrlSubStr=ltrim($urlSubStr,'./');$trimmedPartLength=mb_strlen($urlSubStr)-mb_strlen($trimmedUrlSubStr);$trimmedPart=trim(mb_substr($urlSubStr,0,$trimmedPartLength),'/');$subjectRestPath=trim(mb_substr($urlSubStr,$trimmedPartLength),'/');$urlFullBasePath=str_replace('\\','/',realpath($this->getAppRoot().$stylesheetDirectoryRelative.$trimmedPart));$urlFullPath=$urlFullBasePath.'/'.$subjectRestPath;$webPath=mb_substr($urlFullPath,mb_strlen($this->getAppRoot()));$webPath=$this->CssJsFileUrl($webPath);$fullPathContent=mb_substr($fullPathContent,0,$lastUrlBeginStrPos).$quote.$webPath.$quote.mb_substr($fullPathContent,$firstUrlEndStrPos);$position=$lastUrlBeginStrPos+mb_strlen($webPath)+3;}return str_replace('__RELATIVE_BASE_PATH__','../..',$fullPathContent);}private function _renderFileToTmpAndGetNewHref($item,$minify=FALSE){$path=$item->path;$tmpFileName='/rendered_css_'.self::$systemConfigHash.'_'.trim(str_replace('/','_',$path),"_");$srcFileFullPath=$this->getAppRoot().$path;$tmpFileFullPath=$this->getTmpDir().$tmpFileName;if(self::$fileRendering){if(\Packager_Php_Wrapper::FileExists($srcFileFullPath)){$srcFileModDate=\Packager_Php_Wrapper::Filemtime($srcFileFullPath);}else{$srcFileModDate=1;}if(\Packager_Php_Wrapper::FileExists($tmpFileFullPath)){$tmpFileModDate=\Packager_Php_Wrapper::Filemtime($tmpFileFullPath);}else{$tmpFileModDate=0;}if($srcFileModDate!==FALSE&&$tmpFileModDate!==FALSE){if($srcFileModDate>$tmpFileModDate){if($item->render){$fileContent=$this->_renderFile($srcFileFullPath);}else if($minify){$fileContent=\Packager_Php_Wrapper::FileGetContents($srcFileFullPath);}$fileContent=$this->_convertStylesheetPathsFromRelatives2TmpAbsolutes($fileContent,$path);if($minify)$fileContent=$this->_minify($fileContent,$item->path);$this->saveFileContent($tmpFileFullPath,$fileContent);$this->log("Css file rendered ('$tmpFileFullPath').",'debug');}}}$tmpPath=substr($tmpFileFullPath,strlen($this->getAppRoot()));return$tmpPath;}private function _renderItemSeparated(\stdClass$item){$result='<link rel="stylesheet"';if($item->media!=='all')$result.=' media="'.$item->media.'"';if(!$item->render&&self::$fileChecking){$fullPath=$this->getAppRoot().$item->path;if(!\Packager_Php_Wrapper::FileExists($fullPath)){$this->log("File not found in CSS view rendering process ('$fullPath').",'error');}}$result.=' href="'.$item->href.'" />';return$result;}private function _renderItemsSeparated($actualGroupName='',$items=[],$indent=0,$minify=FALSE){$indentStr=$this->getIndentString($indent);$resultItems=[];if(self::$fileRendering)$resultItems[]='<!-- css group begin: '.$actualGroupName.' -->';$appCompilation=\MvcCore\Application::GetInstance()->GetCompiled();foreach($items as$item){if($item->render||($minify&&!$item->doNotMinify)){$item->href=$this->CssJsFileUrl($this->_renderFileToTmpAndGetNewHref($item,$minify));}else{$item->href=$this->CssJsFileUrl($item->path);}if(!$appCompilation){$item->href=$this->addFileModificationImprintToHrefUrl($item->href,$item->path);}$resultItems[]=$this->_renderItemSeparated($item);}if(self::$fileRendering)$resultItems[]='<!-- css group end: '.$actualGroupName.' -->';return$indentStr.implode(PHP_EOL.$indentStr,$resultItems);}}}
namespace MvcCore{class Controller implements IController{use\MvcCore\Controller\PropsGettersSetters;use\MvcCore\Controller\Dispatching;use\MvcCore\Controller\Rendering;}}
namespace MvcCore\Ext{class Auth extends\MvcCore\Ext\Auths\Basic{const AUTH_CLASS_FULL='\MvcCore\Ext\Auths\Full';const AUTH_CLASS_BASIC='\MvcCore\Ext\Auths\Basic';protected static$authType=NULL;protected static$authClass=NULL;public static function GetAuthClass(){if(self::$authClass===NULL){if(class_exists(self::AUTH_CLASS_FULL)){self::$authClass=self::AUTH_CLASS_FULL;}else{self::$authClass=self::AUTH_CLASS_BASIC;}}return self::$authClass;}public static function SetAuthClass($authClass){$toolClass=\MvcCore\Application::GetInstance()->GetToolClass();if($toolClass::CheckClassInterface($authClass,'MvcCore\Ext\Auths\Basics\IAuth',TRUE,TRUE))self::$authClass=$authClass;}public static function&GetInstance($configuration=[]){if(self::$instance===NULL){$authClass=self::GetAuthClass();self::$instance=&$authClass::GetInstance($configuration);}return self::$instance;}}}
namespace MvcCore\Ext\Forms\Validators{class Number extends\MvcCore\Ext\Forms\Validator implements\MvcCore\Ext\Forms\Fields\IMinMaxStepNumbers{use\MvcCore\Ext\Forms\Field\Props\MinMaxStepNumbers;const ERROR_NUMBER=0;const ERROR_GREATER=1;const ERROR_LOWER=2;const ERROR_RANGE=3;const ERROR_DIVISIBLE=4;protected static$errorMessages=[self::ERROR_NUMBER=>"Field `{0}` requires a valid number.",self::ERROR_GREATER=>"Field `{0}` requires a value equal or greater than `{1}`.",self::ERROR_LOWER=>"Field `{0}` requires a value equal or lower than `{1}`.",self::ERROR_RANGE=>"Field `{0}` requires a value of `{1}` to `{2}` inclusive.",self::ERROR_DIVISIBLE=>"Field `{0}` requires a divisible value of `{1}`.",];protected static$fieldSpecificProperties=['min'=>NULL,'max'=>NULL,'step'=>NULL,];public function Validate($rawSubmittedValue){$rawSubmittedValue=(string)$rawSubmittedValue;if(mb_strlen($rawSubmittedValue)===0)return NULL;$result=$this->parseFloat($rawSubmittedValue);if($result===NULL){$this->field->AddValidationError(static::GetErrorMessage(static::ERROR_NUMBER));return NULL;}if($this->min!==NULL&&$this->max!==NULL&&$this->min>0&&$this->max>0&&($result<$this->min||$result>$this->max)){$this->field->AddValidationError($this->form->GetDefaultErrorMsg(static::ERROR_RANGE),[$this->min,$this->max]);}else if($this->min!==NULL&&$this->min>0&&$result<$this->min){$this->field->AddValidationError($this->form->GetDefaultErrorMsg(static::ERROR_GREATER),[$this->min]);}else if($this->max!==NULL&&$this->max>0&&$result>$this->max){$this->field->AddValidationError($this->form->GetDefaultErrorMsg(static::ERROR_LOWER),[$this->max]);}if($this->step!==NULL&&$this->step!==0){$dividingResultFloat=floatval($result)/$this->step;$dividingResultInt=floatval(intval($dividingResultFloat));if($dividingResultFloat!==$dividingResultInt)$this->field->AddValidationError($this->form->GetDefaultErrorMsg(static::ERROR_DIVISIBLE),[$this->step]);}return$result;}protected function parseFloat($rawSubmittedValue){$extToolsLocalesFloatParserClass='\\MvcCore\\Ext\\Tools\\Locales\\FloatParser';if(!class_exists($extToolsLocalesFloatParserClass)){$this->field->AddValidationError("MvcCore extension library to parse user input into number "."is not installed (`mvccore/ext-tool-locale-floatparser`).");return NULL;}$parser=$extToolsLocalesFloatParserClass::CreateInstance()->SetPreferIntlParsing(FALSE);if($formLang=$this->form->GetLang())$parser->SetLang($formLang);if($formLocale=$this->form->GetLocale())$parser->SetLocale($formLocale);$result=$parser->Parse($rawSubmittedValue);return$result;}}}
namespace MvcCore{class Tool implements ITool{use\MvcCore\Tool\StringCaseConversions;use\MvcCore\Tool\Json;use\MvcCore\Tool\OopChecking;}}
namespace MvcCore\Ext\Forms\Validators{class MinMaxLength extends\MvcCore\Ext\Forms\Validator implements\MvcCore\Ext\Forms\Fields\IMinMaxLength{use\MvcCore\Ext\Forms\Field\Props\MinMaxLength;const ERROR_MIN_LENGTH=0;const ERROR_MAX_LENGTH=1;protected static$errorMessages=[self::ERROR_MIN_LENGTH=>"Field '{0}' requires at least {1} characters.",self::ERROR_MAX_LENGTH=>"Field '{0}' requires no more than {1} characters.",];protected static$fieldSpecificProperties=['minLength'=>NULL,'maxLength'=>NULL,];public function Validate($rawSubmittedValue){$result=trim((string)$rawSubmittedValue);$resultLength=mb_strlen($result);if($this->minLength!==NULL&&$this->minLength>0&&$resultLength<$this->minLength){$this->field->AddValidationError(static::GetErrorMessage(self::ERROR_MIN_LENGTH));}if($this->maxLength!==NULL&&$this->maxLength>0&&$resultLength>$this->maxLength){$this->field->AddValidationError(static::GetErrorMessage(self::ERROR_MAX_LENGTH));}return$result;}}}
namespace MvcCore\Ext\Forms\Validators{class Pattern extends\MvcCore\Ext\Forms\Validator implements\MvcCore\Ext\Forms\Fields\IPattern{use\MvcCore\Ext\Forms\Field\Props\Pattern;const ERROR_INVALID_FORMAT=0;protected static$errorMessages=[self::ERROR_INVALID_FORMAT=>"Field '{0}' has invalid format ('{1}').",];protected static$fieldSpecificProperties=['pattern'=>NULL,];public function Validate($rawSubmittedValue){$result=NULL;$rawSubmittedValue=trim($rawSubmittedValue);if($this->pattern!==NULL){$pattern=$this->pattern;$beginBorderChar=mb_strpos($pattern,'#')===0;$endBorderChar=mb_substr($pattern,mb_strlen($pattern)-2,1)==='#';if(!$beginBorderChar&&!$endBorderChar)$pattern='#'.$pattern.'#';$matched=@preg_match($pattern,$rawSubmittedValue,$matches);if($matched)$result=$rawSubmittedValue;}else{$result=$rawSubmittedValue;}if($result===NULL){$this->field->AddValidationError(static::GetErrorMessage(self::ERROR_INVALID_FORMAT),[$this->pattern]);}return$result;}}}
namespace MvcCore{class Debug implements IDebug{use\MvcCore\Debug\Props;use\MvcCore\Debug\Initializations;use\MvcCore\Debug\Handlers;}}namespace{\MvcCore\Debug::$InitGlobalShortHands=function($development){function x($value,$title=NULL,$options=[]){$options['backtraceIndex']=2;return\MvcCore\Debug::BarDump($value,$title,$options);}function xx(){$args=func_get_args();foreach($args as$arg)\MvcCore\Debug::BarDump($arg,NULL,['backtraceIndex'=>2]);}if($development){function xxx(){$args=func_get_args();if(count($args)===0){throw new\ErrorException('Stopped.',500);}else{\MvcCore\Application::GetInstance()->GetResponse()->SetHeader('Content-Type','text/html');@header('Content-Type: text/html');echo '<pre><code>';foreach($args as$arg){$dumpedArg=\MvcCore\Debug::Dump($arg,TRUE,TRUE);echo  preg_replace("#\[([^\]]*)\]=>([^\n]*)\n(\s*)#","[$1] => ",$dumpedArg);echo '</code></pre>';}}exit;}}else{function xxx(){$args=func_get_args();if(count($args)>0)foreach($args as$arg)\MvcCore\Debug::Log($arg,\MvcCore\IDebug::DEBUG);echo 'Error 500 - Stopped.';exit;}}};}
namespace MvcCore{class Application implements\MvcCore\IApplication{use\MvcCore\Application\PropsGettersSetters;use\MvcCore\Application\Dispatching;use\MvcCore\Application\Helpers;public static function&GetInstance(){if(self::$instance===NULL)self::$instance=new static();return self::$instance;}protected function __construct(){self::$instance=$this;}}}
namespace MvcCore\Ext\Forms\Validators{class Email extends\MvcCore\Ext\Forms\Validator implements\MvcCore\Ext\Forms\Fields\IMultiple{use\MvcCore\Ext\Forms\Field\Props\Multiple;const ERROR_EMAIL=0;protected static$errorMessages=[self::ERROR_EMAIL=>"Field '{0}' requires a valid email address.",];protected static$fieldSpecificProperties=['multiple'=>NULL,];public function Validate($rawSubmittedValue){$rawSubmittedValue=trim((string)$rawSubmittedValue);if($rawSubmittedValue==='')return NULL;if($this->multiple){$result=[];$rawValues=explode(',',$rawSubmittedValue);}else{$result=NULL;$rawValues=[$rawSubmittedValue];}$errorReported=FALSE;foreach($rawValues as$rawValue){$safeValue=filter_var($rawValue,FILTER_VALIDATE_EMAIL);if($safeValue!==FALSE){if($this->multiple){$result[]=$safeValue;}else{$result=$safeValue;}}else{if(!$errorReported){$errorReported=TRUE;$this->field->AddValidationError(static::GetErrorMessage(self::ERROR_EMAIL));}}}return$result;}}}
namespace MvcCore\Ext\Forms{abstract class Field implements\MvcCore\Ext\Forms\IField{use\MvcCore\Ext\Forms\Field\Props;use\MvcCore\Ext\Forms\Field\Getters;use\MvcCore\Ext\Forms\Field\Setters;use\MvcCore\Ext\Forms\Field\Rendering;public function __construct($cfg=[]){static::$templates=(object)static::$templates;foreach($cfg as$propertyName=>$propertyValue){if(in_array($propertyName,static::$declaredProtectedProperties)){$this->throwNewInvalidArgumentException('Property `'.$propertyName.'` is not possible '.'to configure by constructor `$cfg` param.');}else{$this->{$propertyName}=$propertyValue;}}$validators=is_string($this->validators)?[$this->validators]:(is_array($this->validators)?$this->validators:[$this->validators]);call_user_func([$this,'SetValidators'],$validators);}public function __call($name,$arguments=[]){$nameBegin=strtolower(substr($name,0,3));$prop=lcfirst(substr($name,3));if($nameBegin=='get'){if(property_exists($this,$prop)){return$this->{$prop};}else{return$this->throwNewInvalidArgumentException("No property with name '$prop' defined.");}}else if($nameBegin=='set'){$this->{$prop}=isset($arguments[0])?$arguments[0]:NULL;return$this;}else{return$this->throwNewInvalidArgumentException("No method with name '$name' defined.");}}public function __get($name){return isset($this->$name)?$this->$name:NULL;}public function __set($name,$value){$this->$name=$value;return$this;}public function&SetForm(\MvcCore\Ext\Forms\IForm&$form){if(!$this->name)$this->throwNewInvalidArgumentException('No `name` property defined.');$this->form=&$form;if($this->id===NULL)$this->id=implode(\MvcCore\Ext\Forms\IForm::HTML_IDS_DELIMITER,[$form->GetId(),$this->name]);if($this instanceof\MvcCore\Ext\Forms\Fields\IVisibleField)$this->required=$this->required===NULL?$form->GetDefaultRequired():$this->required;$this->translate=$form->GetTranslate();return$this;}public function PreDispatch(){$form=&$this->form;if($this instanceof\MvcCore\Ext\Forms\Fields\IVisibleField&&$this->renderMode===NULL)$this->renderMode=$form->GetDefaultFieldsRenderMode();if($this->translate&&$this instanceof\MvcCore\Ext\Forms\Fields\ILabel&&$this->label)$this->label=$form->Translate($this->label);}public function Submit(array&$rawRequestParams=[]){$result=NULL;$fieldName=$this->name;if($this instanceof\MvcCore\Ext\Forms\Fields\IVisibleField&&($this->readOnly||$this->disabled)){$result=$this->value;}else{$result=NULL;if(isset($rawRequestParams[$fieldName]))$result=$rawRequestParams[$fieldName];if($result===NULL){$result=$this->value;$processValidators=FALSE;}else{$processValidators=TRUE;}if($processValidators&&$this->validators){foreach($this->validators as$validatorName=>$validatorNameOrInstance){$validator=NULL;if(is_string($validatorNameOrInstance)){$validator=$this->form->GetValidator($validatorName);}else if($validatorNameOrInstance instanceof\MvcCore\Ext\Forms\IValidator){$validator=$validatorNameOrInstance->SetForm($this->form)->SetField($this);}else{return$this->throwNewInvalidArgumentException('Unknown validator type configured: `'.$validatorNameOrInstance.'`, type: `'.gettype($validatorNameOrInstance).'`.');}$result=$validator->SetField($this)->Validate($result);}if($this->required&&!$this->errors){$safeSubmittedValueType=gettype($result);if($result===NULL||($safeSubmittedValueType=='string'&&mb_strlen($result)===0)||($safeSubmittedValueType=='array'&&count($result)===0))$this->AddValidationError($this->form->GetDefaultErrorMsg(\MvcCore\Ext\Forms\IError::REQUIRED));}}}return$result;}public function&GetValidatorData($fieldPropsDefaultValidValues=[]){$result=[];foreach($fieldPropsDefaultValidValues as$propName=>$defaultValidatorValue){if(property_exists($this,$propName))$result[$propName]=$this->{$propName};}return$result;}public function AddValidationError($errorMsg='',array$errorMsgArgs=[],callable$replacingCallable=NULL){$errorMsg=$this->translateAndFormatValidationError($errorMsg,$errorMsgArgs,$replacingCallable);$this->form->AddError($errorMsg,$this->name);return$this;}protected function translateAndFormatValidationError($errorMsg='',array$errorMsgArgs=[],callable$replacingCallable=NULL){$customReplacing=$replacingCallable!==NULL;$fieldLabelOrName='';if($this->translate){$errorMsg=$this->form->Translate($errorMsg);$fieldLabelOrName=$this->label?$this->form->Translate($this->label):$this->name;}else{$fieldLabelOrName=$this->label?$this->label:$this->name;}array_unshift($errorMsgArgs,$fieldLabelOrName);$formViewClass=$this->form->GetViewClass();if($customReplacing){$errorMsg=call_user_func($replacingCallable,$errorMsg,$errorMsgArgs,$formViewClass);}else if(strpos($errorMsg,'{0}')!==FALSE||strpos($errorMsg,'{1}')!==FALSE){$errorMsg=$formViewClass::Format($errorMsg,$errorMsgArgs);}return$errorMsg;}protected function throwNewInvalidArgumentException($errorMsg){$str='['.__CLASS__.'] '.$errorMsg.' (';if($this->form){$str.='form id: `'.$this->form->GetId().'`, '.'form type: `'.get_class($this->form).'`, ';}$str.='field type: `'.get_class($this).'`)';throw new\InvalidArgumentException($str);}}}
namespace MvcCore{class Model implements IModel{use\MvcCore\Model\Props;use\MvcCore\Model\Instancing;use\MvcCore\Model\DbConnection;use\MvcCore\Model\DataMethods;}}
namespace App\Controllers{class Base extends\MvcCore\Controller{protected$user=NULL;public function Init(){parent::Init();\MvcCore\Ext\Form::AddCsrfErrorHandler(function(\MvcCore\Ext\Form&$form,$errorMsg){\MvcCore\Ext\Auths\User::LogOut();self::Redirect($this->Url('\Index:Index',['absolute'=>TRUE,'sourceUrl'=>rawurlencode($form->GetErrorUrl())]));});}public function PreDispatch(){parent::PreDispatch();if($this->viewEnabled){$this->_preDispatchSetUpAuth();$this->_preDispatchSetUpBundles();}}private function _preDispatchSetUpAuth(){$this->view->User=$this->user;if($this->user){$this->view->SignOutForm=\MvcCore\Ext\Auth::GetInstance()->GetSignOutForm()->SetValues(['successUrl'=>$this->Url('\Index:Index',['absolute'=>TRUE])]);}}private function _preDispatchSetUpBundles(){\MvcCore\Ext\Views\Helpers\Assets::SetGlobalOptions(['cssMinify'=>1,'cssJoin'=>1,'jsMinify'=>1,'jsJoin'=>1,]);$static=self::$staticPath;$this->view->Css('fixedHead')->Append($static.'/css/resets.css')->Append($static.'/css/old-browsers-warning.css')->AppendRendered($static.'/css/fonts.css')->AppendRendered($static.'/css/all.css')->AppendRendered($static.'/css/forms-and-controls.css')->AppendRendered($static.'/css/content-buttons.css')->AppendRendered($static.'/css/content-tables.css');$this->view->Js('fixedHead')->Append($static.'/js/libs/class.min.js')->Append($static.'/js/libs/ajax.min.js')->Append($static.'/js/libs/Module.js');$this->view->Js('varFoot')->Append($static.'/js/Front.js');}}}
namespace MvcCore\Ext\Routers{trait Extended{use\MvcCore\Ext\Routers\Extendeds\PropsGettersSetters;use\MvcCore\Ext\Routers\Extendeds\Preparing;use\MvcCore\Ext\Routers\Extendeds\RedirectHelpers;use\MvcCore\Ext\Routers\Extendeds\Redirect;use\MvcCore\Ext\Routers\Extendeds\Url;}}
namespace MvcCore\Ext\Forms\Validators{class FloatNumber extends\MvcCore\Ext\Forms\Validators\Number{const ERROR_FLOAT=5;protected static$errorMessages=[self::ERROR_FLOAT=>"Field `{0}` requires a valid float number (from `{1}` to `{2}`).",];public function Validate($rawSubmittedValue){$rawSubmittedValue=trim((string)$rawSubmittedValue);if(mb_strlen($rawSubmittedValue)>0){$result=$this->parseFloat($rawSubmittedValue);if($result===NULL){$min=$this->min===NULL?(defined('PHP_FLOAT_MIN ')?PHP_FLOAT_MIN:'-1.8e308'):(string)$this->min;$max=$this->max===NULL?(defined('PHP_FLOAT_MAX ')?PHP_FLOAT_MAX:'1.8e308'):(string)$this->max;$this->field->AddValidationError(static::GetErrorMessage(self::ERROR_FLOAT,[$min,$max]));}}return NULL;}}}
namespace MvcCore\Ext\Forms\Validators{class IntNumber extends\MvcCore\Ext\Forms\Validators\Number{const ERROR_INT=5;protected static$errorMessages=[self::ERROR_INT=>"Field `{0}` requires a valid integer (from `{1}` to `{2}` incl.).",];public function Validate($rawSubmittedValue){$rawSubmittedValue=trim((string)$rawSubmittedValue);if(mb_strlen($rawSubmittedValue)>0){$result=$this->parseFloat($rawSubmittedValue);if($result===NULL){$this->field->AddValidationError(static::GetErrorMessage(self::ERROR_INT));return NULL;}else{$resultInt=intval(round($result));if($result!==floatval($resultInt)){$min=$this->min===NULL?-PHP_INT_MAX:$this->min;$max=$this->max===NULL?PHP_INT_MAX:$this->max;$this->field->AddValidationError(static::GetErrorMessage(self::ERROR_INT,[$min,$max]));return NULL;}else{return$resultInt;}}}return NULL;}}}
namespace MvcCore\Ext\Forms\Field\Props{trait VisibleField{use\MvcCore\Ext\Forms\Field\Props\AccessKey;use\MvcCore\Ext\Forms\Field\Props\AutoFocus;use\MvcCore\Ext\Forms\Field\Props\Disabled;use\MvcCore\Ext\Forms\Field\Props\ReadOnly;use\MvcCore\Ext\Forms\Field\Props\Required;use\MvcCore\Ext\Forms\Field\Props\TabIndex;}}
namespace App\Controllers{class Index extends Base{public function IndexAction(){if($this->user!==NULL)self::Redirect($this->Url('\CdCollection:Index'));$this->view->Title='CD Collection';$this->view->User=$this->user;$this->view->SignInForm=\MvcCore\Ext\Auth::GetInstance()->GetSignInForm()->AddCssClasses('theme')->SetValues(['successUrl'=>$this->Url('\CdCollection:',['absolute'=>TRUE]),]);}public function NotFoundAction(){$this->ErrorAction();}public function ErrorAction(){$code=$this->response->GetCode();$message=$this->request->GetParam('message','\\a-zA-Z0-9_;, /\-\@\:');$message=preg_replace('#`([^`]*)`#','<code>$1</code>',$message);$message=str_replace("\n",'<br />',$message);$this->view->Title="Error $code";$this->view->Message=$message;$this->Render('error');}}}
namespace MvcCore{class Config implements IConfig{use\MvcCore\Config\PropsGettersSetters;use\MvcCore\Config\Reading;use\MvcCore\Config\Environment;use\MvcCore\Config\LoadingIniData;use\MvcCore\Config\Helpers;}}
namespace App\Controllers\Blog{class Index extends\App\Controllers\Base{public function IndexAction(){x($this->Url('Test:Test',['module'=>'blog','localization'=>'en-US',]));x($this->Url('Test:Test',['module'=>'blog','localization'=>'cs-CZ',]));x($this->Url('self',['localization'=>'en-US',]));x($this->Url('Index:Index',['localization'=>'en-US',]));xxx("test:Index");}public function TestAction(){x($this->Url('Blog\Test:Test',['module'=>'blog','localization'=>'en-US',]));x($this->Url('Blog\Test:Test',['module'=>'blog','localization'=>'cs-CZ',]));x($this->Url('self',['localization'=>'en-US',]));x($this->Url('Index:Index',['localization'=>'en-US',]));xxx("test:Test");}public function NotFoundAction(){xxx("test:NotFoundAction");$this->ErrorAction();}public function ErrorAction(){xxx("test:ErrorAction");$code=$this->response->GetCode();$message=$this->request->GetParam('message','\\a-zA-Z0-9_;, /\-\@\:');$message=preg_replace('#`([^`]*)`#','<code>$1</code>',$message);$message=str_replace("\n",'<br />',$message);$this->view->Title="Error $code";$this->view->Message=$message;$this->Render('error');}}}
namespace App\Controllers\Blog{class Test extends\App\Controllers\Base{public function IndexAction(){xxx("test:Index");}public function TestAction(){x($this->Url('\Blog\Test:Test',['module'=>'blog','localization'=>'en-US',]));x($this->Url('Test:Test',['module'=>'blog','localization'=>'cs-CZ',]));x($this->Url('self',['localization'=>'en-US',]));x($this->Url('Index:Index',['localization'=>'en-US',]));xxx("test:Test");}public function NotFoundAction(){xxx("test:NotFoundAction");$this->ErrorAction();}public function ErrorAction(){xxx("test:ErrorAction");$code=$this->response->GetCode();$message=$this->request->GetParam('message','\\a-zA-Z0-9_;, /\-\@\:');$message=preg_replace('#`([^`]*)`#','<code>$1</code>',$message);$message=str_replace("\n",'<br />',$message);$this->view->Title="Error $code";$this->view->Message=$message;$this->Render('error');}}}
namespace App\Controllers{use\App\Models,\MvcCore\Ext\Form,\MvcCore\Ext\Forms\Fields;class CdCollection extends Base{protected$album;public function Init(){parent::Init();if(!$this->user){$sourceUrl=($this->request->GetMethod()===\MvcCore\Request::METHOD_POST&&parse_url($this->request->GetReferer(),PHP_URL_HOST)===$this->request->GetHostName())?$this->request->GetReferer():$this->request->GetFullUrl();self::Redirect($this->Url('\Index:Index',['sourceUrl'=>rawurlencode($sourceUrl)]));}}public function PreDispatch(){parent::PreDispatch();$id=$this->GetParam("id","0-9",NULL,'int');$this->album=Models\Album::GetById(intval($id));if(!$this->album&&$this->actionName=='edit')$this->renderNotFound();}public function IndexAction(){$this->view->Title='CD Collection';$this->view->Albums=Models\Album::GetAll();list($this->view->CsrfName,$this->view->CsrfValue)=$this->getVirtualDeleteForm()->SetUpCsrf();$this->view->Js('varFoot')->Prepend(self::$staticPath.'/js/List.js');}public function CreateAction(){$this->view->Title='New album';$this->view->DetailForm=$this->getCreateEditForm(FALSE);}public function EditAction(){$this->view->Title='Edit album - '.$this->album->Title;$this->view->DetailForm=$this->getCreateEditForm(TRUE)->SetValues($this->album->GetValues(),TRUE,TRUE);}public function SubmitAction(){$detailForm=$this->getCreateEditForm();if(!$this->album){$this->album=new Models\Album();$detailForm->SetErrorUrl($this->Url(':Create',['absolute'=>TRUE]));}else{$detailForm->SetErrorUrl($this->Url(':Edit',['id'=>$this->album->Id,'absolute'=>TRUE]));}$detailForm->Submit();if($detailForm->GetResult()){$this->album->SetUp($detailForm->GetValues(),TRUE)->Save();}$detailForm->SubmittedRedirect();}public function DeleteAction(){if($this->getVirtualDeleteForm()->SubmitCsrfTokens($_POST)){$this->album->Delete();}self::Redirect($this->Url(':Index'));}protected function getCreateEditForm($editForm=TRUE){$form=(new Form($this))->SetId('detail')->SetMethod(Form::METHOD_POST)->SetAction($this->Url(':Submit'))->SetSuccessUrl($this->Url(':Index',['absolute'=>TRUE]))->AddCssClasses('theme')->SetDefaultFieldsRenderMode(Form::FIELD_RENDER_MODE_LABEL_AROUND);if($editForm){$id=(new Fields\Hidden)->SetName('id')->AddValidators('Number');$form->AddField($id);}$title=(new Fields\Text)->SetName('title')->SetLabel('Title:')->SetMaxLength(200)->SetRequired()->SetAutocomplete('off');$interpret=(new Fields\Text)->SetName('interpret')->SetLabel('Interpret:')->SetMaxLength(200)->SetRequired()->SetAutocomplete('off');$year=(new Fields\Number)->SetName('year')->SetLabel('Year:')->SetSize(4)->SetMin(intval(date('Y'))-500)->SetMax(date('Y'))->SetValidators(['IntNumber']);$send=(new Fields\SubmitButton)->SetName('send')->SetCssClasses('btn btn-large')->SetValue('Save');return$form->AddFields($title,$interpret,$year,$send);}protected function getVirtualDeleteForm(){return(new Form($this))->SetId('delete')->SetErrorUrl($this->Url('\Index:Index',['absolute'=>TRUE]));}}}
namespace MvcCore{class Response implements IResponse{use\MvcCore\Response\PropsGettersSetters;use\MvcCore\Response\Instancing;use\MvcCore\Response\Headers;use\MvcCore\Response\Cookies;use\MvcCore\Response\Content;}}
namespace MvcCore\Ext\Forms\Validators{class Range extends\MvcCore\Ext\Forms\Validators\Number{use\MvcCore\Ext\Forms\Field\Props\Multiple;protected static$fieldSpecificProperties=['multiple'=>NULL,];public function&SetField(\MvcCore\Ext\Forms\IField&$field){$this->field=&$field;$this->setUpFieldProps(array_merge(self::$fieldSpecificProperties,parent::$fieldSpecificProperties));return$this;}public function Validate($rawSubmittedValue){$multiple=$this->field->GetMultiple();if($multiple){$rawSubmitValues=is_array($rawSubmittedValue)?$rawSubmittedValue:explode(',',(string)$rawSubmittedValue);$result=[];foreach($rawSubmitValues as$rawSubmitValue)$result[]=parent::Validate($rawSubmitValue);return$result;}else{return parent::Validate((string)$rawSubmittedValue);}}}}
namespace App\Controllers{class System extends Base{public function JsErrorsLogAction(){$this->DisableView();if(\MvcCore\Config::IsProduction())return;$keys=['message'=>1,'uri'=>1,'file'=>1,'line'=>0,'column'=>0,'callstack'=>1,'browser'=>1,'platform'=>0,];$data=[];foreach($keys as$key=>$hex){$param=$this->GetParam($key);if($hex)$param=self::_hexToStr($param);$param=preg_replace("#[^a-zA-Z0-9/\&\(\)\[\]\.\'\"%\#\$]#","",$param);$data[$key]=$param;}$msg=json_encode($data);\MvcCore\Debug::Log($msg,\MvcCore\Debug::JAVASCRIPT);}private static function _hexToStr($hex){$string='';for($i=0;$i<strlen($hex)-1;$i+=2){$string.=chr(hexdec($hex[$i].$hex[$i+1]));}return$string;}}}
namespace MvcCore{class Request implements IRequest{use\MvcCore\Request\Props;use\MvcCore\Request\GettersSetters;use\MvcCore\Request\Instancing;use\MvcCore\Request\InternalInits;use\MvcCore\Request\CollectionsMethods;}}
namespace App\Models{class Album extends\MvcCore\Model{public$Id;public$Title;public$Interpret;public$Year;public static function GetAll(){$rawData=self::GetDb()->query("
			SELECT
				c.id AS Id,
				c.title AS Title,
				c.interpret AS Interpret,
				c.year AS Year
			FROM 
				cds AS c
		")->fetchAll(\PDO::FETCH_ASSOC);$result=[];foreach($rawData as$rawItem){$item=(new self)->SetUp($rawItem,TRUE);$result[$item->Id]=$item;}return$result;}public static function GetById($id){$select=self::GetDb()->prepare("
			SELECT
				c.id AS Id,
				c.title AS Title,
				c.interpret AS Interpret,
				c.year AS Year
			FROM 
				cds as c 
			WHERE
				c.id = :id
		");$select->execute([":id"=>$id,]);$data=$select->fetch(\PDO::FETCH_ASSOC);if($data){return(new self)->SetUp($data);}return NULL;}public function Delete(){$update=$this->db->prepare("
			DELETE FROM
				cds
			WHERE
				id = :id
		");return$update->execute([":id"=>$this->Id,]);}public function Save(){if(isset($this->Id)){$this->update();}else{$this->Id=$this->insert();}return$this->Id;}protected function update(){$update=$this->db->prepare("
			UPDATE
				cds
			SET
				interpret = :interpret,
				year = :year,
				title = :title
			WHERE
				id = :id
		");return$update->execute([":interpret"=>$this->Interpret,":year"=>$this->Year,":title"=>$this->Title,":id"=>$this->Id,]);}protected function insert(){$columnsSql=[];$params=[];$newValues=$this->GetValues();foreach($newValues as$key=>&$value){$keyUnderscored=\MvcCore\Tool::GetUnderscoredFromPascalCase($key);$columnsSql[]=$keyUnderscored;$params[$keyUnderscored]=$value;}$sql='INSERT INTO cds ('.implode(',',$columnsSql).')
			 VALUES (:'.implode(', :',$columnsSql).')';$insertCommand=$this->db->prepare($sql);$insertCommand->execute($params);return(int)$this->db->lastInsertId();}}}
namespace MvcCore{class Route implements IRoute{use\MvcCore\Route\Props;use\MvcCore\Route\GettersSetters;use\MvcCore\Route\Instancing;use\MvcCore\Route\Matching;use\MvcCore\Route\UrlBuilding;use\MvcCore\Route\InternalInits;}}
namespace MvcCore\Ext\Forms\Fields{class Hidden extends\MvcCore\Ext\Forms\Field{use\MvcCore\Ext\Forms\Field\Props\AutoComplete;protected$type='hidden';protected$validators=['SafeString'];public function RenderControl(){$attrsStr=$this->renderControlAttrsWithFieldVars(['autoComplete',]);if(!$this->form->GetFormTagRenderingStatus())$attrsStr.=(strlen($attrsStr)>0?' ':'').'form="'.$this->form->GetId().'"';$formViewClass=$this->form->GetViewClass();return$formViewClass::Format(static::$templates->control,['id'=>$this->id,'name'=>$this->name,'type'=>$this->type,'value'=>htmlspecialchars($this->value,ENT_QUOTES),'attrs'=>strlen($attrsStr)>0?' '.$attrsStr:'',]);}}}
namespace MvcCore\Ext\Auths\Basics{class Controller extends\MvcCore\Controller implements\MvcCore\Ext\Auths\Basics\IController,\MvcCore\IController{use\MvcCore\Ext\Auths\Basics\Controller\Base;}}
namespace MvcCore\Ext\Forms\Fields{class DataList extends\MvcCore\Ext\Forms\Field implements\MvcCore\Ext\Forms\Fields\IOptions{use\MvcCore\Ext\Forms\Field\Props\Options;protected$type='data-list';protected$translateOptions=NULL;protected static$templates=[];public function&GetTranslateOptions(){return$this->translateOptions;}public function&SetTranslateOptions($translateOptions=TRUE){$this->translateOptions=$translateOptions;return$this;}public function&SetForm(\MvcCore\Ext\Forms\IForm&$form){parent::SetForm($form);if(!$this->translate)$this->translateOptions=$this->translate;return$this;}public function PreDispatch(){parent::PreDispatch();if($this->translateOptions){$form=&$this->form;foreach($this->options as$key=>$value)$this->options[$key]=$form->Translate($key);}}public function Submit(array&$rawRequestParams=[]){return NULL;}public function RenderControl(){$result='<datalist id="'.$this->id.'">';foreach($this->options as$value)$result.='<option value="'.htmlspecialchars($value,ENT_QUOTES).'" />';$result.='</datalist>';return$result;}}}
namespace MvcCore{class Session extends\ArrayObject implements ISession{use\MvcCore\Session\Props;use\MvcCore\Session\Instancing;use\MvcCore\Session\Starting;use\MvcCore\Session\MetaData;use\MvcCore\Session\Closing;use\MvcCore\Session\NamespaceMethods;use\MvcCore\Session\MagicMethods;}}
namespace MvcCore{class View implements IView{use\MvcCore\View\Props;use\MvcCore\View\GettersSetters;use\MvcCore\View\Rendering;use\MvcCore\View\DirectoryMethods;use\MvcCore\View\MagicMethods;use\MvcCore\View\UrlHelpers;use\MvcCore\View\ViewHelpers;use\MvcCore\View\PrivateMethods;}}
namespace MvcCore{class Router implements IRouter{use\MvcCore\Router\Props;use\MvcCore\Router\GettersSetters;use\MvcCore\Router\Instancing;use\MvcCore\Router\RouteMethods;use\MvcCore\Router\Routing;use\MvcCore\Router\RewriteRouting;use\MvcCore\Router\Canonical;use\MvcCore\Router\Redirecting;use\MvcCore\Router\UrlBuilding;use\MvcCore\Router\UrlByQuery;use\MvcCore\Router\UrlByRoutes;}}
namespace MvcCore\Ext\Forms{class View extends\MvcCore\View{protected$form=NULL;protected$field=NULL;protected$view=NULL;protected static$formsDir='Forms';protected static$fieldsDir='Forms/Fields';public static function GetFormsDir(){return static::$formsDir;}public static function SetFormsDir($formsDir='Forms'){return static::$formsDir=$formsDir;}public static function GetFieldsDir(){return static::$fieldsDir;}public static function SetFieldsDir($fieldsDir='Forms/Fields'){return static::$fieldsDir=$fieldsDir;}public function __construct(){$this->__protected['fieldRendering']=FALSE;}public function&GetView(){return$this->view;}public function&SetView(\MvcCore\IView&$view){$this->view=&$view;return$this;}public function&GetForm(){return$this->form;}public function&SetForm(\MvcCore\Ext\Forms\IForm&$form){$this->form=&$form;return$this;}public function&GetField(){return$this->field;}public function&SetField(\MvcCore\Ext\Forms\IField&$field){$this->__protected['fieldRendering']=TRUE;$this->field=&$field;return$this;}public function __get($name){$store=&$this->__protected['store'];if(array_key_exists($name,$store))return$store[$name];if($this->__protected['fieldRendering']&&$this->field instanceof\MvcCore\Ext\Forms\IField&&$fieldType=$this->getReflectionClass('field')){if($fieldType->hasProperty($name)){$property=$fieldType->getProperty($name);if(!$property->isStatic()){if(!$property->isPublic())$property->setAccessible(TRUE);$value=$property->getValue($this->field);$store[$name]=&$value;return$value;}}}if($this->form instanceof\MvcCore\Ext\Forms\IForm&&$formType=$this->getReflectionClass('form')){if($formType->hasProperty($name)){$property=$formType->getProperty($name);if(!$property->isStatic()){if(!$property->isPublic())$property->setAccessible(TRUE);$value=$property->getValue($this->form);$store[$name]=&$value;return$value;}}}if($this->view instanceof\MvcCore\IView)return$this->view->__get($name);return NULL;}public function __isset($name){$store=&$this->__protected['store'];if(array_key_exists($name,$store))return TRUE;if($this->__protected['fieldRendering']&&$this->field instanceof\MvcCore\Ext\Forms\IField&&$fieldType=$this->getReflectionClass('field')){if($fieldType->hasProperty($name)){$property=$fieldType->getProperty($name);if(!$property->isStatic()){if(!$property->isPublic())$property->setAccessible(TRUE);$value=$property->getValue($this->field);$store[$name]=&$value;return TRUE;}}}if($this->form instanceof\MvcCore\Ext\Forms\IForm&&$formType=$this->getReflectionClass('form')){if($formType->hasProperty($name)){$property=$formType->getProperty($name);if(!$property->isStatic()){if(!$property->isPublic())$property->setAccessible(TRUE);$value=$property->getValue($this->form);$store[$name]=&$value;return TRUE;}}}if($this->view instanceof\MvcCore\IView)return$this->view->__isset($name);return FALSE;}public function __call($method,$arguments){if($this->__protected['fieldRendering']&&$this->field instanceof\MvcCore\Ext\Forms\IField&&method_exists($this->field,$method)){$field=&$this->field;return call_user_func_array([$field,$method],$arguments);}else if($this->form instanceof\MvcCore\Ext\Forms\IForm&&method_exists($this->form,$method)){$form=&$this->form;return call_user_func_array([$form,$method],$arguments);}else{return parent::__call($method,$arguments);}}public function RenderTemplate(){$formViewScript=$this->form->GetViewScript();return$this->Render(static::$formsDir,is_bool($formViewScript)?$this->form->GetId():$formViewScript);}public function RenderNaturally(){return$this->RenderBegin().$this->RenderErrors().$this->RenderContent().$this->RenderEnd();}public function RenderBegin(){$this->form->PreDispatch();$result="<form";$attrs=[];$form=&$this->form;$formProperties=['id','action','method','enctype','target'];foreach($formProperties as$property){$getter='Get'.ucfirst($property);$formPropertyValue=$form->$getter();if($formPropertyValue!==NULL)$attrs[$property]=$formPropertyValue;}$formCssClasses=$form->GetCssClasses();if($formCssClasses)$attrs['class']=gettype($formCssClasses)=='array'?implode(' ',(array)$formCssClasses):$formCssClasses;foreach($form->GetAttributes()as$key=>$value){if(!in_array($key,$formProperties))$attrs[$key]=$value;}$formAutoComplete=$form->GetAutoComplete();if($formAutoComplete!==NULL)$attrs['autocomplete']=$formAutoComplete?'on':'off';$formNoValidate=$form->GetNoValidate();if($formNoValidate===TRUE)$attrs['novalidate']='novalidate';$formAcceptCharsets=$form->GetAcceptCharsets();if(count($formAcceptCharsets)>0)$attrs['accept-charset']=implode(' ',$formAcceptCharsets);$attrsStr=self::RenderAttrs($attrs);if($attrsStr)$result.=' '.$attrsStr;$result.='>';$this->form->SetFormTagRenderingStatus(TRUE);$result.=$this->RenderCsrf();return$result;}public function RenderCsrf(){list($name,$value)=$this->form->SetUpCsrf();return'<input type="hidden" name="'.$name.'" value="'.$value.'" />';}public function GetCsrf(){return$this->form->GetCsrf();}public function RenderErrors(){$this->form->PreDispatch();$result='';$errors=&$this->form->GetErrors();if($errors&&$this->form->GetErrorsRenderMode()==\MvcCore\Ext\Forms\IForm::ERROR_RENDER_MODE_ALL_TOGETHER){$result.='<div class="errors">';foreach($errors as&$errorMessageAndFieldNames){list($errorMessage,$fieldNames)=$errorMessageAndFieldNames;$result.='<div class="error '.implode(' ',$fieldNames).'">'.$errorMessage.'</div>';}$result.='</div>';}return$result;}public function RenderContent(){$this->form->PreDispatch();$result="";$fieldRendered="";foreach($this->form->GetFields()as&$field){$fieldRendered=$field->Render();if(!($field instanceof\MvcCore\Ext\Forms\Fields\Hidden)){$fieldRendered="<div>".$fieldRendered."</div>";}$result.=$fieldRendered;}return$result;}public function RenderEnd(){return$this->form->RenderEnd();}public static function Format($str='',array$args=[]){foreach($args as$key=>$value){$pos=strpos($str,'{'.$key.'}');if($pos!==FALSE)$str=substr($str,0,$pos).$value.substr($str,$pos+strlen($key)+2);}return$str;}public static function RenderAttrs(array$atrributes=[]){$result=[];foreach($atrributes as$attrName=>$attrValue){$result[]=$attrName.'="'.$attrValue.'"';}return implode(' ',$result);}}}
namespace MvcCore\Ext\Auths\Basics{class Role extends\MvcCore\Model implements\MvcCore\Ext\Auths\Basics\IRole{use\MvcCore\Ext\Auths\Basics\UserAndRole\Base;use\MvcCore\Ext\Auths\Basics\UserAndRole\Permissions;use\MvcCore\Ext\Auths\Basics\Role\Base;protected$autoInit=FALSE;public function GetByName($roleName){throw new\RuntimeException('['.__CLASS__.'] Method is not implemented. '.'Extend class `'.__CLASS__.'` and implement method `GetByName ($roleName)` by your own.');}}}
namespace MvcCore\Ext\Auths\Basics{class User extends\MvcCore\Model implements\MvcCore\Ext\Auths\Basics\IUser{use\MvcCore\Ext\Auths\Basics\User\Base;use\MvcCore\Ext\Auths\Basics\UserAndRole\Base;use\MvcCore\Ext\Auths\Basics\UserAndRole\Permissions;use\MvcCore\Ext\Auths\Basics\User\Auth;use\MvcCore\Ext\Auths\Basics\User\Roles;protected$autoInit=FALSE;public static function&GetByUserName($userName){throw new\RuntimeException('['.__CLASS__.'] Method is not implemented. '.'Use class `\MvcCore\Ext\Auths\Basics\Users\Database` or '.'`\MvcCore\Ext\Auths\Basics\Users\SystemConfig` instead or extend '.'class `'.__CLASS__.'` and implement method `GetByUserName($userName)` by your own.');}}}
namespace MvcCore\Ext\Auths\Basics\Users{class SystemConfig extends\MvcCore\Ext\Auths\Basics\User{public static function&GetByUserName($userName){$result=NULL;$configClass=\MvcCore\Application::GetInstance()->GetConfigClass();$allSysConfigCredentials=$configClass::GetSystem()->users;foreach($allSysConfigCredentials as$key=>&$sysConfigCredentials){if($sysConfigCredentials->userName===$userName){$result=(new static())->SetId($key)->SetUserName($sysConfigCredentials->userName)->SetFullName($sysConfigCredentials->fullName)->SetPasswordHash($sysConfigCredentials->passwordHash);break;}}return$result;}}}
namespace MvcCore\Ext\Routers\Localizations{class Route extends\MvcCore\Route{use\MvcCore\Ext\Routers\Localizations\Route\PropsGettersSetters;use\MvcCore\Ext\Routers\Localizations\Route\Instancing;use\MvcCore\Ext\Routers\Localizations\Route\Matching;use\MvcCore\Ext\Routers\Localizations\Route\InternalInits;use\MvcCore\Ext\Routers\Localizations\Route\UrlBuilding;}}
namespace MvcCore\Ext\Forms\Fields{class Button extends\MvcCore\Ext\Forms\Field implements\MvcCore\Ext\Forms\Fields\IVisibleField{use\MvcCore\Ext\Forms\Field\Props\VisibleField;protected$type='button';protected$value='OK';public static$templates=['control'=>'<button id="{id}" name="{name}" type="{type}"{attrs}>{value}</button>',];public function __construct(array$cfg=[]){parent::__construct($cfg);static::$templates=(object)array_merge((array)parent::$templates,(array)self::$templates);}public function&SetForm(\MvcCore\Ext\Forms\IForm&$form){parent::SetForm($form);if(!$this->value)$this->throwNewInvalidArgumentException('No button `value` defined.');return$this;}public function PreDispatch(){parent::PreDispatch();if($this->translate&&$this->value)$this->value=$this->form->Translate($this->value);$this->preDispatchTabIndex();}}}
namespace MvcCore\Ext\Auths\Basics\Users{class Database extends\MvcCore\Ext\Auths\Basics\User implements\MvcCore\Ext\Auths\Basics\IDatabaseUser{protected static$usersTableStructure=['table'=>'users','columns'=>['id'=>'id','active'=>'active','userName'=>'user_name','passwordHash'=>'password_hash','fullName'=>'full_name',]];public static function SetUsersTableStructure($tableName=NULL,$columnNames=NULL){if($tableName!==NULL)static::$usersTableStructure['table']=$tableName;if($columnNames!==NULL){$columns=&static::$usersTableStructure['columns'];foreach($columnNames as$propertyName=>$columnName)$columns[$propertyName]=$columnName;}}public static function&GetByUserName($userName){$table=static::$usersTableStructure['table'];$columns=(object)static::$usersTableStructure['columns'];$sql="
			SELECT
				u.$columns->id AS id,
				u.$columns->active AS active,
				u.$columns->userName AS userName,
				u.$columns->passwordHash AS passwordHash,
				u.$columns->fullName AS fullName
			FROM
				$table u
			WHERE
				u.$columns->userName = :user_name AND
				u.$columns->active = :active
		";$db=static::getDb();if(!$select=$db->prepare($sql))throw new\RuntimeException(implode(' ',$db->errorInfo()).': '.$sql,intval($db->errorCode()));$select->execute([":user_name"=>$userName,":active"=>1,]);$user=NULL;$data=$select->fetch(\PDO::FETCH_ASSOC);if($data){$user=(new static())->SetUp($data,TRUE,TRUE,FALSE);return$user;}return$user;}}}
namespace MvcCore\Ext\Routers\Modules{class Route extends\MvcCore\Route implements\MvcCore\Ext\Routers\Modules\IRoute{use\MvcCore\Ext\Routers\Modules\Route\PropsGettersSetters;use\MvcCore\Ext\Routers\Modules\Route\Instancing;use\MvcCore\Ext\Routers\Modules\Route\Matching;use\MvcCore\Ext\Routers\Modules\Route\InternalInits;use\MvcCore\Ext\Routers\Modules\Route\UrlBuilding;}}
namespace MvcCore\Ext\Forms\Fields{class ButtonInput extends\MvcCore\Ext\Forms\Field implements\MvcCore\Ext\Forms\Fields\IVisibleField{use\MvcCore\Ext\Forms\Field\Props\VisibleField;protected$type='button';protected$value='OK';public function&SetForm(\MvcCore\Ext\Forms\IForm&$form){parent::SetForm($form);if(!$this->value)$this->throwNewInvalidArgumentException('No button `value` defined.');return$this;}public function PreDispatch(){parent::PreDispatch();if($this->translate&&$this->value)$this->value=$this->form->Translate($this->value);$this->preDispatchTabIndex();}}}
namespace MvcCore\Ext\Forms\Fields{class ResetInput extends\MvcCore\Ext\Forms\Field implements\MvcCore\Ext\Forms\Fields\IVisibleField{use\MvcCore\Ext\Forms\Field\Props\VisibleField;protected$type='reset';protected$value='Reset';protected$jsClassName='MvcCoreForm.Reset';protected$jsSupportingFile=\MvcCore\Ext\Forms\IForm::FORM_ASSETS_DIR_REPLACEMENT.'/assets/reset.js';public function&SetForm(\MvcCore\Ext\Forms\IForm&$form){parent::SetForm($form);if(!$this->value)$this->throwNewInvalidArgumentException('No button `value` defined.');return$this;}public function PreDispatch(){parent::PreDispatch();if($this->translate&&$this->value)$this->value=$this->form->Translate($this->value);$this->preDispatchTabIndex();$this->form->AddJsSupportFile($this->jsSupportingFile,$this->jsClassName,[$this->name]);}}}
namespace MvcCore\Ext\Forms\Fields{class ResetButton extends\MvcCore\Ext\Forms\Fields\Button{protected$type='reset';protected$value='Reset';protected$jsClassName='MvcCoreForm.Reset';protected$jsSupportingFile=\MvcCore\Ext\Forms\IForm::FORM_ASSETS_DIR_REPLACEMENT.'/fields/reset.js';public function PreDispatch(){parent::PreDispatch();$this->form->AddJsSupportFile($this->jsSupportingFile,$this->jsClassName,[$this->name]);}}}
namespace MvcCore\Ext{class Form extends\MvcCore\Controller implements\MvcCore\Ext\Forms\IForm{use\MvcCore\Ext\Form\InternalProps;use\MvcCore\Ext\Form\ConfigProps;use\MvcCore\Ext\Form\GetMethods;use\MvcCore\Ext\Form\SetMethods;use\MvcCore\Ext\Form\AddMethods;use\MvcCore\Ext\Form\FieldMethods;use\MvcCore\Ext\Form\Session;use\MvcCore\Ext\Form\Csrf;use\MvcCore\Ext\Form\Rendering;use\MvcCore\Ext\Form\Assets;use\MvcCore\Ext\Form\Submitting;public function __construct(\MvcCore\IController&$controller=NULL){if($controller===NULL){$controller=&\MvcCore\Ext\Form::GetCallerControllerInstance();if($controller===NULL)$controller=&\MvcCore\Application::GetInstance()->GetController();if($controller===NULL)$this->throwNewInvalidArgumentException('There was not possible to determinate caller controller, '.'where is form instance create. Provide `$controller` instance explicitly '.'by first `\MvcCore\Ext\Form::__construct($controller);` argument.');}$controller->AddChildController($this,$this->id);if(static::$jsSupportFilesRootDir===NULL||static::$cssSupportFilesRootDir===NULL){$baseAssetsPath=str_replace('\\','/',PACKAGER_PHP_FILE_BASE.'/vendor/mvccore/ext-form/src/MvcCore/Ext').'/Forms/assets';if(static::$jsSupportFilesRootDir===NULL)static::$jsSupportFilesRootDir=$baseAssetsPath;if(static::$cssSupportFilesRootDir===NULL)static::$cssSupportFilesRootDir=$baseAssetsPath;}if(self::$sessionClass===NULL)self::$sessionClass=$this->application->GetSessionClass();if(self::$toolClass===NULL)self::$toolClass=$this->application->GetToolClass();}protected function throwNewInvalidArgumentException($errorMsg){$str='['.__CLASS__.'] '.$errorMsg.' ('.'form id: `'.$this->id.'`, '.'form type: `'.get_class($this->form).'`'.')';throw new\InvalidArgumentException($str);}public function Init(){if($this->dispatchState>0)return$this;parent::Init();$this->dispatchState=1;if(!$this->id)throw new\RuntimeException("No form `id` property defined in `".get_class($this)."`.");if(isset(self::$instances[$this->id])){$storedInstance=&self::$instances[$this->id];if($storedInstance!==$this)throw new\RuntimeException("Form id `".$this->id."` already defined.");}else{self::$instances[$this->id]=&$this;}$this->translate=$this->translator!==NULL&&is_callable($this->translator);return$this;}public function PreDispatch(){if($this->dispatchState>1)return$this;parent::PreDispatch();foreach($this->fields as$field)$field->PreDispatch();$session=&$this->getSession();foreach($session->errors as$errorMsgAndFieldNames){list($errorMsg,$fieldNames)=array_merge([],$errorMsgAndFieldNames);$this->AddError($errorMsg,$fieldNames);}if($session->values){foreach($session->values as$fieldName=>$fieldValue){$field=$this->fields[$fieldName];if($field->GetValue()===NULL)$field->SetValue($fieldValue);}}$viewClass=$this->viewClass;$this->view=$viewClass::CreateInstance()->SetForm($this);if($this->viewScript)$this->view->SetController($this->parentController)->SetView($this->parentController->GetView());$this->dispatchState=2;return$this;}public function Translate($translationKey){return call_user_func_array($this->translator,[$translationKey,$this->lang]);}}}
namespace MvcCore\Ext\Forms\Fields{class SubmitInput extends\MvcCore\Ext\Forms\Field implements\MvcCore\Ext\Forms\Fields\IVisibleField,\MvcCore\Ext\Forms\Fields\ISubmit{use\MvcCore\Ext\Forms\Field\Props\VisibleField;use\MvcCore\Ext\Forms\Field\Props\Submit;use\MvcCore\Ext\Forms\Field\Props\FormAttrs;protected$type='submit';protected$value='Submit';public function&SetForm(\MvcCore\Ext\Forms\IForm&$form){parent::SetForm($form);if(!$this->value)$this->throwNewInvalidArgumentException('No button `value` defined.');return$this;}public function PreDispatch(){parent::PreDispatch();if($this->translate&&$this->value)$this->value=$this->form->Translate($this->value);$this->preDispatchTabIndex();}public function RenderControl(){if($this->customResultState!==NULL)$this->SetControlAttr('data-result',$this->customResultState);$attrsStr=$this->renderControlAttrsWithFieldVars(['formAction','formEnctype','formMethod','formNoValidate','formTarget']);if(!$this->form->GetFormTagRenderingStatus())$attrsStr.=(strlen($attrsStr)>0?' ':'').'form="'.$this->form->GetId().'"';$formViewClass=$this->form->GetViewClass();return$formViewClass::Format(static::$templates->control,['id'=>$this->id,'name'=>$this->name,'type'=>$this->type,'value'=>htmlspecialchars_decode(htmlspecialchars($this->value,ENT_QUOTES),ENT_QUOTES),'attrs'=>strlen($attrsStr)>0?' '.$attrsStr:'',]);}}}
namespace MvcCore\Ext\Forms\Fields{class Image extends\MvcCore\Ext\Forms\Field implements\MvcCore\Ext\Forms\Fields\IVisibleField,\MvcCore\Ext\Forms\Fields\ISubmit{use\MvcCore\Ext\Forms\Field\Props\VisibleField;use\MvcCore\Ext\Forms\Field\Props\Submit;use\MvcCore\Ext\Forms\Field\Props\FormAttrs;use\MvcCore\Ext\Forms\Field\Props\WidthHeight;protected$type='image';protected$src=NULL;protected$alt='Submit';protected static$templates=['control'=>'<input type="image" id="{id}" name="{name}" src="{src}"{attrs} />',];public function GetSrc(){return$this->src;}public function&SetSrc($src){$this->src=$src;return$this;}public function GetAlt(){return$this->alt;}public function&SetAlt($alt){$this->alt=$alt;return$this;}public function __construct(array$cfg=[]){parent::__construct($cfg);static::$templates=(object)self::$templates;}public function&SetForm(\MvcCore\Ext\Forms\IForm&$form){parent::SetForm($form);if(!$this->src)$this->throwNewInvalidArgumentException('No input:image `src` attribute defined.');return$this;}public function PreDispatch(){parent::PreDispatch();$this->preDispatchTabIndex();if(!$this->translate)return;$form=&$this->form;if($this->alt!==NULL&&$this->alt!=='')$this->alt=$form->translate($this->alt);}public function RenderControl(){if($this->customResultState!==NULL)$this->SetControlAttr('data-result',$this->customResultState);$attrsStr=$this->renderControlAttrsWithFieldVars(['formAction','formEnctype','formMethod','formNoValidate','formTarget','width','height',]);if(!$this->form->GetFormTagRenderingStatus())$attrsStr.=(strlen($attrsStr)>0?' ':'').'form="'.$this->form->GetId().'"';$formViewClass=$this->form->GetViewClass();return$formViewClass::Format(static::$templates->control,['id'=>$this->id,'name'=>$this->name,'src'=>htmlspecialchars_decode(htmlspecialchars($this->src,ENT_QUOTES),ENT_QUOTES),'attrs'=>strlen($attrsStr)>0?' '.$attrsStr:'',]);}}}
namespace MvcCore\Ext\Forms\Fields{class SubmitButton extends\MvcCore\Ext\Forms\Fields\Button implements\MvcCore\Ext\Forms\Fields\ISubmit{use\MvcCore\Ext\Forms\Field\Props\Submit;use\MvcCore\Ext\Forms\Field\Props\FormAttrs;protected$type='submit';protected$value='Submit';public function RenderControl(){if($this->customResultState!==NULL)$this->SetControlAttr('data-result',$this->customResultState);$attrsStr=$this->renderControlAttrsWithFieldVars(['formAction','formEnctype','formMethod','formNoValidate','formTarget']);if(!$this->form->GetFormTagRenderingStatus())$attrsStr.=(strlen($attrsStr)>0?' ':'').'form="'.$this->form->GetId().'"';$formViewClass=$this->form->GetViewClass();return$formViewClass::Format(static::$templates->control,['id'=>$this->id,'name'=>$this->name,'type'=>$this->type,'value'=>htmlspecialchars_decode(htmlspecialchars($this->value,ENT_QUOTES),ENT_QUOTES),'attrs'=>strlen($attrsStr)>0?' '.$attrsStr:'',]);}}}
namespace MvcCore\Ext\Auths{if(\MvcCore\Ext\Auth::GetAuthClass()==\MvcCore\Ext\Auth::AUTH_CLASS_BASIC){class User extends\MvcCore\Ext\Auths\Basics\User{}}else{class User extends\MvcCore\Ext\Auths\Fulls\User{}}}
namespace MvcCore\Ext\Auths\Users{if(\MvcCore\Ext\Auth::GetAuthClass()==\MvcCore\Ext\Auth::AUTH_CLASS_BASIC){class SystemConfig extends\MvcCore\Ext\Auths\Basics\Users\SystemConfig{}}else{class SystemConfig extends\MvcCore\Ext\Auths\Fulls\Users\SystemConfig{}}}
namespace MvcCore\Ext\Auths\Basics{class SignOutForm extends\MvcCore\Ext\Form implements\MvcCore\Ext\Auths\Basics\IForm{protected$id=\MvcCore\Ext\Auths\Basics\IForm::HTML_ID_SIGNOUT;protected$user=NULL;use\MvcCore\Ext\Auths\Basics\Form\Base;use\MvcCore\Ext\Auths\Basics\Form\SignOut;}}
namespace MvcCore\Ext\Auths\Basics{class SignInForm extends\MvcCore\Ext\Form implements\MvcCore\Ext\Auths\Basics\IForm{protected$id=\MvcCore\Ext\Auths\Basics\IForm::HTML_ID_SIGNIN;use\MvcCore\Ext\Auths\Basics\Form\Base;use\MvcCore\Ext\Auths\Basics\Form\SignIn;}}
namespace MvcCore\Ext\Auths\Users{if(\MvcCore\Ext\Auth::GetAuthClass()==\MvcCore\Ext\Auth::AUTH_CLASS_BASIC){class Database extends\MvcCore\Ext\Auths\Basics\Users\Database{}}else{class Database extends\MvcCore\Ext\Auths\Fulls\Users\Database{}}}
namespace MvcCore\Ext\Forms{abstract class FieldsGroup extends\MvcCore\Ext\Forms\Field implements\MvcCore\Ext\Forms\Fields\IVisibleField,\MvcCore\Ext\Forms\Fields\ILabel,\MvcCore\Ext\Forms\Fields\IOptions,\MvcCore\Ext\Forms\Fields\IMultiple,\MvcCore\Ext\Forms\IFieldsGroup{use\MvcCore\Ext\Forms\Field\Props\VisibleField;use\MvcCore\Ext\Forms\Field\Props\Label;use\MvcCore\Ext\Forms\Field\Props\Options;use\MvcCore\Ext\Forms\Field\Props\GroupLabelCssClasses;use\MvcCore\Ext\Forms\Field\Props\GroupLabelAttrs;protected$type=NULL;protected$value=[];protected static$templates=['label'=>'<label for="{id}"{attrs}>{label}</label>','control'=>'<input id="{id}" name="{name}" type="{type}" value="{value}"{checked}{attrs} />','togetherLabelLeft'=>'<label for="{id}"{attrs}><span>{label}</span>{control}</label>','togetherLabelRight'=>'<label for="{id}"{attrs}>{control}<span>{label}</span></label>',];public function GetValue(){return$this->value;}public function&SetValue($value){$this->value=$value;return$this;}public function GetMultiple(){return TRUE;}public function&SetMultiple($multiple=TRUE){return$this;}public function&SetForm(\MvcCore\Ext\Forms\IForm&$form){parent::SetForm($form);if(!$this->options)$this->throwNewInvalidArgumentException('No `options` property defined.');return$this;}public function PreDispatch(){parent::PreDispatch();$this->preDispatchTabIndex();if(!$this->translate)return;$form=&$this->form;foreach($this->options as$key=>&$value){$valueType=gettype($value);if($valueType=='string'){if($value)$this->options[$key]=$form->Translate((string)$value);}else if($valueType=='array'){$text=isset($value['text'])?$value['text']:$key;if($text)$value['text']=$form->Translate((string)$text);}}}public function RenderNaturally(){$result='';if($this->label&&($this->renderMode==\MvcCore\Ext\Forms\IForm::FIELD_RENDER_MODE_NORMAL||$this->renderMode==\MvcCore\Ext\Forms\IForm::FIELD_RENDER_MODE_LABEL_AROUND)){$result=$this->RenderLabelAndControl();}else if($this->renderMode==\MvcCore\Ext\Forms\IForm::FIELD_RENDER_MODE_NO_LABEL||!$this->label){$result=$this->RenderControl();$errors=$this->RenderErrors();$formErrorsRenderMode=$this->form->GetErrorsRenderMode();if($formErrorsRenderMode==\MvcCore\Ext\Forms\IForm::ERROR_RENDER_MODE_BEFORE_EACH_CONTROL){$result=$errors.$result;}else if($formErrorsRenderMode==\MvcCore\Ext\Forms\IForm::ERROR_RENDER_MODE_AFTER_EACH_CONTROL){$result.=$errors;}}return$result;}public function RenderControlInsideLabel(){if($this->renderMode==\MvcCore\Ext\Forms\IForm::FIELD_RENDER_MODE_NO_LABEL)return$this->RenderControl();$attrsStr=$this->renderAttrsWithFieldVars(['multiple'],$this->groupLabelAttrs,$this->groupLabelCssClasses,FALSE);$template=$this->labelSide==\MvcCore\Ext\Forms\IField::LABEL_SIDE_LEFT?static::$templates->togetherLabelLeft:static::$templates->togetherLabelRight;$viewClass=$this->form->GetViewClass();$result=$viewClass::Format($template,['id'=>$this->id,'label'=>$this->label,'control'=>$this->RenderControl(),'attrs'=>$attrsStr?" $attrsStr":'',]);$errors=$this->RenderErrors();$formErrorsRenderMode=$this->form->GetErrorsRenderMode();if($formErrorsRenderMode==\MvcCore\Ext\Forms\IForm::ERROR_RENDER_MODE_BEFORE_EACH_CONTROL){$result=$errors.$result;}else if($formErrorsRenderMode==\MvcCore\Ext\Forms\IForm::ERROR_RENDER_MODE_AFTER_EACH_CONTROL){$result.=$errors;}return$result;}public function RenderControl(){$result='';foreach($this->options as$key=>$value){$result.=$this->RenderControlItem($key,$value);}return$result;}public function RenderLabel(){if($this->renderMode==\MvcCore\Ext\Forms\IForm::FIELD_RENDER_MODE_NO_LABEL)return'';$attrsStr=$this->renderAttrsWithFieldVars(['multiple'],$this->groupLabelAttrs,$this->groupLabelCssClasses,FALSE);$viewClass=$this->form->GetViewClass();return$viewClass::Format(static::$templates->label,['id'=>$this->id,'label'=>$this->label,'attrs'=>$attrsStr?" $attrsStr":'',]);}public function RenderControlItem($key,$option){$result='';$itemControlId=implode(\MvcCore\Ext\Forms\IForm::HTML_IDS_DELIMITER,[$this->form->GetId(),$this->name,$key]);list($itemLabelText,$labelAttrsStr,$controlAttrsStr)=$this->renderControlItemCompleteAttrsClassesAndText($key,$option);if(!$this->form->GetFormTagRenderingStatus())$controlAttrsStr.=(strlen($controlAttrsStr)>0?' ':'').'form="'.$this->form->GetId().'"';$checked=gettype($this->value)=='array'?in_array($key,$this->value):$this->value===$key;$viewClass=$this->form->GetViewClass();$itemControl=$viewClass::Format(static::$templates->control,['id'=>$itemControlId,'name'=>$this->name,'type'=>$this->type,'value'=>htmlspecialchars_decode(htmlspecialchars($key,ENT_QUOTES),ENT_QUOTES),'checked'=>$checked?' checked="checked"':'','attrs'=>strlen($controlAttrsStr)>0?' '.$controlAttrsStr:'',]);if($this->renderMode==\MvcCore\Ext\Form::FIELD_RENDER_MODE_NORMAL){$itemLabel=$viewClass::Format(static::$templates->label,['id'=>$itemControlId,'label'=>$itemLabelText,'attrs'=>$labelAttrsStr?" $labelAttrsStr":'',]);$result=($this->labelSide==\MvcCore\Ext\Forms\IField::LABEL_SIDE_LEFT)?$itemControl.$itemLabel:$itemLabel.$itemControl;}else if($this->renderMode==\MvcCore\Ext\Form::FIELD_RENDER_MODE_LABEL_AROUND){$templatesKey='togetherLabel'.(($this->labelSide==\MvcCore\Ext\Forms\IField::LABEL_SIDE_LEFT)?'Right':'Left');$result=$viewClass::Format(static::$templates->$templatesKey,['id'=>$itemControlId,'label'=>$itemLabelText,'control'=>$itemControl,'attrs'=>$labelAttrsStr?" $labelAttrsStr":'',]);}return$result;}protected function renderControlItemCompleteAttrsClassesAndText($key,&$option){$optionType=gettype($option);$labelAttrsStr='';$controlAttrsStr='';$itemLabelText='';$originalRequired=$this->required;if($this->type=='checkbox')$this->required=FALSE;if($optionType=='string'){$itemLabelText=$option?$option:$key;$labelAttrsStr=$this->renderLabelAttrsWithFieldVars();$controlAttrsStr=$this->renderControlAttrsWithFieldVars(['accessKey','multiple']);}else if($optionType=='array'){$itemLabelText=$option['text']?$option['text']:$key;$attrsArr=$this->controlAttrs;$classArr=$this->cssClasses;if(isset($option['attrs'])&&gettype($option['attrs'])=='array'){$attrsArr=array_merge($this->controlAttrs,$option['attrs']);}if(isset($option['class'])){$classArrParam=[];if(gettype($option['class'])=='array'){$classArrParam=$option['class'];}else if(gettype($option['class'])=='string'){$classArrParam=explode(' ',$option['class']);}foreach($classArrParam as$clsValue)if($clsValue)$classArr[]=$clsValue;}$labelAttrsStr=$this->renderAttrsWithFieldVars(['multiple'],$attrsArr,$classArr,FALSE);$controlAttrsStr=$this->renderAttrsWithFieldVars(['multiple'],$attrsArr,$classArr,TRUE);}if($this->type=='checkbox')$this->required=$originalRequired;return[$itemLabelText,$labelAttrsStr,$controlAttrsStr];}}}
namespace MvcCore\Ext\Forms\Fields{class Textarea extends\MvcCore\Ext\Forms\Field implements\MvcCore\Ext\Forms\Fields\IVisibleField,\MvcCore\Ext\Forms\Fields\ILabel,\MvcCore\Ext\Forms\Fields\IMinMaxLength{use\MvcCore\Ext\Forms\Field\Props\VisibleField;use\MvcCore\Ext\Forms\Field\Props\Label;use\MvcCore\Ext\Forms\Field\Props\AutoComplete;use\MvcCore\Ext\Forms\Field\Props\MinMaxLength;use\MvcCore\Ext\Forms\Field\Props\PlaceHolder;use\MvcCore\Ext\Forms\Field\Props\RowsColsWrap;use\MvcCore\Ext\Forms\Field\Props\SpellCheck;protected$type='textarea';protected$validators=['SafeString'];protected static$templates=['control'=>'<textarea id="{id}" name="{name}"{attrs}>{value}</textarea>',];public function __construct(array$cfg=[]){parent::__construct($cfg);static::$templates=(object)array_merge((array)parent::$templates,(array)self::$templates);}public function&SetForm(\MvcCore\Ext\Forms\IForm&$form){parent::SetForm($form);$this->setFormMinMaxLength();return$this;}public function&GetValidatorData($fieldPropsDefaultValidValues=[]){$result=['minLength'=>$this->minLength,'maxLength'=>$this->maxLength,];return$result;}public function PreDispatch(){parent::PreDispatch();if($this->translate&&$this->placeHolder)$this->placeHolder=$this->form->Translate($this->placeHolder);$this->preDispatchTabIndex();}public function RenderControl(){$attrsStr=$this->renderControlAttrsWithFieldVars(['minLength','maxLength','autoComplete','placeHolder','rows','cols','wrap','spellCheck',]);if(!$this->form->GetFormTagRenderingStatus())$attrsStr.=(strlen($attrsStr)>0?' ':'').'form="'.$this->form->GetId().'"';$formViewClass=$this->form->GetViewClass();return$formViewClass::Format(static::$templates->control,['id'=>$this->id,'name'=>$this->name,'value'=>htmlspecialchars_decode(htmlspecialchars($this->value,ENT_QUOTES),ENT_QUOTES),'attrs'=>strlen($attrsStr)>0?' '.$attrsStr:'',]);}}}
namespace MvcCore\Ext\Forms\Fields{class Number extends\MvcCore\Ext\Forms\Field implements\MvcCore\Ext\Forms\Fields\IVisibleField,\MvcCore\Ext\Forms\Fields\ILabel,\MvcCore\Ext\Forms\Fields\IMinMaxStepNumbers,\MvcCore\Ext\Forms\Fields\IDataList{use\MvcCore\Ext\Forms\Field\Props\VisibleField;use\MvcCore\Ext\Forms\Field\Props\Label;use\MvcCore\Ext\Forms\Field\Props\MinMaxStepNumbers;use\MvcCore\Ext\Forms\Field\Props\DataList;use\MvcCore\Ext\Forms\Field\Props\AutoComplete;use\MvcCore\Ext\Forms\Field\Props\PlaceHolder;use\MvcCore\Ext\Forms\Field\Props\Wrapper;use\MvcCore\Ext\Forms\Field\Props\InputMode;protected$type='number';protected$validators=['Number'];protected$value=NULL;public function GetValue(){return$this->value;}public function&SetValue($value){$this->value=$value;return$this;}public function&SetForm(\MvcCore\Ext\Forms\IForm&$form){parent::SetForm($form);$this->setFormPattern();return$this;}public function&GetValidatorData($fieldPropsDefaultValidValues=[]){$result=['min'=>$this->min,'max'=>$this->max,'step'=>$this->step,];if($this->list!==NULL){$result['list']=$this->list;$listField=$this->form->GetField($this->list);if($listField instanceof\MvcCore\Ext\Forms\Fields\IOptions)$result['options']=$listField->GetOptions();}return$result;}public function PreDispatch(){parent::PreDispatch();$this->preDispatchInputMode();$this->preDispatchTabIndex();}public function RenderControl(){$attrsStr=$this->renderControlAttrsWithFieldVars(['min','max','step','list','autoComplete','placeHolder','inputMode',]);if(!$this->form->GetFormTagRenderingStatus())$attrsStr.=(strlen($attrsStr)>0?' ':'').'form="'.$this->form->GetId().'"';$formViewClass=$this->form->GetViewClass();$result=$formViewClass::Format(static::$templates->control,['id'=>$this->id,'name'=>$this->name,'type'=>$this->type,'value'=>htmlspecialchars_decode(htmlspecialchars($this->value,ENT_QUOTES),ENT_QUOTES),'attrs'=>strlen($attrsStr)>0?' '.$attrsStr:'',]);return$this->renderControlWrapper($result);}}}
namespace MvcCore\Ext\Routers{class Media extends\MvcCore\Router implements\MvcCore\Ext\Routers\IMedia,\MvcCore\Ext\Routers\IExtended{use\MvcCore\Ext\Routers\Extended;use\MvcCore\Ext\Routers\Media\PropsGettersSetters;use\MvcCore\Ext\Routers\Media\Preparing;use\MvcCore\Ext\Routers\Media\PreRouting;use\MvcCore\Ext\Routers\Media\RedirectSections;use\MvcCore\Ext\Routers\Media\UrlByRouteSections;use\MvcCore\Ext\Routers\Media\UrlByRoute;use\MvcCore\Ext\Routers\Media\Routing;const VERSION='5.0.0-alpha';}}
namespace MvcCore\Ext\Forms\Fields{class Text extends\MvcCore\Ext\Forms\Field implements\MvcCore\Ext\Forms\Fields\IVisibleField,\MvcCore\Ext\Forms\Fields\ILabel,\MvcCore\Ext\Forms\Fields\IPattern,\MvcCore\Ext\Forms\Fields\IMinMaxLength,\MvcCore\Ext\Forms\Fields\IDataList{use\MvcCore\Ext\Forms\Field\Props\VisibleField;use\MvcCore\Ext\Forms\Field\Props\Label;use\MvcCore\Ext\Forms\Field\Props\Pattern;use\MvcCore\Ext\Forms\Field\Props\MinMaxLength;use\MvcCore\Ext\Forms\Field\Props\DataList;use\MvcCore\Ext\Forms\Field\Props\AutoComplete;use\MvcCore\Ext\Forms\Field\Props\PlaceHolder;use\MvcCore\Ext\Forms\Field\Props\Size;use\MvcCore\Ext\Forms\Field\Props\SpellCheck;use\MvcCore\Ext\Forms\Field\Props\InputMode;protected$type='text';protected$validators=['SafeString'];public function&SetForm(\MvcCore\Ext\Forms\IForm&$form){parent::SetForm($form);$this->setFormPattern();$this->setFormMinMaxLength();return$this;}public function&GetValidatorData($fieldPropsDefaultValidValues=[]){$result=['pattern'=>$this->pattern,'minLength'=>$this->minLength,'maxLength'=>$this->maxLength,];if($this->list!==NULL){$result['list']=$this->list;$listField=$this->form->GetField($this->list);if($listField instanceof\MvcCore\Ext\Forms\Fields\IOptions)$result['options']=$listField->GetOptions();}return$result;}public function PreDispatch(){parent::PreDispatch();if($this->translate&&$this->placeHolder)$this->placeHolder=$this->form->Translate($this->placeHolder);$this->preDispatchInputMode();$this->preDispatchTabIndex();}public function RenderControl(){$attrsStr=$this->renderControlAttrsWithFieldVars(['pattern','minLength','maxLength','list','autoComplete','placeHolder','size','spellCheck','inputMode',]);if(!$this->form->GetFormTagRenderingStatus())$attrsStr.=(strlen($attrsStr)>0?' ':'').'form="'.$this->form->GetId().'"';$formViewClass=$this->form->GetViewClass();return$formViewClass::Format(static::$templates->control,['id'=>$this->id,'name'=>$this->name,'type'=>$this->type,'value'=>htmlspecialchars_decode(htmlspecialchars($this->value,ENT_QUOTES),ENT_QUOTES),'attrs'=>strlen($attrsStr)>0?' '.$attrsStr:'',]);}}}
namespace MvcCore\Ext\Routers{class Localization extends\MvcCore\Router implements\MvcCore\Ext\Routers\ILocalization,\MvcCore\Ext\Routers\IExtended{use\MvcCore\Ext\Routers\Extended;use\MvcCore\Ext\Routers\Localization\PropsGettersSetters;use\MvcCore\Ext\Routers\Localization\Preparing;use\MvcCore\Ext\Routers\Localization\PreRouting;use\MvcCore\Ext\Routers\Localization\RedirectSections;use\MvcCore\Ext\Routers\Localization\UrlByRouteSections;use\MvcCore\Ext\Routers\Localization\UrlByRoute;use\MvcCore\Ext\Routers\Localization\RewriteRouting;use\MvcCore\Ext\Routers\Localization\Routing;const VERSION='5.0.0-alpha';}}
namespace MvcCore\Ext\Forms\Fields{class Range extends\MvcCore\Ext\Forms\Fields\Number implements\MvcCore\Ext\Forms\Fields\IMultiple{use\MvcCore\Ext\Forms\Field\Props\Multiple;protected$type='range';protected$validators=['Range'];protected$jsClassName='MvcCoreForm.Range';protected$jsSupportingFile=\MvcCore\Ext\Forms\IForm::FORM_ASSETS_DIR_REPLACEMENT.'/fields/range.js';protected$cssSupportingFile=\MvcCore\Ext\Forms\IForm::FORM_ASSETS_DIR_REPLACEMENT.'/fields/range.css';public function GetValue(){return$this->value;}public function&SetValue($value){$this->value=$value;return$this;}public function&GetValidatorData($fieldPropsDefaultValidValues=[]){$parentResult=parent::GetValidatorData($fieldPropsDefaultValidValues);$parentResult['multiple']=$this->multiple;return$parentResult;}public function PreDispatch(){parent::PreDispatch();$this->form->AddJsSupportFile($this->jsSupportingFile,$this->jsClassName,[$this->name.($this->multiple?'[]':'')])->AddCssSupportFile($this->cssSupportingFile);}public function RenderControl(){$attrsStr=$this->renderControlAttrsWithFieldVars(['min','max','step','list','autoComplete','placeHolder',]);if($this->multiple)$attrsStr.=(strlen($attrsStr)>0?' ':'').'multiple="multiple"';if(!$this->form->GetFormTagRenderingStatus())$attrsStr.=(strlen($attrsStr)>0?' ':'').'form="'.$this->form->GetId().'"';$valueStr=$this->multiple&&gettype($this->value)=='array'?implode(',',(array)$this->value):(string)$this->value;$valueStr=htmlspecialchars_decode(htmlspecialchars($valueStr,ENT_QUOTES),ENT_QUOTES);$formViewClass=$this->form->GetViewClass();$result=$formViewClass::Format(static::$templates->control,['id'=>$this->id,'name'=>$this->name.($this->multiple?'[]':''),'type'=>$this->type,'value'=>$valueStr.'" data-value="'.$valueStr,'attrs'=>strlen($attrsStr)>0?' '.$attrsStr:'',]);return$this->renderControlWrapper($result);}}}
namespace MvcCore\Ext\Forms\Fields{class Password extends Text{protected$type='password';protected$validators=[];}}
namespace MvcCore\Ext\Forms\Fields{class Search extends Text{protected$type='search';protected$placeHolder='Search';}}
namespace MvcCore\Ext\Forms\Fields{class Tel extends Text{protected$type='tel';protected$validators=['Tel'];}}
namespace MvcCore\Ext\Forms\Fields{class Url extends Text{protected$type='url';protected$placeHolder='http(s)://domain.com';protected$validators=['Url'];}}
namespace MvcCore\Ext\Forms\Fields{class Email extends Text implements\MvcCore\Ext\Forms\Fields\IMultiple{use\MvcCore\Ext\Forms\Field\Props\Multiple;protected$type='email';protected$placeHolder='your.name@domain.com';protected$validators=['Email'];public function&GetValidatorData($fieldPropsDefaultValidValues=[]){$parentResult=parent::GetValidatorData($fieldPropsDefaultValidValues);$parentResult['multiple']=$this->multiple;return$parentResult;}public function RenderControl(){if($this->multiple)$this->SetControlAttr('multiple','multiple');return parent::RenderControl();}}}
namespace MvcCore\Ext\Routers{class MediaAndLocalization extends\MvcCore\Router implements\MvcCore\Ext\Routers\IMedia,\MvcCore\Ext\Routers\ILocalization,\MvcCore\Ext\Routers\IExtended{use\MvcCore\Ext\Routers\Extended;use\MvcCore\Ext\Routers\Media\PropsGettersSetters;use\MvcCore\Ext\Routers\Media\Preparing;use\MvcCore\Ext\Routers\Media\PreRouting;use\MvcCore\Ext\Routers\Localization\PropsGettersSetters;use\MvcCore\Ext\Routers\Localization\Preparing;use\MvcCore\Ext\Routers\Localization\PreRouting;use\MvcCore\Ext\Routers\Localization\RewriteRouting;use\MvcCore\Ext\Routers\MediaAndLocalization\RedirectSections;use\MvcCore\Ext\Routers\MediaAndLocalization\UrlByRouteSections;use\MvcCore\Ext\Routers\MediaAndLocalization\UrlByRoute;use\MvcCore\Ext\Routers\MediaAndLocalization\Routing;const VERSION='5.0.0-alpha';}}
namespace MvcCore\Ext\Routers{class Module extends\MvcCore\Router implements\MvcCore\Ext\Routers\IModule,\MvcCore\Ext\Routers\IMedia,\MvcCore\Ext\Routers\ILocalization,\MvcCore\Ext\Routers\IExtended{use\MvcCore\Ext\Routers\Extendeds\PropsGettersSetters;use\MvcCore\Ext\Routers\Extendeds\Preparing;use\MvcCore\Ext\Routers\Extendeds\RedirectHelpers;use\MvcCore\Ext\Routers\Extendeds\Url;use\MvcCore\Ext\Routers\Media\PropsGettersSetters;use\MvcCore\Ext\Routers\Media\Preparing;use\MvcCore\Ext\Routers\Media\PreRouting;use\MvcCore\Ext\Routers\Localization\PropsGettersSetters;use\MvcCore\Ext\Routers\Localization\Preparing;use\MvcCore\Ext\Routers\Localization\PreRouting;use\MvcCore\Ext\Routers\Localization\RewriteRouting;use\MvcCore\Ext\Routers\MediaAndLocalization\RedirectSections;use\MvcCore\Ext\Routers\MediaAndLocalization\UrlByRouteSections;use\MvcCore\Ext\Routers\MediaAndLocalization\Routing;use\MvcCore\Ext\Routers\Module\Props;use\MvcCore\Ext\Routers\Module\RouteMethods;use\MvcCore\Ext\Routers\Module\Redirect;use\MvcCore\Ext\Routers\Module\UrlByRoute;use\MvcCore\Ext\Routers\Module\UrlByQuery;use\MvcCore\Ext\Routers\Module\DomainRouting;use\MvcCore\Ext\Routers\Module\Canonical;const VERSION='5.0.0-alpha';}}
namespace{\App\Bootstrap::Init();\MvcCore\Application::GetInstance()->Run();}